{"version":3,"sources":["../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/angularCompatibility.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","_","isObject","Object","isExtensible","let","result","const","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","isError","error","Error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","copyPrototype","getOwnPropertyNames","prototype","prop","defineProperty","getOwnPropertyDescriptor","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","call","onFinally","computeValue","propertyStats","$destroyed","$$touchThis","oldPropertyFrozen","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","forEach","startsWith","includes","absolutePath","allPaths","sortBy","otherPath","extractCommonPathPrefix","prefixSegments","firstMismatchIndex","maxIndex","Math","min","relativizePaths","offset","toFirebaseJson","vue","lastDigestRequest","digestInProgress","bareDigest","digestRequest","angularProxy","active","window","angular","module","digest","watch","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","debounce","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","getPrototypeOf","angularDigest","$digest","original","Vue","data","nextTick","last","_watchers","id","Infinity","method","noop","LruCacheItem","touch","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","exists","writeSerial","_path","_value","_exists","_writeSerial","prototypeAccessors","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","seal","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","compact","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","once","snapshot","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","isMatch","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","snapshots","jsonSnapshot","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","assign","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","unused","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","connectReference","updateFn","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","unobserve","observe","subReady","_updateRefValue","childKeys","childKey","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","operand","_type","_target","_operand","_ready","_running","_ended","_tries","_slowHandles","targets","escapedPathFragment","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","getRandomValues","crypto","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","array","Uint8Array","random","MetaTree","dispatcher","_rootUrl","_dispatcher","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_auth","serial","initialAuthChangeReceived","_handleAuthChange","_connectInfoProperty","root","$data","authenticate","rememberMe","unauthenticate","approved","supersededChange","authSerial","_isAuthChangeStale","property","attribute","propertyUrl","snap","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","BaseValue","$meta","meta","$store","store","$now","$newKey","newKey","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","$observe","subjectFn","callbackFn","unobserveAndRemoveFinalizer","$when","expression","when","writable","Value","$parent","$path","$refs","$key","lastIndexOf","$hidden","$empty","isEmpty","$keys","$values","$ready","$overridden","$nextTick","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","node","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","_wrapProperties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","valueKey","pendingPromise","writeAllowed","unwatchNow","compute","finalValue","trussExpectedException","watcher","destroyObject","$finalize","isPlaceholder","isLocal","_hasLocalProperties","forEachPlaceholderChild","iteratee","checkVueObject","checkedObjects","top","trussCode","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","_queueSnapshotCallback","updatedKeys","_updateKeys","_applySnapshot","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","isTrunkCoupled","collectCoupledDescendantPaths","paths","Coupler","applySnapshot","prunePath","_pendingSnapshotCallbacks","_throttled","processPendingSnapshots","_processPendingSnapshots","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","throttleSnapshots","throttle","Transaction","_ref","_outcome","_values","currentValue","outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","throttleRemoteDataUpdates","numValues","_applyLocalWrite","pathPrefix","immediateFailure","_repair","attemptTransaction","txn","committed","basePath","flatten","numLocal","coupledDescendantPaths","descendantPath","subValue","_plantValue","_scaffoldAncestors","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","identity","cleanup","callbackPromise","oldValueClone","usePreciseDefaults","precise","numCallbacks","deep","newValueClone","defaultsDeep","defaults","timeoutHandle","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION","ComponentPlugin","install","Vue2","pluginOptions","prototypeExtension","_isBeingDestroyed","_isDestroyed","conflictingKeys","union","intersection","mixin","destroyed","$$trussFinalizers"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\.$#[\\]/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(_.isObject(object) && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[.$#[\\]]|\\\\(?![0-9a-f][0-9a-f])/i.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      // eslint-disable-next-line no-control-regex\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\nconst MIN_WORKER_VERSION = '0.8.0';\n\n\nclass Snapshot {\n  constructor({path, value, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    Object.seal(this);\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) throw new Error('localStorage and sessionStorage not available');\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) {\n          return Promise.reject(new Error(\n            `Incompatible Firetruss worker version: ${response.version} ` +\n            `(${MIN_WORKER_VERSION} or better required)`\n          ));\n        }\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || _.constant(true);\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (!_.isFunction(fn)) throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    }\n    return Promise.resolve();\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    const simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'once':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(_.map(simulatedCalls, message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (_.every(securityTraces, trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return _.compact(securityTraces).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  once(url, writeSerial) {\n    return this._send({msg: 'once', url, writeSerial}).then(snapshot => new Snapshot(snapshot));\n  }\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback, handle => _.isMatch(handle, {listenerKey, eventType, context})\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of _.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send(\n      {msg: 'transaction', url, oldValue, relativeUpdates, writeSerial}\n    ).then(result => {\n      if (result.snapshots) {\n        result.snapshots = _.map(result.snapshots, jsonSnapshot => new Snapshot(jsonSnapshot));\n      }\n      return result;\n    });\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = _.noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction errorFromJson(json, params) {\n  if (!json || _.isError(json)) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      error.extra = error.extra || {};\n      error.extra[propertyName] = json[propertyName];\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\nexport function copyPrototype(a, b) {\n  for (const prop of Object.getOwnPropertyNames(a.prototype)) {\n    if (prop === 'constructor') continue;\n    Object.defineProperty(b.prototype, prop, Object.getOwnPropertyDescriptor(a.prototype, prop));\n  }\n}\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.forEach(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.forEach(this._angularUnwatches, unwatch => {unwatch();});\n    _.forEach(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (unused, key) => ({\n      configurable: true, enumerable: false, get: () => {\n        const descriptor = this._vue.descriptors[key];\n        if (descriptor instanceof Reference) return descriptor.value;\n        return this._vue.values[key];\n      }\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.forEach(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.observe here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.forEach(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.forEach(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    Vue.set(this._vue.values, key, undefined);\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      this._disconnects[key] = this._tree.connectReference(descriptor, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.observe here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unobserve = this._disconnects[key] = this._tree.truss.observe(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unobserve();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.includes(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      // eslint-disable-next-line no-invalid-this\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual, copyPrototype} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nexport class BaseValue {\n  get $meta() {return this.$truss.meta;}\n  get $store() {return this.$truss.store;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n\n  $newKey() {return this.$truss.newKey();}\n\n  $intercept(actionType, callbacks) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $observe(subjectFn, callbackFn, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    let unobserveAndRemoveFinalizer;\n\n    const unobserve = this.$truss.observe(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unobserveAndRemoveFinalizer = () => {  // eslint-disable-line prefer-const\n      unobserve();\n      _.pull(this.$$finalizers, unobserveAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unobserveAndRemoveFinalizer);\n    return unobserveAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}  // eslint-disable-line lodash/prefer-constant\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}  // eslint-disable-line lodash/prefer-constant\n\n  $nextTick() {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.nextTick();\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    /* eslint-disable no-unused-expressions */\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$store;\n    }\n    /* eslint-enable no-unused-expressions */\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $destroyed() {  // eslint-disable-line lodash/prefer-constant\n    return false;\n  }\n}\n\ncopyPrototype(BaseValue, Value);\n\n_.forEach(Value.prototype, (prop, name) => {\n  Object.defineProperty(\n    Value.prototype, name, {value: prop, enumerable: false, configurable: false, writable: false});\n});\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.forEach(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.forEach(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.forEach(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {  // eslint-disable-line no-empty-function\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.forEach(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get,\n            set: descriptor.set\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.forEach(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n          _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else if (!_.has(mount, 'placeholder')) {\n        mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n        targetMount.escapedKey === escapedKey ||\n        targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$'\n      )) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.assign(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.forEach(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (angular.active) this._wrapProperties(object);\n\n    if (mount.keysUnsafe) {\n      properties.$data = {value: Object.create(null), configurable: true, enumerable: true};\n    }\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.forEach(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _wrapProperties(object) {\n    _.forEach(object, (value, key) => {\n      const valueKey = '$_' + key;\n      Object.defineProperties(object, {\n        [valueKey]: {value, writable: true},\n        [key]: {\n          get: () => object[valueKey],\n          set: arg => {object[valueKey] = arg; angular.digest();},\n          enumerable: true, configurable: true\n        }\n      });\n    });\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value, pendingPromise;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      let unwatch = () => {unwatchNow = true;};\n      unwatch = vue.$watch(compute, newValue => {\n        if (object.$destroyed) {\n          unwatch();\n          return;\n        }\n        if (pendingPromise) {\n          if (pendingPromise.cancel) pendingPromise.cancel();\n          pendingPromise = undefined;\n        }\n        if (_.isObject(newValue) && _.isFunction(newValue.then)) {\n          const promise = newValue.then(finalValue => {\n            if (promise === pendingPromise) update(finalValue);\n            // No need to angular.digest() here, since if we're running under Angular then we expect\n            // promises to be aliased to its $q service, which triggers digest itself.\n          }, error => {\n            if (promise === pendingPromise && update(new ErrorWrapper(error)) &&\n                !error.trussExpectedException) throw error;\n          });\n          pendingPromise = promise;\n        } else if (update(newValue)) {\n          angular.digest();\n          if (newValue instanceof ErrorWrapper && !newValue.error.trussExpectedException) {\n            throw newValue.error;\n          }\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      // Hack to change order of computed property watchers.  By flipping their ids to be negative,\n      // we ensure that they will settle before all other watchers, and also that children\n      // properties will settle before their parents since values are often aggregated upwards.\n      const watcher = _.last(vue._watchers);\n      watcher.id = -watcher.id;\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        // Freeze the computed value so it can't be accidentally modified by a third party.  Ideally\n        // we'd freeze it before setting it so that Vue wouldn't instrument the object recursively\n        // (since it can't change anyway), but we actually need the instrumentation in case a client\n        // tries to access an inexistent property off a computed pointer to an unfrozen value (e.g.,\n        // a $truss-ified object).  When instrumented, Vue will add a dependency on the unfrozen\n        // value in case the property is later added.  If uninstrumented, the dependency won't be\n        // added and we won't be notified.  And Vue only instruments extensible objects...\n        freeze(newValue);\n        return true;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get() {\n        if (!writeAllowed && value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set(newValue) {\n        if (writeAllowed) {\n          value = newValue;\n        } else if (prop.set) {\n          prop.set.call(this, newValue);\n        } else {\n          throw new Error(`You cannot set a computed property: ${prop.name}`);\n        }\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some finalizers remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n    Object.defineProperty(\n      object, '$destroyed', {value: true, enumerable: false, configurable: false});\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path, value) {\n    // eslint-disable-next-line no-shadow\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (mount && mount.local) return true;\n    if (this._hasLocalProperties(mount, value)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return false;\n  }\n\n  _hasLocalProperties(mount, value) {\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (!mount.localDescendants || !_.isObject(value)) return false;\n    for (const key in value) {\n      const local =\n        this._hasLocalProperties(mount.children[escapeKey(key)] || mount.children.$, value[key]);\n      if (local) return true;\n    }\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.forEach(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key) ||\n            /^\\$_/.test(key)) continue;\n        // eslint-disable-next-line no-shadow\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        let value;\n        try {\n          value = object[key];\n        } catch (e) {\n          // Ignore any values that hold exceptions, or otherwise throw on access -- we won't be\n          // able to check them anyway.\n          continue;\n        }\n        if (!(_.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = value;\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(_.isFunction(value) || value instanceof Promise)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  /* eslint-disable no-invalid-this */\n  if (this.$destroyed) return;\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  const oldPropertyFrozen = currentPropertyFrozen;\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = oldPropertyFrozen;\n  }\n  /* eslint-enable no-invalid-this */\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        /* eslint-disable no-invalid-this */\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n        /* eslint-enable no-invalid-this */\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    }\n    return wrapConnections(object, descriptor);\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || !_.isObject(object) || Object.isFrozen(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) return _.map(object, value => freeze(value));\n  return _.mapValues(object, value => freeze(value));\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport Reference from './Reference.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(ref) {\n    this._ref = ref;\n    this._outcome = undefined;\n    this._values = undefined;\n  }\n\n  get currentValue() {return this._ref.value;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', undefined, createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  throttleRemoteDataUpdates(delay) {\n    this._coupler.throttleSnapshots(delay);\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    const numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    if (this._applyLocalWrite(values, method === 'override')) return Promise.resolve();\n    const pathPrefix = extractCommonPathPrefix(values);\n    relativizePaths(pathPrefix, values);\n    if (pathPrefix !== ref.path) ref = new Reference(ref._tree, pathPrefix, ref._annotations);\n    const url = this._rootUrl + pathPrefix;\n    const writeSerial = this._writeSerial;\n    const set = numValues === 1;\n    const operand = set ? values[''] : values;\n    return this._dispatcher.execute('write', set ? 'set' : 'update', ref, operand, () => {\n      const promise = this._bridge[set ? 'set' : 'update'](url, operand, writeSerial);\n      return promise.catch(e => {\n        if (!e.immediateFailure) return Promise.reject(e);\n        return promiseFinally(this._repair(ref, values), () => Promise.reject(e));\n      });\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) {\n        return Promise.reject(new Error('Transaction needed too many retries, giving up'));\n      }\n      const txn = new Transaction(ref);\n      let oldValue;\n      // Ensure that Vue's watcher queue gets emptied and computed properties are up to date before\n      // running the updateFunction.\n      return Vue.nextTick().then(() => {\n        oldValue = toFirebaseJson(txn.currentValue);\n        return updateFunction(txn);\n      }).then(() => {\n        if (!_.isEqual(oldValue, toFirebaseJson(txn.currentValue))) return attemptTransaction();\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._applyLocalWrite({[ref.path]: values['']})) return Promise.resolve();\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            if (this._applyLocalWrite(values)) return Promise.resolve();\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          _.forEach(result.snapshots, snapshot => this._integrateSnapshot(snapshot));\n          return result.committed ? txn : attemptTransaction();\n        }, e => {\n          if (e.immediateFailure && (txn.outcome === 'set' || txn.outcome === 'update')) {\n            return promiseFinally(this._repair(ref, values), () => Promise.reject(e));\n          }\n          return Promise.reject(e);\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, undefined, attemptTransaction);\n    });\n  }\n\n  _repair(ref, values) {\n    // If a write fails early -- that is, before it gets applied to the Firebase client's local\n    // tree -- then we need to repair our own local tree manually since Firebase won't send events\n    // to unwind the change.  This should be very rare since it's always due to a developer mistake\n    // so we don't need to be particularly efficient.\n    const basePath = ref.path;\n    const paths = _(values).keys().map(key => {\n      let path = basePath;\n      if (key) path = joinPath(path, key);\n      return _.keys(this._coupler.findCoupledDescendantPaths(path));\n    }).flatten().value();\n    return Promise.all(_.map(paths, path => {\n      return this._bridge.once(this._rootUrl + path).then(snap => {\n        this._integrateSnapshot(snap);\n      });\n    }));\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    let numLocal = 0;\n    _.forEach(values, (value, path) => {\n      const local = this._modeler.isLocal(path, value);\n      if (local) numLocal++;\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue.$data[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override, local,\n            createdObjects\n          );\n        }\n        if (!override && !local) this._localWrites[descendantPath] = this._writeSerial;\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n    if (numLocal && numLocal < _.size(values)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return override || !!numLocal;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    const properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (_.startsWith(name, '$')) descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss) || object.$destroyed) return;\n    this._modeler.destroyObject(object);\n    // Normally we'd only destroy enumerable children, which are the Firebase properties.  However,\n    // clients have the option of creating hidden placeholders, so we need to scan non-enumerable\n    // properties as well.  To distinguish such placeholders from the myriad other non-enumerable\n    // properties (that lead all over tree, e.g. $parent), we check that the property's parent is\n    // ourselves before destroying.\n    for (const key of Object.getOwnPropertyNames(object)) {\n      const child = object.$data[key];\n      if (child && child.$parent === object) this._destroyObject(child);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.forEach(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(\n          snap.path, snap.key, snap.value, parent, true, false, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(\n          ancestorPath, key, {}, object, remoteWrite, false, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    }\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, local, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    let object = parent.$data[key];\n    if (!_.isArray(value) && !(local ? _.isPlainObject(value) : _.isObject(value))) {\n      this._destroyObject(object);\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    // Plant hidden placeholders first, so their computed watchers will have a similar precedence to\n    // the parent object, and the parent object's other children will get computed first.  This can\n    // optimize updates when parts of a complex model are broken out into hidden sub-models, and\n    // shouldn't risk being overwritten by actual Firebase data since that will rarely (never?) be\n    // hidden.\n    if (objectCreated) this._plantPlaceholders(object, path, true, createdObjects);\n    _.forEach(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, local, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, false, createdObjects);\n    } else {\n      _.forEach(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, hidden, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, mount => {\n      if (hidden !== undefined && hidden !== !!mount.hidden) return;\n      const key = unescapeKey(mount.escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, mount.escapedKey), key, mount.placeholder, object, false, false, false,\n          createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object && object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object && object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(\n            parent, object && object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (object === undefined || object === null) return false;\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (!_.isObject(object) || !object.$truss) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.forEach(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object.$data[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, data, key) {\n    const descriptor = Object.getOwnPropertyDescriptor(data, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        const child = data[key];\n        if (!child || child.$parent !== object) {\n          throw new Error(\n            `Key conflict between Firebase and instance or computed properties at ` +\n            `${object.$path}: ${key}`);\n        }\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in data) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    let descriptor = this._getFirebasePropertyDescriptor(object, data, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(data, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (data[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      data[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(data, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(data, key);\n      Object.defineProperty(data, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, data, key);\n    this._destroyObject(data[key]);\n    Vue.delete(data, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.forEach(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (_.includes(path, '/')) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.forEach(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function extractCommonPathPrefix(values) {\n  let prefixSegments;\n  _.forEach(values, (value, path) => {\n    const segments = path === '/' ? [''] : splitPath(path, true);\n    if (prefixSegments) {\n      let firstMismatchIndex = 0;\n      const maxIndex = Math.min(prefixSegments.length, segments.length);\n      while (firstMismatchIndex < maxIndex &&\n             prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n        firstMismatchIndex++;\n      }\n      prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n      if (!prefixSegments.length) return false;\n    } else {\n      prefixSegments = segments;\n    }\n  });\n  return prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n}\n\nexport function relativizePaths(rootPath, values) {\n  const offset = rootPath === '/' ? 1 : rootPath.length + 1;\n  _.forEach(_.keys(values), path => {\n    values[path.slice(offset)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (!_.isObject(object)) return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nlet vue;\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  _.forEach(['digest', 'watch', 'defineModule', 'debounceDigest'], method => {\n    angularProxy[method] = _.noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(['$provide', function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue = new Vue({data: {digestRequest: 0}});\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            // Make sure we execute the digest outside the Vue task queue, because otherwise if the\n            // client replaced Promise with angular.$q all Truss.nextTick().then() functions will be\n            // executed inside the Angular digest and hence inside the Vue task queue. But\n            // Truss.nextTick() is used precisely to avoid that.  Note that it's OK to use\n            // Vue.nextTick() here because even though it will schedule a flush via Promise.then()\n            // it only uses the native Promise, before it could've been monkey-patched by the app.\n            Vue.nextTick(() => {\n              if (vue.digestRequest <= lastDigestRequest) return;\n              digestInProgress = true;\n              rootScope.$digest.original.call(rootScope);\n              lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n            });\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  }]);\n}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n/* eslint-disable no-use-before-define */\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '') || '/';\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        return mapping;\n      }\n      if (arg === undefined || arg === null) return;\n      escapedKeys.push(escapeKey(arg));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  test(pattern) {\n    return makePathMatcher(pattern).test(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.assign({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (!_.includes(childPath, '/')) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\nexport class Reference extends Handle {\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.assign({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec, this._annotations);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.assign(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.forEach(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.forEach(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.forEach(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport Reference from './Reference.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {joinPath} from './utils/paths.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'authenticate',\n  'unathenticate', 'certify', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(() => {\n      this._fired = true;\n      this._callback(this._operation);\n    }, this._delay - elapsed);\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target, operand) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._operand = operand;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get targets() {\n    if (this._method !== 'update') return [this._target];\n    return _.map(this._operand, (value, escapedPathFragment) => {\n      return new Reference(\n        this._target._tree, joinPath(this._target.path, escapedPathFragment),\n        this._target._annotations);\n    });\n  }\n  get operand() {return this._operand;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.forEach(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.forEach(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.includes(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.forEach(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, operand, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target, operand);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target, operand) {\n    return new Operation(operationType, method, target, operand);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      // If the operation ended in the meantime, bail.  This will cause the caller to attempt to\n      // fail the operation, but since it's already ended the call to end() with an error will be a\n      // no-op.\n      if (operation.ended) return;\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return Promise.resolve();\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) {\n      operation._error = error;\n    } else {\n      // In case we're racing with a retry(), wipe out the error.\n      delete operation._error;\n    }\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (!operation.error) return Promise.resolve();\n    const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n    return this._bridge.probeError(operation.error).then(() => {\n      if (onFailureCallbacks) {\n        setTimeout(() => {\n          _.forEach(onFailureCallbacks, onFailure => onFailure(operation));\n        }, 0);\n      }\n      return Promise.reject(operation.error);\n    });\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst getRandomValues = window.crypto && window.crypto.getRandomValues &&\n  window.crypto.getRandomValues.bind(window.crypto);\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);  // eslint-disable-line no-bitwise\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      if (getRandomValues) {\n        /* global Uint8Array */\n        const array = new Uint8Array(12);\n        getRandomValues(array);\n        for (let i = 0; i < 12; i++) {\n          // eslint-disable-next-line no-bitwise\n          this._lastRandomValues[i] = array[i] & (i ? 0x3f : 0x0f);\n        }\n      } else {\n        for (let i = 0; i < 12; i++) {\n          // Make sure to leave some space for incrementing in the top nibble.\n          this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n        }\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\nimport Reference from './Reference.js';\n\n\nexport default class MetaTree {\n  constructor(rootUrl, tree, bridge, dispatcher) {\n    this._rootUrl = rootUrl;\n    this._tree = tree;\n    this._dispatcher = dispatcher;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            Vue.set(this, key, Date.now() + this.timeOffset);\n            angular.digest();\n          };\n          update();\n          setInterval(update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    this._auth = {serial: 0, initialAuthChangeReceived: false};\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  authenticate(token) {\n    this._auth.serial++;\n    return this._dispatcher.execute(\n      'auth', 'authenticate', new Reference(this._tree, '/'), token, () => {\n        return this._bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n      }\n    );\n  }\n\n  unauthenticate() {\n    // Signal user change to null pre-emptively.  This is what the Firebase SDK does as well, since\n    // it lets the app tear down user-required connections before the user is actually deauthed,\n    // which can prevent spurious permission denied errors.\n    this._auth.serial++;\n    return this._handleAuthChange(null).then(approved => {\n      // Bail if auth change callback initiated another authentication, since it will have already\n      // sent the command to the bridge and sending our own now would incorrectly override it.\n      if (!approved) return;\n      return this._dispatcher.execute(\n        'auth', 'unauthenticate', new Reference(this._tree, '/'), undefined, () => {\n          return this._bridge.unauth(this._rootUrl);\n        }\n      );\n    });\n  }\n\n  _handleAuthChange(user) {\n    const supersededChange = !this._auth.initialAuthChangeReceived && this._auth.serial;\n    if (user !== undefined) this._auth.initialAuthChangeReceived = true;\n    if (supersededChange) return;\n    const authSerial = this._auth.serial;\n    if (this.root.user === user) return Promise.resolve(false);\n    return this._dispatcher.execute('auth', 'certify', new Reference(this._tree, '/'), user, () => {\n      if (this.root.user === user || authSerial !== this._auth.serial) return false;\n      if (user) Object.freeze(user);\n      this.root.user = user;\n      this.root.userid = user && user.uid;\n      angular.digest();\n      return true;\n    });\n  }\n\n  _isAuthChangeStale(user) {\n    return this.root.user === user;\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError, this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    this._coupler._queueSnapshotCallback(() => {\n      // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n      // tree, then tell the client to update its keys, pulling values from the tree.\n      if (!this._listeners.length || !this._listening) return;\n      const updatedKeys = this._updateKeys(snap);\n      this._coupler._applySnapshot(snap);\n      if (!this.ready) {\n        this.ready = true;\n        angular.digest();\n        for (const listener of this._listeners) {\n          this._coupler._dispatcher.markReady(listener.operation);\n        }\n      }\n      if (updatedKeys) {\n        for (const listener of this._listeners) {\n          if (listener.keysCallback) listener.keysCallback(updatedKeys);\n        }\n      }\n    });\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.includes(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else if (hasKey) {\n        this._coupler._decoupleSegments(this._segments.concat(snap.key));\n        _.pull(this._keys, snap.key);\n        this._keys.sort();\n        updatedKeys = this._keys;\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.forEach(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError, this,\n        {sync: true});\n      this.listening = true;\n    } else {\n      _.forEach(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.forEach(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    this._coupler._queueSnapshotCallback(() => {\n      if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n      this._coupler._applySnapshot(snap);\n      if (!this.ready && snap.path === this.path) {\n        this.ready = true;\n        angular.digest();\n        this.unlisten(true);\n        this._forAllDescendants(node => {\n          for (const op of node.operations) this._coupler._dispatcher.markReady(op);\n        });\n      }\n    });\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of node.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.forEach(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.forEach(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._pendingSnapshotCallbacks = [];\n    this._throttled = {processPendingSnapshots: this._processPendingSnapshots};\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: undefined, queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    Object.freeze(this);\n    // Set root node after freezing Coupler, otherwise it gets vue-ified too.\n    this._vue.$data.root = new Node(this, '/');\n    this._nodeIndex['/'] = this._root;\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.forEach(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n  }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n  _queueSnapshotCallback(callback) {\n    this._pendingSnapshotCallbacks.push(callback);\n    this._throttled.processPendingSnapshots.call(this);\n  }\n\n  _processPendingSnapshots() {\n    for (const callback of this._pendingSnapshotCallbacks) callback();\n    this._pendingSnapshotCallbacks.splice(0, Infinity);\n  }\n\n  throttleSnapshots(delay) {\n    if (delay) {\n      this._throttled.processPendingSnapshots = _.throttle(this._processPendingSnapshots, delay);\n    } else {\n      this._throttled.processPendingSnapshots = this._processPendingSnapshots;\n    }\n  }\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle} from './Reference.js';\nimport {BaseValue} from './Modeler.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP, copyPrototype} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = '0.9.1';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n    this._metaTree = new MetaTree(this._rootUrl, this._tree, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get store() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._metaTree.authenticate(token);\n  }\n\n  unauthenticate() {\n    return this._metaTree.unauthenticate();\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback || _.identity);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unobserve = this.observe(() => connector.ready, ready => {\n        if (!ready) return;\n        unobserve();\n        unobserve = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unobserve) {unobserve(); unobserve = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  observe(subjectFn, callbackFn, options) {\n    const usePreciseDefaults = _.isObject(options && options.precise);\n    let numCallbacks = 0;\n    let oldValueClone;\n    if (usePreciseDefaults) oldValueClone = _.clone(options.precise, options.deep);\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      if (options && options.precise) {\n        const newValueClone = usePreciseDefaults ?\n          (options.deep ?\n            _.defaultsDeep({}, newValue, options.precise) :\n            _.defaults({}, newValue, options.precise)) :\n          _.clone(newValue, options.deep);\n        if (_.isEqual(newValueClone, oldValueClone)) return;\n        oldValueClone = newValueClone;\n      }\n      numCallbacks++;\n      if (!unwatch) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1) return;\n          callbackFn(newValue, oldValue);\n          // No need to digest since under Angular we'll be using $q as Promise.\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    if (options && options.scope) options.scope.$on('$destroy', unwatch);\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unobserve = this.observe(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unobserve) {unobserve(); unobserve = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup), cleanup);\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  nextTick() {\n    let cleanup;\n    let promise = new Promise((resolve, reject) => {\n      Vue.nextTick(resolve);\n      cleanup = () => {\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promise, cleanup);\n    return promise;\n  }\n\n  throttleRemoteDataUpdates(delay) {\n    this._tree.throttleRemoteDataUpdates(delay);\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION},\n\n  ComponentPlugin: {value: {\n    install(Vue2, pluginOptions) {\n      if (Vue !== Vue2) throw new Error('Multiple versions of Vue detected');\n      if (!pluginOptions.truss) {\n        throw new Error('Need to pass `truss` instance as an option to use the ComponentPlugin');\n      }\n      const prototypeExtension = {\n        $truss: {value: pluginOptions.truss},\n        $destroyed: {get() {return this._isBeingDestroyed || this._isDestroyed;}},\n        $$touchThis: {value() {if (this.__ob__) this.__ob__.dep.depend();}}\n      };\n      const conflictingKeys = _(prototypeExtension).keys()\n        .union(_.keys(BaseValue.prototype)).intersection(_.keys(Vue.prototype)).value();\n      if (conflictingKeys.length) {\n        throw new Error(\n          'Truss extension properties conflict with Vue properties: ' + conflictingKeys.join(', '));\n      }\n      Object.defineProperties(Vue.prototype, prototypeExtension);\n      copyPrototype(BaseValue, Vue);\n      Vue.mixin({\n        destroyed() {\n          if (_.has(this, '$$trussFinalizers')) {\n            // Some finalizers remove themselves from the array, so clone it before iterating.\n            for (const fn of _.clone(this.$$trussFinalizers)) fn();\n          }\n        }\n      });\n    }\n  }}\n});\n\nangular.defineModule(Truss);\n\n"]}