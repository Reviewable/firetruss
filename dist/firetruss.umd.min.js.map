{"version":3,"sources":["../src/angularCompatibility.js","../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","isExtensible","let","result","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","computeValue","prop","propertyStats","$$destroyed","$$touchThis","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isObject","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","startsWith","absolutePath","allPaths","sortBy","otherPath","relativizePaths","offset","toFirebaseJson","Vue","data","active","forEach","method","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","Math","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","writeSerial","_path","_value","_valueError","_exists","_writeSerial","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","contains","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","root","$data","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","Value","$parent","$path","defineProperty","$refs","$key","lastIndexOf","$hidden","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","writable","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","writeAllowed","unwatchNow","compute","computationSerial","finalValue","destroyObject","$finalize","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","Function","Transaction","currentValue","_currentValue","outcome","_outcome","_values","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","snapshot","coupledDescendantPaths","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(typeof object === 'object' && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[.$#\\[\\]]|\\\\(?!\\d\\d)/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates, writeSerial});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: false, get: () => this._vue.values[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n\n  get $$destroyed() {\n    return false;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n            targetMount.escapedKey === escapedKey ||\n            targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$')) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.each(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get: function() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) {\n      properties.$data = {value: Object.create(null), configurable: true, enumerable: true};\n    }\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      let unwatch = () => {unwatchNow = true;};\n      unwatch = vue.$watch(compute, newValue => {\n        if (object.$$destroyed) {\n          unwatch();\n          return;\n        }\n        if (_.isObject(newValue) && newValue.then) {\n          const computationSerial = propertyStats.numRecomputes;\n          newValue.then(finalValue => {\n            if (computationSerial === propertyStats.numRecomputes) update(finalValue);\n          }, error => {\n            if (computationSerial === propertyStats.numRecomputes) {\n              if (update(new ErrorWrapper(error))) throw error;\n            }\n          });\n        } else {\n          if (update(newValue)) {\n            angular.digest();\n            if (newValue instanceof ErrorWrapper) throw newValue.error;\n          }\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        freeze(newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n    Object.defineProperty(\n      object, '$$destroyed', {value: true, enumerable: false, configurable: false});\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key)) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function || value instanceof Promise)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  if (this.$$destroyed) return;\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || Object.isFrozen(object) || !_.isObject(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) {\n    return _.map(object, value => freeze(value));\n  } else {\n    return _.mapValues(object, value => freeze(value));\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, currentValue) {\n    this._path = path;\n    this._currentValue = currentValue;\n  }\n\n  get currentValue() {return this._currentValue;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const currentValue = ref.value;\n      const txn = new Transaction(ref.path, currentValue);\n      // Resolve an empty promise before running the update function to ensure that Vue's watcher\n      // queue gets emptied (it's also scheduled as a microtask) and computed properties are up to\n      // date.\n      return Promise.resolve().then(() => updateFunction(txn)).then(() => {\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        // Capture old value before applying local writes.\n        const oldValue = toFirebaseJson(currentValue);\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._modeler.isLocal(ref.path)) {\n              throw new Error(`Commit in local subtree: ${ref.path}`);\n            }\n            this._applyLocalWrite({[ref.path]: values['']});\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            _(values).keys().each(path => {\n              if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n            });\n            this._applyLocalWrite(values);\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          if (result.committed) {\n            txn._currentValue = result.currentValue;\n            return txn;\n          } else {\n            this._integrateSnapshot(result.snapshot);\n            return attemptTransaction();\n          }\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override,\n            createdObjects\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : splitPath(path, true);\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    relativizePaths(pathPrefix, values);\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (_.startsWith(name, '$')) descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(snap.path, snap.key, snap.value, parent, true, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    _.each(segments, (segment, i) => {\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(ancestorPath, key, {}, object, remoteWrite, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    let object = parent[key];\n    if (!_.isArray(value) && !_.isPlainObject(value)) {\n      this._destroyObject(object);\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, createdObjects);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, escapedKey), key, placeholder, object, false, false, createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object && object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(parent, object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, data, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(data, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in data) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    let descriptor = this._getFirebasePropertyDescriptor(object, data, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(data, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (data[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      data[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(data, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(data, key);\n      Object.defineProperty(data, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, data, key);\n    this._destroyObject(data[key]);\n    Vue.delete(data, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  const offset = rootPath === '/' ? 1 : rootPath.length + 1;\n  _.each(_.keys(values), path => {\n    values[path.slice(offset)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object !== 'object') return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  test(pattern) {\n    return makePathMatcher(pattern).test(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils/promises.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    this._nodeIndex['/'] = this._root;\n    Object.freeze(this);\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}