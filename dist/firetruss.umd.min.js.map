{"version":3,"sources":["../src/angularCompatibility.js","../src/utils.js","../src/Bridge.js","../src/Modeler.js","../src/Tree.js","../src/Reference.js","../src/Connector.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../node_modules/performance-now/lib/performance-now.js","../src/Truss.js"],"names":["noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","wrapPromiseCallback","callback","Promise","resolve","apply","this","arguments","e","reject","makePathMatcher","pattern","let","matcher","pathMatchers","PathMatcher","_","size","maxNumPathMatchers","keys","errorFromJson","json","params","Error","const","error","message","propertyName","hasOwnProperty","extra","getUrlRoot","url","k","indexOf","computeValue","prop","stats","$$touchThis","startTime","performanceNow","result","get","call","runtime","numRecomputes","isTrussValueEqual","a","b","$truss","throwReadOnlyError","joinPath","segments","i","list","length","segment","charAt","splice","push","join","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","relativizePaths","each","path","startsWith","absolutePath","allPaths","map","sortBy","value","otherPath","toFirebaseJson","object","earlyDigestPending","bareDigest","angularProxy","active","window","angular","debounceDigest","wait","digest","debounce","forEach","method","module","run","$rootScope","$evalAsync","bind","defineModule","Truss","constant","SERVER_TIMESTAMP","Object","freeze",".sv","variables","pathTemplate","match","this$1","test","_regex","RegExp","_parentRegex","prototype","lastIndex","exec","bindings","testParent","bridge","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","_path","_value","_valueError","_exists","undefined","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","then","response","workerVersion","version","minVersion","sufficient","staticAccessors","instance","suspend","suspended","_receiveMessages","setImmediate","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","id","promise","oneWay","deferred","sent","resolveSent","postMessage","event","concat","data","messages","fn","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","catch","timeoutPromise","setTimeout","race","updateLocalStorage","item","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","set","writeSerial","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","console","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","Handle","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","isArray","mapping","subPath","rest","subRef","peek","truss","isEqual","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","JSON","stringify","some","clause","clone","childPath","_string","queryTerms","encodeURIComponent","prototypeAccessors$2","isReferenceReady","getObject","query","obj","commit","updateFunction","Connector","scope","connections","_scope","_connections","_method","_subConnectors","_currentDescriptors","_disconnects","_vue","Vue","mapValues","_linkScopeProperties","descriptor","isFunction","_bindComputedConnection","_connect","$on","$$id","destroy","_unlinkScopeProperties","_angularUnwatches","unwatch","_disconnect","duplicateKey","find","defineProperties","configurable","enumerable","$data","_updateComputedConnection","$watch","immediate","watch","newDescriptor","oldDescriptor","has","_updateConnections","updateFn","_updateScopeRef","connectReference","_updateScopeQuery","connectQuery","subScope","subConnector","subReady","delete","childKeys","changed","childKey","contains","split","root","INTERCEPT_KEYS","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","cancel","elapsed","Date","now","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_slowHandles","running","_error","onSlow","_setRunning","_markReady","_clearReady","Dispatcher","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","Math","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","updateNowAtIntervals","intervalMillis","angularCompatibility","deep","trackAuth","_handleAuthChange","_connectInfoProperty","$destroy","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","coupledDescendantPaths","isEmpty","subscribe","unsubscribe","findCoupledDescendantPaths","isSubtreeReady","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","RESERVED_VALUE_PROPERTY_NAMES","$parent","$key","$path","computedPropertyStats","Value","defineProperty","$refs","$keys","$values","subjectFn","callbackFn","unwatchAndRemoveDestructor","$$finalizers","writable","$set","$update","$commit","ComputedPropertyStats","numUpdates","Modeler","classes","_mounts","uniq","Class","_mountClass","flatten","patterns","mount","badPaths","groupBy","group","compact","_augmentClass","computedProperties","proto","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","getPrototypeOf","mounts","$trussMount","isString","variable","escapedKey","placeholder","createObject","properties","_buildComputedPropertyDescriptor","writeAllowed","firstCallback","$$initializers","vue","isPlaceholder","forEachPlaceholderChild","Transaction","currentValue","outcome","_outcome","_values","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_writeSerial","_localWrites","_localWriteTimestamp","_integrateSnapshot","_prune","_modeler","_createObject","_completeCreateObject","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","tries","attemptTransaction","txn","committed","offset","descendantPath","subValue","last","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","isObject","_setFirebaseProperty","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetObject","deleted","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","pathOrSegments","_getFirebasePropertyDescriptor","checkVueObject","workerFunctions","VERSION","_keyGenerator","_metaTree","meta","newKey","authenticate","rememberMe","unauthenticate","actionType","connect","connector","numCallbacks","checkObjectsForRogueProperties","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\n\n\nlet earlyDigestPending;\nlet bareDigest = function() {\n  earlyDigestPending = true;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular,\n  debounceDigest(wait) {\n    if (wait) {\n      angularProxy.digest = _.debounce(bareDigest, wait);\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  }\n};\n['digest', 'defineModule'].forEach(method => {angularProxy[method] = noop;});\n\nif (angularProxy.active) {\n  angularProxy.digest = bareDigest;\n  window.angular.module('firetruss', []).run(['$rootScope', function($rootScope) {\n    bareDigest = $rootScope.$evalAsync.bind($rootScope);\n    if (earlyDigestPending) bareDigest();\n  }]);\n  angularProxy.defineModule = function(Truss) {\n    window.angular.module('firetruss').constant('Truss', Truss);\n  };\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\n\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]+/g, match => {\n      this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp('^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + '$');\n    this._parentRegex = new RegExp(\n      '^' + (pathTemplate.replace(/\\/[^/]*$/, '').replace(/\\u0001/g, '/([^/]+)') || '/') + '$');\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  testParent(path) {\n    return this._parentRegex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","/* global setImmediate */\n\nimport {unescapeKey} from './utils.js';\n\n// jshint browser:true\n\nlet bridge;\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  static init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  static get instance() {\n    if (!bridge) throw new Error('No web worker connected, please call Truss.connectWorker first');\n    return bridge;\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) setImmediate(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) setImmediate(this._flushMessageQueue);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (let message of messages) {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage(items) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (let item in items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (let listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (let id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (let id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (let id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (let propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import Reference from './Reference.js';\nimport {makePathMatcher} from './utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$truss: true, $parent: true, $key: true, $path: true};\n\nconst computedPropertyStats = {};\n\n\nclass Value {\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n  }\n  get $refs() {return [this.$ref];}\n  get $keys() {return _.keys(this);}\n  get $values() {return _.values(this);}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n\n  $watch(subjectFn, callbackFn) {\n    let unwatchAndRemoveDestructor;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this));\n\n    if (!this.$$finalizers) {\n      Object.defineProperty(this, '$$finalizers', {\n        value: [], writable: false, enumerable: false, configurable: false});\n    }\n    unwatchAndRemoveDestructor = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveDestructor);\n    };\n    this.$$finalizers.push(unwatchAndRemoveDestructor);\n    return unwatchAndRemoveDestructor;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n  // TODO\n  // $temporarilyOverride(updateFn)\n  // $onPropertyChange(method)\n  // $freezeProperty\n}\n\nclass ComputedPropertyStats {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n}\n\n\nexport default class Modeler {\n  constructor(classes) {\n    this._mounts = _(classes).uniq().map(Class => this._mountClass(Class)).flatten().value();\n    const patterns = _.map(this._mounts, mount => mount.matcher.toString());\n    if (patterns.length !== _.uniq(patterns).length) {\n      const badPaths = _(patterns)\n        .groupBy()\n        .map((group, key) =>\n          group.length === 1 ? null : key.replace(/\\(\\[\\^\\/\\]\\+\\)/g, '$').slice(1, -1))\n        .compact()\n        .value();\n      throw new Error('Paths have multiple mounted classes: ' + badPaths.join(', '));\n    }\n  }\n\n  destroy() {\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (let name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (let name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class) {\n    const computedProperties = this._augmentClass(Class);\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    return _.map(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      const matcher = makePathMatcher(mount.path);\n      for (let variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (mount.placeholder && escapedKey.charAt(0) === '$') {\n        throw new Error(\n          `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n      }\n      return {Class, matcher, computedProperties, escapedKey, placeholder: mount.placeholder};\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    let Class = Value;\n    let computedProperties;\n    for (let mount of this._mounts) {\n      const match = mount.matcher.match(path);\n      if (match) {\n        Class = mount.Class;\n        computedProperties = mount.computedProperties;\n        for (let variable in match) {\n          properties[variable] = {\n            value: match[variable], writable: false, configurable: false, enumerable: false\n          };\n        }\n        break;\n      }\n    }\n\n    const object = new Class();\n\n    if (computedProperties) {\n      _.each(computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    if (!computedPropertyStats[prop.fullName]) {\n      Object.defineProperty(computedPropertyStats, prop.fullName, {\n        value: new ComputedPropertyStats(prop.fullName), writable: false, enumerable: true,\n        configurable: false\n      });\n    }\n    const stats = computedPropertyStats[prop.fullName];\n\n    let value;\n    let writeAllowed = false;\n    let firstCallback = true;\n\n    if (!object.$$finalizers) {\n      Object.defineProperty(object, '$$finalizers', {\n        value: [], writable: false, enumerable: false, configurable: false});\n    }\n    if (!object.$$initializers) {\n      Object.defineProperty(object, '$$initializers', {\n        value: [], writable: false, enumerable: false, configurable: true});\n    }\n    object.$$initializers.push(vue => {\n      object.$$finalizers.push(\n        vue.$watch(computeValue.bind(object, prop, stats), newValue => {\n          if (firstCallback) {\n            stats.numUpdates += 1;\n            value = newValue;\n            firstCallback = false;\n          } else {\n            if (_.isEqual(value, newValue, isTrussValueEqual)) return;\n            stats.numUpdates += 1;\n            writeAllowed = true;\n            object[prop.name] = newValue;\n            writeAllowed = false;\n          }\n        }, {immediate: true})  // use immediate:true since watcher will run computeValue anyway\n      );\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {return value;},\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  isPlaceholder(path) {\n    // TODO: optimize by precomputing a single all-placeholder-paths regex\n    return _.some(this._mounts, mount => mount.placeholder && mount.matcher.test(path));\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    _.each(this._mounts, mount => {\n      if (mount.placeholder && mount.matcher.testParent(path)) {\n        iteratee(mount.escapedKey, mount.placeholder);\n      }\n    });\n  }\n\n  static get computedPropertyStats() {\n    return computedPropertyStats;\n  }\n}\n\n\nfunction computeValue(prop, stats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  const startTime = performanceNow();\n  const result = prop.get.call(this);\n  stats.runtime += performanceNow() - startTime;\n  stats.numRecomputes += 1;\n  return result;\n  // jshint validthis: false\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a && a.$truss || b && b.$truss) return a === b;\n}\n","import angularCompatibility from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, unescapeKey, SERVER_TIMESTAMP} from './utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, tree) {\n    this._path = path;\n    this._tree = tree;\n  }\n\n  get currentValue() {return this._tree.getObject(this._path);}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher, classes) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    if (angularCompatibility.active) {\n      this._vue.$watch('$data', angularCompatibility.digest, {deep: true});\n    }\n    this._modeler = new Modeler(classes);\n    this._vue.$data.$root = this._createObject('/', '');\n    this._completeCreateObject(this.root);\n    this._plantPlaceholders(this.root, '/');\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      const segments = _(ref.path).split('/').map(segment => unescapeKey(segment)).value();\n      unwatch = this._vue.$watch(this.getObject.bind(segments), valueCallback);\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running) this._coupler.couple(ref.path, operation);\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running) this._coupler.subscribe(query, operation, keysCallback);\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    const numValues = _.size(values);\n    if (!numValues) return;\n    if (method === 'update') checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    this._applyLocalWrite(values);\n    const url = this.rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const txn = new Transaction();\n      try {\n        updateFunction(txn);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      const oldValue = toFirebaseJson(this.getObject(ref.path));\n      switch (txn.outcome) {\n        case 'abort': return;\n        case 'cancel':\n          break;\n        case 'set':\n          this._applyLocalWrite({[ref.path]: txn.values['']});\n          break;\n        case 'update':\n          checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, txn.values, true);\n          this._applyLocalWrite(txn.values);\n          break;\n        default:\n          throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n      }\n      return this._bridge.transaction(\n        this._rootUrl + ref.path, oldValue, txn.values\n      ).then(committed => {\n        if (!committed) return attemptTransaction();\n        return txn;\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now();\n    _.each(values, (value, path) => {\n      const coupledDescendantPaths = this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (let descendantPath of coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath) {\n          const segments = subPath.split('/');\n          for (let segment of segments) {\n            subValue = subValue[unescapeKey(segment)];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(subPath);\n        } else {\n          const key = unescapeKey(_.last(descendantPath.split('/')));\n          this._plantValue(descendantPath, key, subValue, this._scaffoldAncestors(descendantPath));\n        }\n        this._localWrites[descendantPath] = this._writeSerial;\n      }\n    });\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [] : path.split('/');\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = '/' + prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (parent && _.has(parent, key)) throw new Error(`Duplicate object created for ${path}`);\n    let properties = {\n      $truss: {value: this._truss, writable: false, configurable: false, enumerable: false},\n      // We want Vue to wrap this; we'll make it non-enumerable in _completeCreateObject.\n      $parent: {value: parent, writable: false, configurable: true, enumerable: true},\n      $key: {value: key, writable: false, configurable: false, enumerable: false},\n      $path: {value: path, writable: false, configurable: false, enumerable: false},\n      $$touchThis: {\n        value: parent ? () => parent[key] : () => this._vue.$data.$root,\n        writable: false, configurable: false, enumerable: false\n      }\n    };\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _completeCreateObject(object) {\n    for (let name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') {\n          descriptor.configurable = false;\n          descriptor.set = throwReadOnlyError;\n        }\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n    if (object.$$initializers) {\n      for (let fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    if (object.$$finalizers) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (let fn of _.clone(object.$$finalizers)) fn();\n    }\n    for (let key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(_.keys(this._localWrites), (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const parent = this._scaffoldAncestors(snap.path, true);\n      if (parent) this._plantValue(snap.path, snap.key, snap.value, parent, true);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite) {\n    let object;\n    const segments = _(path).split('/').dropRight().value();\n    _.each(segments, (segment, i) => {\n      const childKey = unescapeKey(segment);\n      let child = childKey ? object[childKey] : this.root;\n      if (!child) {\n        const ancestorPath = segments.slice(0, i + 1).join('/');\n        if (remoteWrite && this._localWrites[ancestorPath || '/']) return;\n        child = this._plantValue(ancestorPath, childKey, {}, object);\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite) {\n    if (value === null || value === undefined) {\n      throw new Error('Snapshot includes invalid value: ' + value);\n    }\n    if (remoteWrite && this._localWrites[path]) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !_.isObject(value)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let object = parent[key];\n    if (object === undefined) {\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object);\n      this._completeCreateObject(object);\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite);\n    });\n    _.each(object, (item, childKey) => {\n      const escapedChildKey = escapeKey(childKey);\n      if (!value.hasOwnProperty(escapedChildKey)) {\n        this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n      }\n    });\n    this._plantPlaceholders(object, path);\n    return object;\n  }\n\n  _plantPlaceholders(object, path) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(joinPath(path, escapedKey), key, placeholder, object);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (!object) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!_.isEmpty(lockedDescendantPaths) || !this._pruneAncestors(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (let localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = localWritePath.split('/');\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    while (object && object !== this.root) {\n      if (!this._modeler.isPlaceholder(object.$path)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(object.$parent, object.$key);\n        }\n      }\n      object = object.$parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.contains(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        if (this._modeler.isPlaceholder(value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = false;\n        } else if (_.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value);\n          shouldDelete = !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(pathOrSegments) {\n    let object;\n    const segments = _.isString(pathOrSegments) ?\n      _(pathOrSegments).split('/').map(unescapeKey).value() : pathOrSegments;\n    for (let segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value) {\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get,\n        set: function(newValue) {\n          if (!this._firebasePropertyEditAllowed) {\n            throw new Error(`Firebase data cannot be mutated directly: ${key}`);\n          }\n          descriptor.set.call(this, newValue);\n        },\n        configurable: true, enumerable: true\n      });\n    }\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n  }\n\n  checkVueObject(object, path) {\n    for (let key of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, key);\n      if ('value' in descriptor || !descriptor.get || !descriptor.set) {\n        throw new Error(`Firetruss object at ${path} has a rogue property: ${key}`);\n      }\n      const value = object[key];\n      if (_.isObject(value)) this.checkVueObject(value, joinPath(path, escapeKey(key)));\n    }\n  }\n\n  static get computedPropertyStats() {\n    return Modeler.computedPropertyStats;\n  }\n}\n\n\nfunction throwReadOnlyError() {throw new Error('Read-only property');}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values, relativizePaths) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps and relativize if desired.\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(_.keys(values), path => {\n    for (let otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n    if (relativizePaths) {\n      values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n      delete values[path];\n    }\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object === 'object') {\n    const result = {};\n    for (let key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      result[escapeKey(key)] = toFirebaseJson(object[key]);\n    }\n    return result;\n  } else {\n    return object;\n  }\n}\n\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${_.map(arguments, key => escapeKey(key)).join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = `${this._pathPrefix}/${escapedKeys.join('/')}`;\n        const rest = _.slice(arguments, i + 1);\n        for (let key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          mapping[key] = subRef.children.apply(subRef, rest);\n        }\n        return mapping;\n      } else {\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString();\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    if (!this._string) {\n      const queryTerms = _(this._spec)\n        .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n        .sortBy()\n        .join('&');\n      this._string = `${this._path}?${queryTerms}`;\n    }\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n\n  get value() {  // Vue-bound\n    if (!this.ready) throw new Error('Reference value not currently synced');\n    return this._tree.getObject(this.path);\n  }\n\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method) {\n    connections.freeze();\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n    this._subConnectors = {};\n    this._currentDescriptors = {};\n    this._disconnects = {};\n    this._vue = new Vue({data: _.mapValues(connections, _.constant(undefined))});\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope.$on && scope.$$id) scope.$on('$destroy', () => {this.destroy();});\n  }\n\n  get ready() {\n    return _.every(this._currentDescriptors, (descriptor, key) => {\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n  }\n\n  _linkScopeProperties() {\n    if (!this._scope) return;\n    const duplicateKey = _.find(this._connections, (descriptor, key) => key in this._scope);\n    if (duplicateKey) {\n      throw new Error(`Property already defined on connection target: ${duplicateKey}`);\n    }\n    Object.defineProperties(this._scope, _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: true, get: () => this._vue.$data[key]\n    })));\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    fn = fn.bind(this._scope);\n    const update = this._updateComputedConnection.bind(this, key);\n    this._vue.$watch(fn, update, {immediate: !angular.active});\n    if (angular.active) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(fn, update));\n    }\n  }\n\n  _updateComputedConnection(key, newDescriptor) {\n    const oldDescriptor = this._currentDescriptors[key];\n    if (oldDescriptor === newDescriptor ||\n        newDescriptor instanceof Handle && newDescriptor.isEqual(oldDescriptor)) return;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    this._currentDescriptors[key] = newDescriptor;\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    this._currentDescriptors[key] = descriptor;\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      const updateFn = this._scope ? this._updateScopeRef.bind(this, key) : null;\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      const updateFn = this._scope ? this._updateScopeQuery.bind(this, key) : null;\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {};\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method);\n      if (this._scope) {\n        const unwatch = this._vue.$watch(() => subConnector.ready, subReady => {\n          if (!subReady) return;\n          unwatch();\n          Vue.set(this._scope, key, subScope);\n          angular.digest();\n        }, {immediate: true});\n      }\n    }\n  }\n\n  _disconnect(key) {\n    if (this._scope) {\n      Vue.delete(this._scope, key);\n      angular.digest();\n    }\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    delete this._currentDescriptors[key];\n  }\n\n  _updateScopeRef(key, value) {\n    if (this._scope[key] !== value) {\n      Vue.set(this._scope, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateScopeQuery(key, childKeys) {\n    let changed = false;\n    if (!this._scope[key]) {\n      Vue.set(this._scope, key, {});\n      changed = true;\n    }\n    const subScope = this._scope[key];\n    for (let childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        changed = true;\n      }\n    }\n    let object;\n    for (let segment of this._currentDescriptors[key].path.split('/')) {\n      object = segment ? object[segment] : this._tree.root;\n    }\n    for (let childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      changed = true;\n    }\n    if (changed) angular.digest();\n  }\n\n}\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _markReady() {\n    this._ready = true;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(interceptKey, stage);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(interceptKey, stage);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)],\n      this._callbacks[this._getCallbacksKey(stage, operationType)],\n      this._callbacks[this._getCallbacksKey(stage, 'all')]\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(\n      _.map(this._getCallbacks('onBefore', operation.type), onBefore => onBefore(operation))\n    ).then(() => {operation._setRunning(true);}, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    return Promise.all(\n      _.map(this._getCallbacks('onError', operation.type), onError => {\n        try {\n          return Promise.resolve(onError(operation, error));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      })\n    ).then(results => _.some(results));\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    operation._setRunning(false);\n    if (error) operation._error = error;\n    return Promise.all(\n      _.map(this._getCallbacks('onAfter', operation.type), onAfter => onAfter(operation))\n    ).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    this.markReady(operation);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(0, () => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          });\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","'use strict';\n\nconst ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angularCompatibility from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      updateNowAtIntervals(name, intervalMillis) {\n        if (this.hasOwnProperty(name)) throw new Error(`Property \"${name}\" already defined`);\n        Vue.set(this, name, Date.now() + this.timeOffset);\n        setInterval(() => {\n          this[name] = Date.now() + this.timeOffset;\n        }, intervalMillis);\n      }\n    }}});\n\n    if (angularCompatibility.active) {\n      this._vue.$watch('$data', angularCompatibility.digest, {deep: true});\n    }\n\n    bridge.trackAuth(rootUrl);\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/{property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angularCompatibility from './angularCompatibility.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = query.path.split('/');\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angularCompatibility.digest();\n    for (let key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angularCompatibility.digest();\n      for (let listener of this._listeners) this._coupler._dispatcher.markReady(listener.operation);\n    }\n    if (updatedKeys) {\n      for (let listener of this._listeners) listener.keysCallback(updatedKeys);\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (let key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (let key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (let listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path) {\n    this._coupler = coupler;\n    this.path = path;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angularCompatibility.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angularCompatibility.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (let op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angularCompatibility.digest();\n      }\n      for (let op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (let op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n  }\n\n  get _root() {return this._vue.root;}\n  get _queryHandlers() {return this._vue.queryHandlers;}\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(path.split('/'), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (let segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`);\n        Vue.set(node.children, segment, child);\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(path.split('/'), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (let segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/')}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      const coupledDescendantPaths = node.collectCoupledDescendantPaths();\n      this._prunePath(segments.join('/'), coupledDescendantPaths);\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n      }\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = path.split('/');\n    let node;\n    for (let segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    const segments = path.split('/');\n    let node;\n    for (let segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n    }\n    return node ? node.collectCoupledDescendantPaths() : {};\n  }\n\n  isSubtreeReady(path) {\n    const segments = path.split('/');\n    let node;\n    for (let segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.ready) return true;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angularCompatibility from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport {escapeKey, unescapeKey, wrapPromiseCallback, SERVER_TIMESTAMP} from './utils.js';\n\n\nlet bridge;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   * @param classes {Array<Function>} A list of the classes to map onto the datastore structure.\n   *    Each class must have a static $trussMount property that is a (wildcarded) datastore path, or\n   *    an options object {path: string, placeholder: object}, or an array of either.\n   */\n  constructor(rootUrl, classes) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    Object.defineProperty(this, 'meta', {\n      value: this._metaTree.root, writable: false, configurable: false, enumerable: false\n    });\n\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher, classes);\n    Object.defineProperty(this, 'root', {\n      value: this._tree.root, writable: false, configurable: false, enumerable: false\n    });\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute('auth', new Reference(this._tree, '/'), () => {\n      return bridge.unauth(this._rootUrl);\n    });\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n      if (connections instanceof Handle) connections = {_: connections};\n    }\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    return new Promise((resolve, reject) => {\n      const scope = {};\n      const connector = new Connector(scope, {result: target}, this._tree, 'peek');\n      const unwatch = this._vue.$watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        callback(scope.result).then(result => {\n          connector.destroy();\n          resolve(result);\n        }, error => {\n          connector.destroy();\n          reject(error);\n        });\n      });\n    });\n  }\n\n  watch(subjectFn, callbackFn) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1) return;\n          callbackFn(newValue, oldValue);\n          angularCompatibility.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angularCompatibility.digest();\n      }\n    }, {immediate: true});\n\n    return unwatch;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {return this._tree.computedPropertyStats;}\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (let name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angularCompatibility.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangularCompatibility.defineModule(Truss);\n"]}