{"version":3,"sources":["../src/angularCompatibility.js","../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","isExtensible","let","result","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","computeValue","prop","propertyStats","$$destroyed","$$touchThis","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isObject","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","startsWith","absolutePath","allPaths","sortBy","otherPath","relativizePaths","toFirebaseJson","Vue","data","active","forEach","method","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","Math","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","writeSerial","_path","_value","_valueError","_exists","_writeSerial","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","contains","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","root","$data","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","Value","$parent","$path","defineProperty","$refs","$key","lastIndexOf","$hidden","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","writable","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","writeAllowed","unwatchNow","compute","computationSerial","finalValue","destroyObject","$finalize","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","Function","Transaction","currentValue","_currentValue","outcome","_outcome","_values","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","snapshot","coupledDescendantPaths","offset","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"6OAyBA,SAASA,KACPC,GAAMC,GAASC,OAAOC,QAAQF,OAAO,eACrCG,GAAaC,OAASC,EACtBF,EAAaG,MAAQ,WAAY,KAAM,IAAIC,OAAM,4CACjDJ,EAAaK,aAAe,SAASC,GACnCT,EAAOU,SAAS,QAASD,IAE3BN,EAAaQ,eAAiB,SAASC,GACrC,GAAIA,EAAM,CACRb,GAAMc,GAAkBC,EAAEC,SAASV,EAAYO,EAC/CT,GAAaC,OAAS,WAChBY,EAAIC,cAAgBC,IACpBC,EAAkBd,IAAmBQ,UAG3CV,GAAaC,OAASC,GAI1BL,EAAOoB,OAAO,SAASC,GACrBA,EAASC,UAAU,cAAe,YAAa,oBAC7C,SAASC,EAAWC,GAClBzB,GAAM0B,GAAYF,CAClBpB,GAAaG,MAAQmB,EAAUC,OAAOC,KAAKF,EAC3C1B,IAAM6B,GAAQC,OAAOC,eAAeL,GAC9BM,EAAgBH,EAAMI,OAa5B,OAZAJ,GAAMI,QAAU3B,EAChBuB,EAAMI,QAAQC,SAAWF,EACzBf,EAAIU,OAAO,WAAG,MAAGV,GAAIC,eAAe,WAC9BD,EAAIC,cAAgBC,GACtBC,GAAmB,EACnBM,EAAUO,QAAQC,SAASC,KAAKT,GAChCP,EAAoBF,EAAIC,cAAgBD,EAAIC,cAAgB,GAE5DE,GAAmB,IAGvBL,EAAEqB,KAAKnB,EAAIoB,WAAWC,GAAKC,EAAAA,EACpBb,OAMf,QAASc,MC5DF,QAASC,GAAUC,GACxB,MAAKA,GACEA,EAAIC,WAAWC,QAAQ,oBAAqB,SAASC,GAC1D,MAAO,KAAOA,EAAKC,WAAW,GAAGH,SAAS,MAF3BD,EAMZ,QAASK,GAAYL,GAC1B,MAAKA,GACEA,EAAIC,WAAWC,QAAQ,kBAAmB,SAASI,GACxD,MAAOC,QAAOC,aAAaC,SAASH,EAAKI,MAAM,GAAI,OAFpCV,EAMZ,QAASW,GAAWC,GAEzB,GAAwB,gBAAXA,KAAuBxB,OAAOyB,aAAaD,GAAU,MAAOA,EACzEE,IAAIC,GAASH,CACb,KAAKtD,GAAM0C,KAAOY,GAChB,GAAKA,EAAOI,eAAehB,GAA3B,CACA1C,GAAM2D,GAAQL,EAAOZ,GACfkB,EAAanB,EAAUC,GACvBmB,EAAeR,EAAWM,EAC5BC,KAAelB,GAAOmB,IAAiBF,IACrCF,IAAWH,IAAQG,EAAS1C,EAAE+C,MAAMR,IACxCG,EAAOG,GAAcC,EACjBJ,EAAOf,KAASiB,SAAcF,GAAOf,IAG7C,MAAOe,GAGF,QAASM,KAEd,IAAgB,GADVC,MACUC,EAAA,EAAAC,EAAIC,UAASF,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAA1BT,GAAIa,GAAOH,EAAAD,EACTlD,GAAEuD,SAASD,KAAUA,EAAU,GAAKA,GACf,MAAtBA,EAAQE,OAAO,IAAYP,EAASQ,OAAO,EAAGR,EAASI,QAC3DJ,EAASS,KAAKJ,GAGhB,MADoB,MAAhBL,EAAS,KAAYA,EAAS,GAAK,IAChCA,EAASU,KAAK,KAGhB,QAASC,GAAUC,EAAMC,GAC9B7E,GAAM0C,IAAOmC,EAAuB,OAAS,IAAMD,EAC/CZ,EAAWc,EAAaC,IAAIrC,EAMhC,OALKsB,KACHA,EAAWY,EAAKI,MAAM,KACjBH,IAAsBb,EAAWjD,EAAEkE,IAAIjB,EAAUjB,IACtD+B,EAAaI,IAAIxC,EAAKsB,IAEjBA,EAyCF,QAASmB,GAAgBC,GAC9B5B,GAAI6B,GAAUC,EAAaF,EAO3B,OANKC,KACHA,EAAU,GAAIE,GAAYH,GAEtBrE,EAAEyE,KAAKF,KAAkBG,SAA2BH,GAAavE,EAAE2E,KAAKJ,GAAc,IAC1FA,EAAaF,GAAWC,GAEnBA,ECsTT,QAAS7C,MAET,QAASmD,GAAcC,EAAMC,GAC3B,IAAKD,GAAQA,YAAgBpF,OAAO,MAAOoF,EAC3C5F,IAAM8F,GAAQ,GAAItF,OAAMoF,EAAKG,QAC7BD,GAAMD,OAASA,CACf,KAAK7F,GAAMgG,KAAgBJ,GACzB,GAAqB,YAAjBI,GAA+BJ,EAAKlC,eAAesC,GACvD,IACEF,EAAME,GAAgBJ,EAAKI,GAC3B,MAAOC,GAEP,KADAA,GAAEC,OAASF,aAAAA,GACLC,EAGV,MAAOH,GAGT,QAASK,GAAWC,GAClBpG,GAAMqG,GAAID,EAAIE,QAAQ,IAAK,EAC3B,OAAOD,IAAK,EAAID,EAAIhD,MAAM,EAAGiD,GAAKD,EClb7B,QAASG,GAAaC,EAAGC,GAC9B,MAAO1F,GAAE2F,QAAQF,EAAGC,EAAGE,GAGzB,QAASA,GAAkBH,EAAGC,GAC5B,MAAID,KAAMC,GAAWG,SAANJ,GAAyB,OAANA,GAAoBI,SAANH,GAAyB,OAANA,GAC/DD,EAAEK,QAAUJ,EAAEI,OAAeL,IAAMC,EACnCD,EAAEE,QAAgBF,EAAEE,QAAQD,GAAhC,sECkNF,QAASK,GAAYC,GACnB,GAAKA,EACL,MAAIA,aAAgBC,GAAeD,EAAKpE,WACjC5B,EAAEkG,UAAUF,EAAMD,GCjOpB,QAASI,GAAoBC,GAClC,MAAO,YACL,IACE,MAAOC,SAAQC,QAAQF,EAASG,MAAMC,KAAMpD,YAC5C,MAAO8B,GACP,MAAOmB,SAAQI,OAAOvB,KAKrB,QAASwB,GAAcC,EAASC,GAQrC,MAPAD,GAAUE,EAAeF,EAAS,WAAOC,EAAS,OAClDD,EAAQC,OAAS,WACVA,IACLA,IACAA,EAAS,OAEXE,EAAyBH,EAAS,UAC3BA,EAGT,QAASG,GAAyBH,EAAS1B,GACzChG,GAAM8H,GAAeJ,EAAQK,KAAMC,EAAgBN,EAAQO,KAa3D,OAZAP,GAAQK,KAAO,SAACG,EAAYC,GAC1BnI,GAAMoI,GAAiBN,EAAa3F,KAAKuF,EAASQ,EAAYC,EAG9D,OAFAC,GAAepC,GAAgB0B,EAAQ1B,GACvC6B,EAAyBO,EAAgBpC,GAClCoC,GAETV,EAAQO,MAAQ,SAAAE,GACdnI,GAAMoI,GAAiBJ,EAAc7F,KAAKuF,EAASS,EAGnD,OAFAC,GAAepC,GAAgB0B,EAAQ1B,GACvC6B,EAAyBO,EAAgBpC,GAClCoC,GAEFV,EAGF,QAASE,GAAeF,EAASW,GACtC,MAAKA,IACLA,EAAYnB,EAAoBmB,GACzBX,EAAQK,KAAK,SAAAtE,GAClB,MAAO4E,KAAYN,KAAK,WAAG,MAAGtE,MAC7B,SAAAqC,GACD,MAAOuC,KAAYN,KAAK,WAAG,MAAGX,SAAQI,OAAO1B,QALxB4B,ECkczB,QAASY,GAAaC,EAAMC,GAE1B,GAAIjB,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BAGtC+G,MAAKmB,cAELC,IAAwB,CACxB3I,IACI2D,GADEiF,EAAYC,IAElB,KACE,IACElF,EAAQ4E,EAAKxD,IAAI5C,KAAKoF,MACtB,MAAOtB,GACPtC,EAAQ,GAAImF,IAAa7C,GAC1B,QACCuC,EAAcO,SAAWF,KAAmBD,EAC5CJ,EAAcQ,eAAiB,EAGjC,MADIL,MAAuBhF,EAAQ,GAAIsF,IAActF,IAC9CA,EACR,QACCgF,GAAwB/B,QAK5B,QAASsC,GAAgB5F,EAAQ6F,GAC/B,OAAKA,GAAeA,YAAuBnC,GAAemC,EACnDpI,EAAEkG,UAAUkC,EAAa,SAAAC,GAC9B,GAAIA,YAAsBpC,GAAQ,MAAOoC,EACzC,IAAIrI,EAAEsI,WAAWD,GAAa,CAC5BpJ,GAAMsJ,GAAK,WAET,MADAhG,GAAOoF,cACAQ,EAAgB5F,EAAQ8F,EAAWjH,KAAKoF,OAGjD,OADA+B,GAAGC,wBAAyB,EACrBD,EAEP,MAAOJ,GAAgB5F,EAAQ8F,KAKrC,QAASI,GAAOlG,GACd,MAAe,QAAXA,GAA8BsD,SAAXtD,GAAwBxB,OAAO2H,SAASnG,KAAYvC,EAAE2I,SAASpG,IAClFA,EAAOuD,OAAevD,GAC1BA,EAASxB,OAAO0H,OAAOlG,GACnBvC,EAAE4I,QAAQrG,GACLvC,EAAEkE,IAAI3B,EAAQ,SAAAK,GAAM,MAAG6F,GAAO7F,KAE9B5C,EAAEkG,UAAU3D,EAAQ,SAAAK,GAAM,MAAG6F,GAAO7F,MCmFxC,QAASiG,GAA2CC,EAAUC,GAGnE/I,EAAEgJ,KAAKhJ,EAAE2E,KAAKoE,GAAS,SAAAlF,GACrB,GAAuB,MAAnBA,EAAKL,OAAO,IACd,KAAMK,IAASiF,GAAyB,MAAbA,GACrB9I,EAAEiJ,WAAWpF,EAAMiF,EAAW,MAAQjF,EAAKR,OAASyF,EAASzF,OAAS,GAC1E,KAAM,IAAI5D,OAAM,kDAAkDoE,OAE/D,CACL,GAAIA,EAAK0B,QAAQ,MAAQ,EACvB,KAAM,IAAI9F,OAAM,mEAAmEoE,EAErF5E,IAAMiK,GAAelG,EAAS8F,EAAUpH,EAAUmC,GAClD,IAAIkF,EAAOpG,eAAeuG,GACxB,KAAM,IAAIzJ,OAAM,yBAAyBoE,EAAI,QAAQqF,EAEvDH,GAAOG,GAAgBH,EAAOlF,SACvBkF,GAAOlF,KAIlB5E,IAAMkK,GAAWnJ,EAAE+I,GAAQpE,OAAOT,IAAI,SAAAL,GAAK,MAAGb,GAASa,EAAM,MAAKuF,OAAO,UAAUxG,OACnF5C,GAAEgJ,KAAKD,EAAQ,SAACnG,EAAOiB,GACrB,IAAoB,GAAAX,GAAA,EAAAC,EAAIgG,EAAQjG,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAA7BjE,GAAMoK,GAASlG,EAAAD,EAClB,IAAImG,EAAUhG,OAASQ,EAAKR,OAAQ,KACpC,IAAIQ,IAASwF,GAAarJ,EAAEiJ,WAAWpF,EAAMwF,GAC3C,KAAM,IAAI5J,OAAM,yBAAyB4J,EAAS,QAAQxF,MAM3D,QAASyF,GAAgBR,EAAUC,GACxC/I,EAAEgJ,KAAKhJ,EAAE2E,KAAKoE,GAAS,SAAAlF,GACrBkF,EAAOlF,EAAKxB,MAAmB,MAAbyG,EAAmB,EAAIA,EAASzF,OAAS,IAAM0F,EAAOlF,SACjEkF,GAAOlF,KAIX,QAAS0F,GAAehH,GAC7B,GAAsB,gBAAXA,GAAqB,MAAOA,EACvCtD,IAAMyD,KACN,KAAKzD,GAAM0C,KAAOY,GACZA,EAAOI,eAAehB,KAAMe,EAAOhB,EAAUC,IAAQ4H,EAAehH,EAAOZ,IAEjF,OAAOe,0DP3pBT,IAIMxC,GAAM,GAAIsJ,IAAKC,MAAOtJ,cAAe,KACvCC,EAAoB,EAAGC,GAAmB,EACxCd,EAAa,WACbW,EAAIC,cAAgBC,IACxBF,EAAIC,cAAgBC,EAAoB,IAGpCf,GACJqK,OAA0B,mBAAXvK,SAA0BA,OAAOC,QAG9CC,GAAaqK,OACf1K,KAEC,SAAU,QAAS,eAAgB,kBAAkB2K,QAAQ,SAAAC,GAC5DvK,EAAauK,GAAUnI,GQlB3B,IAAMoI,GAAa,SACLlI,EAAKiB,GACjB4D,KAAO7E,IAAMA,EACb6E,KAAO5D,MAAQA,EACf4D,KAAOsD,QAGTD,GAAAE,UAAED,MAAK,WACLtD,KAAOwD,UAAYC,KAAKC,MAK1B,IAAqBC,GAAS,SAChBC,EAASC,GACrB7D,KAAO8D,OAASvJ,OAAOwJ,OAAO,MAC9B/D,KAAOgE,MAAQ,EACfhE,KAAOiE,SAAWL,EAClB5D,KAAOkE,aAAeL,GAAeM,KAAKC,KAAe,GAAVR,GAGjDD,GAAAJ,UAAEc,IAAG,SAAClJ,GACJ,MAASmJ,SAAQtE,KAAK8D,OAAO3I,KAG/BwI,EAAAJ,UAAE/F,IAAG,SAACrC,GACJ,GAAQoJ,GAAOvE,KAAK8D,OAAO3I,EAC3B,IAAOoJ,EAEP,MADAA,GAAOjB,QACEiB,EAAKnI,OAGhBuH,EAAAJ,UAAE5F,IAAG,SAACxC,EAAKiB,GACT,GAAQmI,GAAOvE,KAAK8D,OAAO3I,EACrBoJ,GACJA,EAAOnI,MAAQA,GAET4D,KAAKgE,OAAShE,KAAKiE,UAAUjE,KAAKwE,SACxCxE,KAAO8D,OAAO3I,GAAO,GAAIkI,GAAalI,EAAKiB,GAC3C4D,KAAOgE,OAAS,IAIpBL,EAAAJ,UAAEkB,OAAM,SAACtJ,GACP,GAAQoJ,GAAOvE,KAAK8D,OAAO3I,EACpBoJ,WACEvE,MAAK8D,OAAO3I,GACrB6E,KAAOgE,OAAS,IAGlBL,EAAAJ,UAAEiB,OAAM,WAGN,IAAiB,WAFTE,EACNlL,EAAIwG,KAAK8D,QAAQa,UAAU/B,OAAO,aAAagC,KAAK5E,KAAKkE,cAAc9H,QACxDM,EAAA,EAAAC,EAAI+H,EAAYhI,EAAAC,EAAAE,OAAAH,GAAA,EAA1B,CAAAjE,GAAM8L,GAAI5H,EAAAD,EAAkBsD,GAAKyE,OAAOF,EAAKpJ,MPpDtD1C,IAAM8E,GAAe,GAAIoG,GAAS,KAC5B5F,KACAG,EAAqB,IA0DrBF,EAAY,SACJH,aACZmC,MAAO6E,YACP,IAAQC,GAActL,EAAEuL,SAASlH,EAAS,MACpCiH,KAAajH,EAAUA,EAAQhC,MAAM,GAAG,GAC9C,IAAQmJ,GAAenH,EAAQxC,QAAQ,cAAe,SAAA4J,GAEpD,MADMA,GAAMpI,OAAS,GAAGmD,EAAK6E,UAAU3H,KAAK+H,EAAMpJ,MAAM,IAC/C,KAGX,IADAtB,OAAS0H,OAAOjC,KAAK6E,WACf,eAAeK,KAAKF,GACxB,KAAQ,IAAI/L,OAAM,oCAAsC4E,EAE1DmC,MAAOmF,OAAS,GAAIC,QAClB,IAAQJ,EAAa3J,QAAQ,UAAW,aAAeyJ,EAAc,QAAU,MAGnF9G,GAAAuF,UAAE0B,MAAK,QAAAA,GAAC5H,aACN2C,MAAOmF,OAAOE,UAAY,CAC1B,IAAQJ,GAAQjF,KAAKmF,OAAOG,KAAKjI,EACjC,IAAO4H,EAAP,CAEA,IAAOhJ,GADCsJ,MACG7I,EAAI,EAAGA,EAAIsD,KAAK6E,UAAUhI,OAAQH,IAC3C6I,EAAWvF,EAAK6E,UAAUnI,IAAMlB,EAAYyJ,EAAMvI,EAAI,GAExD,OAAS6I,KAGXvH,EAAAuF,UAAE2B,KAAI,SAAC7H,GACL,MAAS2C,MAAKmF,OAAOD,KAAK7H,IAG5BW,EAAAuF,UAAEnI,SAAQ,WACR,MAAS4E,MAAKmF,OAAO/J,WC5FvB3C,IAAM+M,GAAqB,QAGrBC,EAAS,SACDC,MAACrI,GAAIqI,EAAArI,KAAEjB,EAAKsJ,EAAAtJ,MAAEuJ,EAAUD,EAAAC,WAAEC,EAAMF,EAAAE,OAAEC,EAAWH,EAAAG,WACzD7F,MAAO8F,MAAQzI,EACf2C,KAAO+F,OAAS3J,EAChB4D,KAAOgG,YAAc5H,EAAcuH,GACnC3F,KAAOiG,QAAoB5G,SAAVjD,EAAsBwJ,IAAU,EAAkB,OAAVxJ,EACzD4D,KAAOkG,aAAeL,uDAGxBM,GAAE9I,KAAQG,IAAA,WACR,MAASwC,MAAK8F,OAGhBK,EAAEP,OAAUpI,IAAA,WACV,MAASwC,MAAKiG,SAGhBE,EAAE/J,MAASoB,IAAA,WAET,MADAwC,MAAOoG,cACEpG,KAAK+F,QAGhBI,EAAEhL,IAAOqC,IAAA,WAEP,MADoB6B,UAAdW,KAAKqG,OAAoBrG,KAAKqG,KAAO7K,EAAYwE,KAAK8F,MAAMzK,QAAQ,OAAQ,MACzE2E,KAAKqG,MAGhBF,EAAEN,YAAerI,IAAA,WACf,MAASwC,MAAKkG,cAGhBT,EAAAlC,UAAE6C,YAAW,WACX,GAAMpG,KAAKgG,YAAa,KAAMhG,MAAKgG,WACnC,IAAsB3G,SAAhBW,KAAK+F,OAAsB,KAAM,IAAI9M,OAAM,sEAKnD,IAAqBqN,GAAO,SACdC,aACZvG,MAAOwG,WAAa,EACpBxG,KAAOyG,cACPzG,KAAO0G,YAAa,EACpB1G,KAAO2G,YACP3G,KAAO4G,cACP5G,KAAO6G,KAAOrN,EAAEyB,KAChB+E,KAAO8G,yBAA2B,KAClC9G,KAAO+G,uBAAyB,IAChC/G,KAAOgH,qBAAuB,KAC9BhH,KAAOiH,oBACPjH,KAAOkH,qBACPlH,KAAOmH,mBAAqBnH,KAAKmH,mBAAmB9M,KAAK2F,MACzDA,KAAOoH,MAAQb,EAAUc,MAAQd,EACjCvG,KAAOsH,UAAYf,EAAUc,KAC7BrH,KAAOoH,MAAMG,UAAYvH,KAAKwH,SAASnN,KAAK2F,MAC5CrH,OAAS8O,iBAAiB,SAAU,WAAOzH,EAAK0H,OAAOC,IAAK,cAC5DC,YAAc,WAAO5H,EAAK0H,OAAOC,IAAK,UAAY,KAGpDrB,GAAA/C,UAAEsE,KAAI,SAACtB,GACL,GAAQuB,KACR,KACE,GAAQC,GAAUpP,OAAOqP,cAAgBrP,OAAOsP,cAChD,KAAOF,EAAS,MAChB,KAAO9L,GAAIS,GAAI,EAAGA,EAAIqL,EAAQlL,OAAQH,IAAK,CACzC,GAAQvB,GAAM4M,EAAQ5M,IAAIuB,EAC1BoL,GAAQ5K,MAAM/B,IAAAA,EAAKiB,MAAO2L,EAAQG,QAAQ/M,MAE1C,MAAOuD,IAGX,MAASsB,MAAK0H,OAAOC,IAAK,OAAQI,QAASD,IAAQtH,KAAK,SAAA2H,GACtD,GAAQC,GAAgBD,EAASE,QAAQpD,MAAM,8BAC/C,IAAMmD,EAAe,CACnB,GAAQE,GAAa9C,EAAmBP,MAAM,+BAEtCsD,EAAaH,EAAc,KAAOE,EAAW,KACnDF,EAAgB,GAAKE,EAAW,IAChCF,EAAgB,KAAOE,EAAW,IAAMF,EAAc,IAAME,EAAW,GAEzE,KAAOC,EAAY,MAAO1I,SAAQI,OAAO,GAAIhH,OAC3C,0CAA4CkP,EAAgB,QAAA,KACtD3C,EAAkB,yBAG5B,MAAS2C,MAIb7B,EAAA/C,UAAEiF,QAAO,SAACC,GACYpJ,SAAdoJ,IAAyBA,GAAY,GACrCzI,KAAK0G,aAAe+B,IAC1BzI,KAAO0G,WAAa+B,EACbA,IACLzI,KAAO0I,iBAAiB1I,KAAKiH,kBAC7BjH,KAAOiH,oBACDjH,KAAKkH,kBAAkBrK,QAAQgD,QAAQC,UAAUU,KAAKR,KAAKmH,uBAIrEb,EAAA/C,UAAEoF,4BAA2B,SAACC,EAAyBC,EAAuBC,GAC5E9I,KAAO8G,yBAA2B8B,EACFvJ,SAA1BwJ,IAAqC7I,KAAK+G,uBAAyB8B,GACzE7I,KAAOgH,qBAAuB8B,GAAc,WAAY,OAAO,IAGjExC,EAAA/C,UAAEwF,cAAa,SAAChH,GACRA,GACEA,KAAO,IAAMA,EAAKiH,QAAQC,IAAI5O,KAAK2O,UACzChJ,KAAO6G,KAAO9E,GAEd/B,KAAO6G,KAAOrN,EAAEyB,MAIpBqL,EAAA/C,UAAEmE,MAAK,SAAClJ,aACNA,GAAUzD,KAAOiF,KAAKwG,UACtB,IAAMrG,EACN,IAAM3B,EAAQ0K,OACZ/I,EAAYN,QAAQC,cACb,CACPK,EAAY,GAAIN,SAAQ,SAACC,EAASG,GAChCkJ,EAAO1C,WAAWjI,EAAQzD,KAAO+E,QAAAA,EAASG,OAAAA,IAE5C,IAAQmJ,GAAWpJ,KAAKyG,WAAWjI,EAAQzD,GAC3CqO,GAAWjJ,QAAUA,EACrBA,EAAUkJ,KAAO,GAAIxJ,SAAQ,SAAAC,GAC3BsJ,EAAWE,YAAcxJ,IAE3BsJ,EAAW9K,OAASE,EAOtB,MALOwB,MAAKkH,kBAAkBrK,QAAWmD,KAAK0G,YAC5C7G,QAAUC,UAAUU,KAAKR,KAAKmH,oBAEhCnH,KAAO6G,KAAK,QAASrI,GACrBwB,KAAOkH,kBAAkBhK,KAAKsB,GACrB2B,GAGXmG,EAAA/C,UAAE4D,mBAAkB,WAClBnH,KAAOoH,MAAMmC,YAAYvJ,KAAKkH,mBAC9BlH,KAAOkH,sBAGTZ,EAAA/C,UAAEiE,SAAQ,SAACgC,GACHxJ,KAAK0G,WACT1G,KAAOiH,iBAAmBjH,KAAKiH,iBAAiBwC,OAAOD,EAAMvG,MAE7DjD,KAAO0I,iBAAiBc,EAAMvG,OAIlCqD,EAAA/C,UAAEmF,iBAAgB,SAACgB,GACjB,IAAoB,WAAAhN,EAAA,EAAAC,EAAI+M,EAAQhN,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAChC,GADW8B,GAAO7B,EAAAD,EAChBsD,GAAK6G,KAAK,QAASrI,EACrB,IAAQuD,GAAK/B,EAAKxB,EAAQmJ,IAC1B,IAAoB,kBAAP5F,GAAmB,KAAM,IAAI9I,OAAM,oBAAsBuF,EAAQmJ,IAC9E5F,GAAKnH,KAAKoF,EAAMxB,KAIpB8H,EAAA/C,UAAEoG,oBAAmB,SAACC,GACpB,MAAS,YACP,MAAS5J,MAAK0H,OAAOC,IAAK,OAAQiC,KAAAA,EAAMC,KAAMC,MAAMvG,UAAU1H,MAAMjB,KAAKgC,cACtEvC,KAAK2F,OAGZsG,EAAA/C,UAAEzD,QAAO,SAACtB,GACR,GAAQ4K,GAAWpJ,KAAKyG,WAAWjI,EAAQzD,GAC3C,KAAOqO,EAAU,KAAM,IAAInQ,OAAM,yDACxB+G,MAAKyG,WAAWjI,EAAQzD,IACjCqO,EAAWtJ,QAAQtB,EAAQtC,SAG7BoK,EAAA/C,UAAEtD,OAAM,SAACzB,GACP,GAAQ4K,GAAWpJ,KAAKyG,WAAWjI,EAAQzD,GAC3C,KAAOqO,EAAU,KAAM,IAAInQ,OAAM,wDACxB+G,MAAKyG,WAAWjI,EAAQzD,IACjCqO,EAAWnJ,OAAO7B,EAAcI,EAAQD,MAAO6K,EAAS9K,UAG1DgI,EAAA/C,UAAEwG,WAAU,SAACxL,GACX,GAAQ9C,GAAO8C,EAAM9C,MAAQ8C,EAAMC,OACnC,OAAMD,GAAMD,QAAU7C,GAA+B,sBAAvBA,EAAKuO,cACxBhK,KAAKiK,cAAc1L,EAAMD,QAAQkC,KAAK,SAAA0J,GACvCA,IAAe3L,EAAM4L,wBAA0BD,KAG9CrK,QAAQC,WAIrBwG,EAAA/C,UAAE0G,cAAa,SAACG,aACd,MAAQpK,KAAK8G,0BAA4B9G,KAAK+G,uBAAyB,GACrE,MAASlH,SAAQC,SAEnB,IAAMuK,KACN,QAAUD,EAAMzC,KACd,IAAO,MACL0C,EAAiBnN,MAAMkG,OAAQ,MAAOvE,IAAKuL,EAAMvL,IAAKgL,MAAOO,EAAMhO,QACnE,MACF,KAAO,SACLiO,EAAiBnN,MAAMkG,OAAQ,SAAUvE,IAAKuL,EAAMvL,IAAKgL,MAAOO,EAAMhO,QACtE,MACF,KAAO,KACLiO,EAAiBnN,MAAMkG,OAAQ,OAAQvE,IAAKuL,EAAMvL,IAAKyL,KAAMF,EAAME,KAAMT,MAAO,UAChF,MACF,KAAO,cACLQ,EAAiBnN,MAAMkG,OAAQ,OAAQvE,IAAKuL,EAAMvL,IAAKgL,MAAO,WAC9DQ,EAAiBnN,MAAMkG,OAAQ,MAAOvE,IAAKuL,EAAMvL,IAAKgL,MAAOO,EAAMG,YAGvE,IAAOF,EAAexN,SAAWmD,KAAKgH,qBAAqBoD,EAAMzC,IAAKyC,EAAMvL,KAC1E,MAASgB,SAAQC,SAEnB,IAAQ0K,GAAOxK,KAAKyK,QAAQ7L,EAAWwL,EAAMvL,MACrC6L,EAAoB1K,KAAK8G,yBAAyB0D,GAAQA,EAAKG,KAAKnK,KAAK,SAAAoK,GAC/E,MAAS/K,SAAQgL,IAAIR,EAAe3M,IAAI,SAAAc,GAGtC,MAFAA,GAAUmJ,IAAM,WAChBnJ,EAAUoM,MAAQA,EACT5K,EAAK0H,MAAMlJ,QAEnBgC,KAAK,SAAAsK,GACR,MAAMA,GAAeC,MAAM,SAAAC,GAAM,MAAa,QAAVA,IACzB,0CAEFF,EAAeG,OAAO,SAAAD,GAAM,MAAGA,KAAO7N,KAAK,UACjDuD,MAAM,SAAAhC,GACT,MAAS,6BAA+BA,IAElCwM,EAAiB,GAAIrL,SAAQ,SAAAC,GACnCqL,WAAarL,EAAQzF,KAAK,KAAM,4BAA6B2F,EAAK+G,yBAEpE,OAASlH,SAAQuL,MAAMV,EAAmBQ,KAG5C5E,EAAA/C,UAAE8H,mBAAkB,SAAC3F,MAACoC,GAAKpC,EAAAoC,KACzB,KAEE,IAAiB,GADTC,GAAUpP,OAAOqP,cAAgBrP,OAAOsP,eAC/BvL,EAAA,EAAAC,EAAImL,EAAKpL,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC1B,GADW6H,GAAI5H,EAAAD,EACM,QAAf6H,EAAKnI,MACT2L,EAAUuD,WAAW/G,EAAKpJ,KAE1B4M,EAAUwD,QAAQhH,EAAKpJ,IAAKoJ,EAAKnI,QAGnC,MAAOsC,MAKb4H,EAAA/C,UAAEiI,YAAW,SAACC,GACZ,IAAMzL,KAAK2G,SAASxK,eAAesP,GAAnC,CACA,GAAQC,GAAS1L,KAAK2G,SAAS8E,IAAYE,kBACnCC,EAAiB5L,KAAK6L,kBAAkB7L,KAAK8L,cAAczR,KAAK2F,KAAM0L,GAC9E1L,MAAO0H,OAAOC,IAAK,SAAU9I,IAAK4M,EAASM,WAAYH,MAGzDtF,EAAA/C,UAAEuI,cAAa,SAACJ,EAAQlB,GACtBkB,EAASlB,KAAOA,CAChB,KAAqB,GAAA9N,GAAA,EAAAC,EAAI+O,EAAOC,cAAajP,EAAAC,EAAAE,OAAAH,GAAA,EAAtC,CAAAjE,GAAMuT,GAAQrP,EAAAD,EAA0BsP,GAASxB,KAG1DlE,EAAA/C,UAAE0I,OAAM,SAACR,EAAS7L,EAAUsM,GAC1B,GAAQF,GAAWpM,EAASvF,KAAK6R,EACjCF,GAAWpM,SAAWA,EACtBoM,EAAWE,QAAUA,EACrBlM,KAAO2G,SAAS8E,GAASE,cAAczO,KAAK8O,GAC5CA,EAAWhM,KAAKyK,QAAQgB,KAG1BnF,EAAA/C,UAAE4I,QAAO,SAACV,EAAS7L,EAAUsM,GAE3B,IAAOjQ,GADC0P,GAAgB3L,KAAK2G,SAAS8E,GAASE,cACpCjP,EAAI,EAAGA,EAAIiP,EAAc9O,OAAQH,IAAK,CAC/C,GAAQsP,GAAWL,EAAcjP,EACjC,IAAMsP,EAASpM,WAAaA,GAAYoM,EAASE,UAAYA,EAAS,CACpEP,EAAgB1O,OAAOP,EAAG,EAC1B,UAKN4J,EAAA/C,UAAEkH,QAAO,SAACgB,GACR,MAASzL,MAAK2G,SAAS8E,GAASjB,MAGlClE,EAAA/C,UAAE6I,oBAAmB,SAACvN,EAAKwN,EAAWC,GACpC,MAAStM,MAAK0H,OAAOC,IAAK,sBAAuB9I,IAAAA,EAAKwN,UAAAA,EAAWC,QAAAA,KAGnEhG,EAAA/C,UAAEgJ,OAAM,SAAC1N,GACP,MAASmB,MAAK0H,OAAOC,IAAK,SAAU9I,IAAAA,KAGtCyH,EAAA/C,UAAE5F,IAAG,SAACkB,EAAKzC,EAAOyJ,GAAc,MAAO7F,MAAK0H,OAAOC,IAAK,MAAO9I,IAAAA,EAAKzC,MAAAA,EAAOyJ,YAAAA,KAC3ES,EAAA/C,UAAEiJ,OAAM,SAAC3N,EAAKzC,EAAOyJ,GAAc,MAAO7F,MAAK0H,OAAOC,IAAK,SAAU9I,IAAAA,EAAKzC,MAAAA,EAAOyJ,YAAAA,KAEjFS,EAAA/C,UAAEkJ,GAAE,SAACC,EAAa7N,EAAKyL,EAAMqC,EAAWC,EAAkBC,EAAgBX,EAASI,GACjF,GAAQQ,IACNJ,YAAEA,EAAaC,UAAAA,EAAWC,iBAAAA,EAAkBC,eAAAA,EAAgBX,QAAAA,EAC5D5N,QAAWqJ,IAAK,KAAM+E,YAAAA,EAAa7N,IAAAA,EAAKyL,KAAAA,EAAMqC,UAAAA,EAAWL,QAAAA,IAEnD1M,EAAWI,KAAK+M,YAAY1S,KAAK2F,KAAM8M,EAC/C9M,MAAO6L,kBAAkBjM,EAAUkN,GAEnCF,EAAmBI,cAAgBJ,EAAiBI,kBACpDJ,EAAmBI,cAAc9P,KAAK4P,EAAO/R,IAC7CiF,KAAO0H,OACLC,IAAO,KAAM+E,YAAAA,EAAa7N,IAAAA,EAAKyL,KAAAA,EAAMqC,UAAAA,EAAWZ,WAAYe,EAAO/R,GAAIuR,QAAAA,IACpE5L,MAAM,SAAAnC,GACTqB,EAAWrB,MAIf+H,EAAA/C,UAAE0J,IAAG,SAACP,EAAa7N,EAAKyL,EAAMqC,EAAWC,EAAkBV,MAEnDH,UADEmB,IAER,IAAMN,EAAkB,CAOtB,GANAb,EAAe/L,KAAKmN,yBAClBP,EACA,SAAEE,GAAO,MACLA,GAAOJ,cAAgBA,GAAeI,EAAOH,YAAcA,GAC7DG,EAASZ,UAAYA,KAElBH,EAAY,MAAOlM,SAAQC,SAClCoN,GAAkBhQ,KAAK6O,OAEvB,KAAe,GAAArP,GAAA,EAAAC,EAAIpC,OAAO4D,KAAK6B,KAAK4G,YAAWlK,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC/C,GADW3B,GAAE4B,EAAAD,GACLoQ,EAAS9M,EAAK4G,WAAW7L,EAC3B+R,GAAOJ,cAAgBA,GAAiBC,GAAaG,EAAOH,YAAcA,GAC9EO,EAAkBhQ,KAAKnC,GAO7B,IAAe,GAAAqS,GAAA,EAAAC,EAAIH,EAAeE,EAAAC,EAAAxQ,OAAAuQ,GAAA,EAA3B,CAAA3U,GAAMsC,GAAEsS,EAAAD,EAAqBpN,GAAKsN,iBAAiBvS,GAC1D,MAASiF,MAAK0H,OAAOC,IAAK,MAAO+E,YAAAA,EAAa7N,IAAAA,EAAKyL,KAAAA,EAAMqC,UAAAA,EAAWZ,WAAAA,IAAavL,KAAK,WACpF,IAAe,GAAA9D,GAAA,EAAAC,EAAIuQ,EAAexQ,EAAAC,EAAAE,OAAAH,GAAA,EAA3B,CAAAjE,GAAMsC,GAAE4B,EAAAD,EAAqBsD,GAAKuN,oBAAoBxS,OAIjEuL,EAAA/C,UAAEwJ,YAAW,SAACD,EAAQvO,EAAOiP,GAC3B,GAAMjP,EAAO,CACXyB,KAAOuN,oBAAoBT,EAAO/R,GAClC,IAAQ2D,GAAIN,EAAcG,EAAOuO,EAAOxO,OAClCwO,GAAOD,eACXC,EAASD,eAAejS,KAAKkS,EAAOZ,QAASxN,GAE7CsK,QAAUzK,MAAMG,OAGlBoO,GAASF,iBAAiBhS,KAAKkS,EAAOZ,QAAS,GAAIzG,GAAS+H,KAIhElH,EAAA/C,UAAEkK,YAAW,SAAC5O,EAAK6O,EAAUC,EAAiB9H,GAC5C,MAAS7F,MAAK0H,OAAOC,IAAK,cAAe9I,IAAAA,EAAK6O,SAAAA,EAAUC,gBAAAA,EAAiB9H,YAAAA,KAG3ES,EAAA/C,UAAEqK,aAAY,SAAC/O,EAAKuE,EAAQhH,GAC1B,MAAS4D,MAAK0H,OAAOC,IAAK,eAAgB9I,IAAAA,EAAKuE,OAAAA,EAAQhH,MAAAA,KAGzDkK,EAAA/C,UAAEsK,iBAAgB,WAChB,MAAS7N,MAAK0H,OAAOC,IAAK,sBAG5BrB,EAAA/C,UAAE3D,SAAQ,SAAC8F,MAAC3K,GAAE2K,EAAA3K,GAAE8O,EAAInE,EAAAmE,KACViD,EAAS9M,KAAK4G,WAAW7L,EACjC,KAAO+R,EAAQ,KAAM,IAAI7T,OAAM,0BAA4B8B,EAC3D+R,GAASlN,SAASG,MAAM,KAAM8J,IAGhCvD,EAAA/C,UAAEsI,kBAAiB,SAACjM,EAAUkN,GAK5B,MAJAA,GAAWA,MACXA,EAASlN,SAAWA,EACpBkN,EAAS/R,GAAK,QAAOiF,KAAKwG,WAC1BxG,KAAO4G,WAAWkG,EAAO/R,IAAM+R,EACtBA,EAAO/R,IAGlBuL,EAAA/C,UAAE+J,iBAAgB,SAACvS,GACjBiF,KAAO4G,WAAW7L,GAAI6E,SAAW3E,GAGnCqL,EAAA/C,UAAEgK,oBAAmB,SAACxS,SACXiF,MAAK4G,WAAW7L,IAG3BuL,EAAA/C,UAAE4J,yBAAwB,SAACvN,EAAUkO,aACnC,IAAOlO,EAASoN,cAEhB,IADA,GAAMtQ,GAAI,EACDA,EAAIkD,EAASoN,cAAcnQ,QAAQ,CAC1C,GAAQ9B,GAAK6E,EAASoN,cAActQ,GAC5BoQ,EAAS9M,EAAK4G,WAAW7L,EACjC,IAAO+R,EAAP,CAIA,GAAMgB,EAAUhB,GAEd,MADAlN,GAAWoN,cAAc/P,OAAOP,EAAG,GAC1B3B,CAEX2B,IAAO,MAPLkD,GAAWoN,cAAc/P,OAAOP,EAAG,IOjZzCjE,IAAMsV,KACNxT,QAAO0H,OAAO8L,EAGd,IAAatO,GAAO,SACNuO,EAAM3Q,EAAM4Q,GACxBjO,KAAOkO,MAAQF,EACfhO,KAAO8F,MAAQzI,EAAKhC,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,IAClD4S,IACJjO,KAAOmO,aAAeF,EACtB1T,OAAS0H,OAAOgM,uEAIpB9H,GAAEiI,KAAQ5Q,IAAA,WAAI,MAAOwC,OACrBmG,EAAEhL,IAAOqC,IAAA,WAEP,MADOwC,MAAKqG,OAAMrG,KAAKqG,KAAO7K,EAAYwE,KAAK8F,MAAMzK,QAAQ,OAAQ,MAC5D2E,KAAKqG,MAEhBF,EAAE9I,KAAQG,IAAA,WAAI,MAAOwC,MAAK8F,OAC1BK,EAAEkI,YAAe7Q,IAAA,WAAI,MAAsB,MAAfwC,KAAK8F,MAAgB,GAAK9F,KAAK8F,OAC3DK,EAAEmI,OAAU9Q,IAAA,WACV,MAAS,IAAI+Q,GAAUvO,KAAKkO,MAAOlO,KAAK8F,MAAMzK,QAAQ,YAAY,IAAK2E,KAAKmO,eAG9EhI,EAAE8H,YAAezQ,IAAA,WACf,MAASwC,MAAKmO,cAAgBJ,GAGhCtO,EAAA8D,UAAEiL,MAAK,WACL,IAAO5R,UAAUC,OAAQ,MAAOmD,KAEhC,KAAgB,GADRvD,MACQC,EAAA,EAAAC,EAAIC,UAASF,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC7B,GADWvB,GAAGwB,EAAAD,EACZ,IAAY2C,SAARlE,GAA6B,OAARA,EAAc,MACzCsB,GAAWS,KAAKhC,EAAUC,IAE5B,MAAS,IAAIoT,GACXvO,KAAOkO,MAAUlO,KAAgB,YAAA,IAAIvD,EAASU,KAAK,KACnD6C,KAAOmO,eAIX1O,EAAA8D,UAAEkL,SAAQ,iCACR,KAAO7R,UAAUC,OAAQ,MAAOmD,KAEhC,KAAO/D,GADCyS,MACGhS,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAC3C,GAAQiS,GAAM/R,EAAUF,EACxB,IAAMlD,EAAE4I,QAAQuM,GAAM,CAIpB,IAAgB,GAHRC,MACAC,EAAU7O,EAAKqO,aAAeK,EAAY7R,OAAS,IAAI6R,EAAYvR,KAAK,KAAS,IACjF2R,EAAOtV,EAAEqC,MAAMe,EAAWF,EAAI,GACtB0Q,EAAA,EAAAzQ,EAAIgS,EAAGvB,EAAAzQ,EAAAE,OAAAuQ,GAAA,EAAE,CACvB,GADWjS,GAAGwB,EAAAyQ,GACN2B,EACN,GAAMR,GAAUvO,EAAKkO,MAAOW,EAAU,IAAI3T,EAAUC,GAAQ6E,EAAKmO,cAC3Da,EAAaD,EAAON,SAAS1O,MAAMgP,EAAQD,EAC7CE,KAAYJ,EAAQzT,GAAO6T,GAEnC,GAAMxV,EAAEyV,QAAQL,GAAU,MAC1B,OAASA,GAET,GAAcvP,SAARsP,GAA6B,OAARA,EAAc,MACzCD,GAAcxR,KAAKhC,EAAUyT,IAGjC,MAAS,IAAIJ,GACXvO,KAAOkO,MAAUlO,KAAgB,YAAA,IAAI0O,EAAYvR,KAAK,KAAQ6C,KAAKmO,eAGvE1O,EAAA8D,UAAE2L,KAAI,SAACtP,GACL,MAASI,MAAKkO,MAAMiB,MAAMD,KAAKlP,KAAMJ,IAGvCH,EAAA8D,UAAE0B,MAAK,SAACpH,GACN,MAASD,GAAgBC,GAASoH,MAAMjF,KAAK3C,OAG/CoC,EAAA8D,UAAEpE,QAAO,SAACiQ,GACR,MAAQA,aAAgB3P,KACfO,KAAKkO,QAAUkB,EAAKlB,OAASlO,KAAK5E,aAAegU,EAAKhU,YAC7D5B,EAAI2F,QAAQa,KAAKmO,aAAciB,EAAKjB,gBAGxC1O,EAAA8D,UAAE8L,UAAS,SAACF,GACV,MAASnP,MAAKkO,MAAMiB,QAAUA,yCAKhC,IAAaG,GAAK,SAAA7P,GAAgB,QAAA6P,GACpBtB,EAAM3Q,EAAMiN,EAAM2D,GAC5BsB,EAAK3U,KAACoF,KAAAgO,EAAM3Q,EAAM4Q,GAClBjO,KAAKwP,MAAQxP,KAAKyP,qBAAqBnF,EACvC7R,IAAMiX,GAAalW,EAAEwG,KAAKwP,OACvB9R,IAAI,SAACtB,EAAOjB,GAAK,MAAGA,GAAM,IAAIwU,mBAAmBC,KAAKC,UAAUzT,MAChEwG,SACAzF,KAAK,IACR6C,MAAK8P,QAAa9P,KAAU,MAAA,IAAI0P,EAChCnV,OAAO0H,OAAOjC,mIAIhB+P,GAAAC,MAASxS,IAAA,WACP,MAAOwC,MAAKkO,MAAM+B,aAAajQ,OAGjC+P,EAAAG,YAAe1S,IAAA,WACb,MAAOwC,MAAKwP,OAGdF,EAAA/L,UAAA4M,SAAQ,SAAClC,GACP,MAAO,IAAIqB,GACTtP,KAAKkO,MAAOlO,KAAK8F,MAAO9F,KAAKwP,MAAOhW,EAAE4W,UAAWpQ,KAAKmO,aAAcF,KAGxEqB,EAAA/L,UAAAkM,qBAAoB,SAACnF,GACnB,IAAKA,EAAK+F,GAAI,KAAM,IAAIpX,OAAM,4BAA8B2W,KAAKC,UAAUvF,GAC3E,KAAK,MAAQA,KAAS,QAAUA,KAAS,MAAQA,IAAQ,EACvD,KAAM,IAAIrR,OACR,oEAAsE2W,KAAKC,UAAUvF,GAEzF,KAAK,SAAWA,KAAS,QAAUA,IAAQ,EACzC,KAAM,IAAIrR,OACR,gEAAkE2W,KAAKC,UAAUvF,GAErF,KAAK9Q,EAAE8W,MAAM,KAAM,OAAQ,KAAM,QAAS,QAAS,SAAAC,GAAO,MAAGA,KAAUjG,KACrE,KAAM,IAAIrR,OACR,sFACA2W,KAAKC,UAAUvF,GAGnB,IADAA,EAAO9Q,EAAE+C,MAAM+N,GACC,SAAZA,EAAK+F,IAA6B,WAAZ/F,EAAK+F,GAAiB,CAC9C,KAAM/F,EAAK+F,aAAc9B,IACvB,KAAM,IAAItV,OAAM,yCAA2CqR,EAAK+F,GAElEpU,IAAIuU,GAAYlG,EAAK+F,GAAGjV,UACxB,KAAK5B,EAAEiJ,WAAW+N,EAAWxQ,KAAK8F,OAChC,KAAM,IAAI7M,OACR,8DAAgEqR,EAAK+F,GAGzE,IADAG,EAAYA,EAAU3U,MAAMmE,KAAK8F,MAAMjJ,QAAQxB,QAAQ,OAAQ,IAC3DmV,EAAUzR,QAAQ,QAAS,EAC7B,KAAM,IAAI9F,OACR,oEAAsEqR,EAAK+F,GAE/E/F,GAAK+F,GAAKG,EAAUnV,QAAQ,QAAS,IAGvC,MADAd,QAAO0H,OAAOqI,GACPA,GAITgF,EAAA/L,UAAAnI,SAAQ,WACN,MAAO4E,MAAK8P,mDAhEWrQ,GAsEd8O,EAAS,SAAA9O,GAAgB,QAAA8O,GAGxBP,EAAM3Q,EAAM4Q,GACtBsB,EAAK3U,KAACoF,KAAAgO,EAAM3Q,EAAM4Q,GAClB1T,OAAO0H,OAAOjC,6HAGhByQ,GAAAT,MAASxS,IAAA,WAAI,MAAOwC,MAAKkO,MAAMwC,iBAAiB1Q,OAChDyQ,EAAArU,MAASoB,IAAA,WAAI,MAAOwC,MAAKkO,MAAMyC,UAAU3Q,KAAK3C,OAC9CkR,EAAAhL,UAAAnI,SAAQ,WAAI,MAAO4E,MAAK8F,OAExByI,EAAAhL,UAAA4M,SAAQ,SAAClC,GACP,MAAO,IAAIM,GAAUvO,KAAKkO,MAAOlO,KAAK8F,MAAOtM,EAAE4W,UAAWpQ,KAAKmO,aAAcF,KAG/EM,EAAAhL,UAAAqN,MAAK,SAACtG,GACJ,MAAO,IAAIgF,GAAMtP,KAAKkO,MAAOlO,KAAK8F,MAAOwE,IAG3CiE,EAAAhL,UAAA5F,IAAG,SAACvB,GACF,MAAO4D,MAAKkO,MAAM1B,OAAOxM,KAAM,OAAK6Q,KAAGA,EAAC7Q,KAAK3C,MAAKjB,EAAOyU,WAG3DtC,EAAAhL,UAAAiJ,OAAM,SAACjK,GACL,MAAOvC,MAAKkO,MAAM1B,OAAOxM,KAAM,SAAUuC,IAG3CgM,EAAAhL,UAAAuN,SAAQ,SAAC1U,GACP,MAAO4D,MAAKkO,MAAM1B,OAAOxM,KAAM,YAAU6Q,KAAGA,EAAC7Q,KAAK3C,MAAKjB,EAAOyU,WAGhEtC,EAAAhL,UAAAwN,OAAM,SAACC,GACL,MAAOhR,MAAKkO,MAAM6C,OAAO/Q,KAAMgR,8CAjCJvR,GChKzBwR,EAAS,SACDrH,GACZpQ,EAAI4W,OAAOpQ,MAAO4J,KAAAA,EAAMnI,cAAe,EAAGyP,WAAY,EAAG1P,QAAS,+BAGpEyP,GAAA1N,UAAE4N,IAAG,SAAC5M,GACJvE,KAAOwB,SAAW+C,EAAK/C,QACvBxB,KAAOkR,YAAc3M,EAAK2M,WAC1BlR,KAAOyB,eAAiB8C,EAAK9C,eAG/B0E,EAAEiL,oBAAuB5T,IAAA,WACvB,MAASwC,MAAKyB,cAAgBzB,KAAKwB,QAAUxB,KAAKyB,cAAgB,GAGpEwP,EAAA1N,UAAE8N,WAAU,SAACC,GACX,OACOtR,KAAS,KAAA,IAAK,KAAKA,KAAKwB,QAAU,KAAM+P,QAAQ,GAAE,IACrD,KAAKvR,KAAKwB,QAAU8P,EAAO9P,QAAU,KAAK+P,QAAQ,GAAE,KACpD,IAAIvR,KAAe,WAAA,SAAaA,KAAkB,cAAA,QAClD,KAAKA,KAAKkR,WAAalR,KAAKyB,cAAgB,KAAK8P,QAAQ,GAAE,KAC3D,IAAIvR,KAAKoR,oBAAoBG,QAAQ,GAAE,mDAK7C,IAAMC,GAAM,WAEVxR,KAAO8D,sBAGT0N,GAAAjO,UAAEkO,IAAG,SAAC7H,GAEJ,MADO5J,MAAK8D,OAAO8F,KAAO5J,KAAK8D,OAAO8F,GAAQ,GAAIqH,GAASrH,IAClD5J,KAAK8D,OAAO8F,IAGvBmG,EAAEpT,KAAQa,IAAA,WACR,MAAShE,GAAEwG,KAAK8D,QAAQvB,SAASK,OAAO,SAAA2B,GAAK,OAAIA,EAAK/C,UAASpF,SAGjEoV,EAAAjO,UAAE0F,IAAG,SAACyI,kBAAI,GACR,IAAMC,GAAQ3R,KAAKrD,IACnB,IAAOgV,EAAM9U,OAAb,CACA,GAAQyU,GAAS,GAAIL,GAAS,YAC9BzX,GAAIgJ,KAAKmP,EAAO,SAAAC,GAASN,EAAOH,IAAIS,KACpCD,EAAUnY,EAAEoL,KAAK+M,EAAOD,EACxB,IAAQG,GAAQ,GAAIZ,GAAS,YAC7BzX,GAAIgJ,KAAKmP,EAAO,SAAAC,GAASC,EAAMV,IAAIS,IACnC,IAAQE,GAAQtY,EAAEkE,IAAIiU,EAAO,SAAApN,GAAK,MAAGA,GAAK8M,WAAWC,IACrDQ,GAAQ5U,KAAK2U,EAAMR,WAAWC,IAC9BQ,EAAQ5U,KAAKoU,EAAOD,WAAWC,GAC/B,IAAQS,GAASvY,EAAEkE,IAAIlE,EAAEwY,MAAMF,EAAM,GAAGjV,QAAS,SAAAH,GAAE,MAAGlD,GAAEsY,GAAOpU,IAAI,SAAAuU,GAAK,MAAGA,GAAKvV,GAAGG,SAAQqV,OAC3F1Y,GAAIgJ,KAAKsP,EAAO,SAAAG,GACdjJ,QAAUC,IAAIzP,EAAEkE,IAAIuU,EAAM,SAACE,EAAQzV,GAAG,MAAGlD,GAAE4Y,QAAQD,EAAQJ,EAAOrV,MAAKS,KAAK,gDAKhF,IAAAwU,GAAe,GAAIH,GP1DNa,EAAmB9X,OAAO0H,QAAQqQ,MAAO,uIQFtD,WACE,GAAIC,GAAgBC,EAAQC,CAEA,oBAAhBC,cAA+C,OAAhBA,aAAyBA,YAAYhP,IAC9EhL,EAAAia,QAAiB,WACf,MAAOD,aAAYhP,OAEQ,mBAAZkP,UAAuC,OAAZA,SAAqBA,QAAQJ,QACzE9Z,EAAAia,QAAiB,WACf,OAAQJ,IAAmBE,GAAY,KAEzCD,EAASI,QAAQJ,OACjBD,EAAiB,WACf,GAAIM,EAEJ,OADAA,GAAKL,IACU,IAARK,EAAG,GAAWA,EAAG,IAE1BJ,EAAWF,KACF9O,KAAKC,KACdhL,EAAAia,QAAiB,WACf,MAAOlP,MAAKC,MAAQ+O,GAEtBA,EAAWhP,KAAKC,QAEhBhL,EAAAia,QAAiB,WACf,OAAO,GAAIlP,OAAOqP,UAAYL,GAEhCA,GAAW,GAAIhP,OAAOqP,aAGvBlY,KAAKoF,KPrBa+S,GAAU,SACjBC,EAAOpR,EAAaoM,EAAM5K,EAAQ5D,aAC9CjF,QAAS0H,OAAOL,GAChB5B,KAAOiT,OAASD,EAChBhT,KAAOkT,aAAetR,EACtB5B,KAAOkO,MAAQF,EACfhO,KAAOmT,QAAU/P,EAEjBpD,KAAOoT,kBACPpT,KAAOqT,gBACPrT,KAAOsT,kBAAoBjU,OAC3BW,KAAOuT,SACPvT,KAAOwT,KAAO,GAAIxQ,IAAKC,MACrBwQ,eACAjU,KAAQA,MACR+C,OAAU/I,EAAEkG,UAAUkC,EAAapI,EAAEJ,SAASiG,YAEhDW,KAAO0T,QAAU1T,KAAK0T,QACtBnZ,OAASoZ,KAAK3T,MAEdA,KAAO4T,uBAEPpa,EAAIgJ,KAAKZ,EAAa,SAACC,EAAY1G,GAC3B3B,EAAEsI,WAAWD,GACjBsH,EAAO0K,wBAAwB1Y,EAAK0G,GAEpCsH,EAAO2K,SAAS3Y,EAAK0G,KAInBjJ,EAAQsK,QAAU8P,GAASA,EAAMe,KAAOf,EAAMgB,KAClDhB,EAAQe,IAAI,WAAY,WAAO/T,EAAK0T,wCAIxCvN,IAAE6J,MAASxS,IAAA,qBACT,OAAShE,GAAEuR,MAAM/K,KAAKkT,aAAc,SAACe,EAAS9Y,GAC5C,GAAQ0G,GAAa7B,EAAKwT,KAAKC,YAAYtY,EAC3C,SAAO0G,IACDA,YAAsBpC,GAAeoC,EAAWmO,MAC7ChQ,EAAKoT,eAAejY,GAAK6U,UAItC7J,GAAE+N,GAAM1W,IAAA,WACN,MAASwC,MAAKwT,KAAKhU,MAGrB2G,GAAElD,KAAQzF,IAAA,WACR,MAASwC,MAAKuT,OAGhBR,GAAAxP,UAAEmQ,QAAO,qBACP1T,MAAOmU,yBACP3a,EAAIgJ,KAAKxC,KAAKsT,kBAAmB,SAAAc,GAAYA,MAC7C5a,EAAIgJ,KAAKxC,KAAKkT,aAAc,SAACrR,EAAY1G,GAAS6E,EAAKqU,YAAYlZ,KACnE6E,KAAOwT,KAAKc,YAGdvB,GAAAxP,UAAEqQ,qBAAoB,sBACZW,EAAiB/a,EAAEkG,UAAUM,KAAKkT,aAAc,SAACrR,EAAY1G,GAAK,OACxEqZ,cAAgB,EAAMC,YAAY,EAAOjX,IAAK,WAAG,MAAGwC,GAAKwT,KAAKjR,OAAOpH,MAGvE,IADAZ,OAASma,iBAAiB1U,KAAKuT,MAAOgB,GAChCvU,KAAKiT,OAAQ,CACjB,IAAOxa,GAAM0C,KAAO6E,MAAKkT,aACvB,GAAM/X,IAAO6E,GAAKiT,OAChB,KAAQ,IAAIha,OAAM,kDAAkDkC,EAGxEZ,QAASma,iBAAiB1U,KAAKiT,OAAQsB,GACjCvU,KAAKiT,OAAO0B,QAAQ3U,KAAKiT,OAAO0B,OAAOC,IAAIC,WAIrD9B,GAAAxP,UAAE4Q,uBAAsB,qBACfnU,MAAKiT,QACZzZ,EAAIgJ,KAAKxC,KAAKkT,aAAc,SAACrR,EAAY1G,SAC9B6E,GAAKiT,OAAO9X,MAIzB4X,GAAAxP,UAAEsQ,wBAAuB,SAAC1Y,EAAK4G,GAC7B,GAAQ+S,GAAkBnD,EAAMF,IAAI,iBAAiBtW,GAC7C4Z,EAAS/U,KAAKgV,mBAAmB3a,KAAK2F,KAAM+B,EAAI+S,GAChDtI,EAASxM,KAAKiV,0BAA0B5a,KAAK2F,KAAM7E,EAAK4G,EAAI+S,GAC5DI,EAAetc,EAAQsK,SAAWnB,EAAGC,sBAG7ChC,MAAOwT,KAAKpZ,OAAO2a,EAAQvI,GAAS2I,WAAYD,IAC1CA,IACGlV,KAAKsT,oBAAmBtT,KAAKsT,sBACpCtT,KAAOsT,kBAAkBpW,KAAKtE,EAAQI,MAAM+b,EAAQvI,GAAQ,MAIhEuG,GAAAxP,UAAEyR,mBAAkB,SAACjT,EAAI+S,GACvB,GAAQzT,GAAYC,IACpB,KACE,MAAS/B,GAAYwC,EAAGnH,KAAKoF,KAAKiT,SACjC,QACD6B,EAAkBtT,SAAWF,KAAmBD,EAChDyT,EAAkBrT,eAAiB,IAIvCsR,GAAAxP,UAAE0R,0BAAyB,SAAC9Z,EAAKiB,EAAO0Y,GACtC,GAAQM,GAAgB5b,EAAEsI,WAAW1F,GAASA,EAAM4D,KAAKiT,QAAU7W,EAC3DiZ,EAAgBrV,KAAKwT,KAAKC,YAAYtY,GACtCma,GAAqBtW,EAAaqW,EAAeD,EACzD,IAAOE,EAAP,CAEA,GADMR,GAAmBQ,IAAmBR,EAAgB5D,YAAc,IACnEkE,EAEL,WADApV,MAAOqU,YAAYlZ,EAGfia,aAAyB3V,KAAWjG,EAAE6K,IAAIrE,KAAKoT,eAAgBjY,IACnE6E,KAAOqU,YAAYlZ,GACnB6E,KAAO8T,SAAS3Y,EAAKia,IAErBpV,KAAOoT,eAAejY,GAAKoa,mBAAmBH,GAEhDpS,EAAMrF,IAAIqC,KAAKwT,KAAKC,YAAatY,EAAKia,GACtCxc,EAAUE,WAGZia,GAAAxP,UAAEgS,mBAAkB,SAAC3T,aACnBpI,GAAIgJ,KAAKZ,EAAa,SAACC,EAAY1G,GACjCgO,EAAO8L,0BAA0B9Z,EAAK0G,KAExCrI,EAAIgJ,KAAKxC,KAAKkT,aAAc,SAACrR,EAAY1G,GAChC3B,EAAE6K,IAAIzC,EAAazG,IAAM6E,EAAKiV,0BAA0B9Z,KAEjE6E,KAAOkT,aAAetR,GAGxBmR,GAAAxP,UAAEuQ,SAAQ,SAAC3Y,EAAK0G,aAGd,IAFAmB,EAAMrF,IAAIqC,KAAKwT,KAAKC,YAAatY,EAAK0G,GACtCjJ,EAAUE,SACH+I,EACP,GAAMA,YAAsB0M,GAAW,CACrCvL,EAAMrF,IAAIqC,KAAKwT,KAAKhU,KAAMrE,EAAK0G,EAC/B,IAAQ2T,GAAWxV,KAAKyV,gBAAgBpb,KAAK2F,KAAM7E,EACnD6E,MAAOqT,aAAalY,GAAO6E,KAAKkO,MAAMwH,iBAAiB7T,EAAY2T,EAAUxV,KAAKmT,aAC3E,IAAItR,YAAsByN,GAAO,CACxCtM,EAAMrF,IAAIqC,KAAKwT,KAAKhU,KAAMrE,EAAK0G,EAC/B,IAAQ2T,GAAWxV,KAAK2V,kBAAkBtb,KAAK2F,KAAM7E,EACrD6E,MAAOqT,aAAalY,GAAO6E,KAAKkO,MAAM0H,aAAa/T,EAAY2T,EAAUxV,KAAKmT,aACvE,CACP,GAAQ0C,MAAeC,IACvB9S,GAAMrF,IAAIqC,KAAKwT,KAAKhU,KAAMrE,EAAK2a,EAC/B,IAAQC,GAAe/V,KAAKoT,eAAejY,GACzC,GAAM4X,IAAU8C,EAAUhU,EAAY7B,KAAKkO,MAAOlO,KAAKmT,QAAS2C,GAI1D1B,EAAUpU,KAAKqT,aAAalY,GAAO6E,KAAKkO,MAAMiB,MAAMnW,MAC1D,WAAK,MAAG+c,GAAa/F,OACrB,SAAEgG,GACOA,IACP5B,UACSpU,GAAKqT,aAAalY,GAC3B6H,EAAMrF,IAAIqC,EAAKwT,KAAKjR,OAAQpH,EAAK0a,GACjCjd,EAAUE,cAMlBia,GAAAxP,UAAE8Q,YAAW,SAAClZ,GACZ6H,EAAMyB,OAAOzE,KAAKwT,KAAKhU,KAAMrE,GAC7B6E,KAAOyV,gBAAgBta,EAAKkE,QACtB7F,EAAE6K,IAAIrE,KAAKoT,eAAgBjY,KAC/B6E,KAAOoT,eAAejY,GAAKuY,gBAClB1T,MAAKoT,eAAejY,IAEzB6E,KAAKqT,aAAalY,IAAM6E,KAAKqT,aAAalY,WACvC6E,MAAKqT,aAAalY,GAC3B6H,EAAMyB,OAAOzE,KAAKwT,KAAKC,YAAatY,GACpCvC,EAAUE,UAGZia,GAAAxP,UAAEkS,gBAAe,SAACta,EAAKiB,GACf4D,KAAKwT,KAAKjR,OAAOpH,KAASiB,IAC9B4G,EAAMrF,IAAIqC,KAAKwT,KAAKjR,OAAQpH,EAAKiB,GACjCxD,EAAUE,WAIdia,GAAAxP,UAAEoS,kBAAiB,SAACxa,EAAK8a,GAChBjW,KAAKwT,KAAKjR,OAAOpH,KACtB6H,EAAMrF,IAAIqC,KAAKwT,KAAKjR,OAAQpH,MAC5BvC,EAAUE,SAEZ,IAAQ+c,GAAW7V,KAAKwT,KAAKjR,OAAOpH,EACpC,KAAO1C,GAAMyd,KAAYL,GAChBA,EAAS1Z,eAAe+Z,KACxB1c,EAAE2c,SAASF,EAAWC,KAC3BlT,EAAMyB,OAAOoR,EAAUK,GACvBtd,EAAUE,UAId,KAAqB,GADbiD,GAASiE,KAAKkO,MAAMyC,UAAU3Q,KAAKwT,KAAKC,YAAYtY,GAAKkC,MAC5CX,EAAA,EAAAC,EAAIsZ,EAASvZ,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAClC,GADWwZ,GAAQvZ,EAAAD,EACbmZ,GAAS1Z,eAAe+Z,KAC9BlT,EAAMrF,IAAIkY,EAAUK,EAAUna,EAAOma,IACrCtd,EAAUE,oDQpNdL,IAAM2d,KACJ,OAAQ,QAAS,OAAQ,MAAO,SAAU,SAAU,UAAW,OAAQ,OAGnEC,MAGAC,GAAW,SACHC,EAAWC,EAAO5W,GAC9BI,KAAOyW,WAAaF,EACpBvW,KAAO0W,OAASF,EAChBxW,KAAO2W,UAAY/W,EACnBI,KAAO4W,QAAS,EAGlBN,IAAA/S,UAAEsT,SAAQ,qBACR7W,MAAOI,SACPJ,KAAO4W,QAAS,CAChB,IAAQE,GAAUrT,KAAKC,MAAQ1D,KAAKyW,WAAWM,eAC/C/W,MAAOgX,WAAa7L,WAAWnL,KAAK0W,OAASI,EAAS,WACpD3N,EAAOyN,QAAS,EAChBzN,EAAOwN,UAAU3W,EAAKyW,eAI1BH,GAAA/S,UAAEnD,OAAM,WACAJ,KAAK4W,QAAQ5W,KAAK2W,UAAU3W,KAAKyW,YACjCzW,KAAKgX,YAAYC,aAAajX,KAAKgX,YAK3C,IAAME,IAAU,SACFC,EAAM/T,EAAQgU,GAC1BpX,KAAOqX,MAAQF,EACfnX,KAAOmT,QAAU/P,EACjBpD,KAAOsX,QAAUF,EACjBpX,KAAOuX,QAAS,EAChBvX,KAAOwX,UAAW,EAClBxX,KAAOyX,QAAS,EAChBzX,KAAO0X,OAAS,EAChB1X,KAAO+W,gBAAkBtT,KAAKC,MAC9B1D,KAAO2X,gGAGTxR,IAAEgR,KAAQ3Z,IAAA,WAAI,MAAOwC,MAAKqX,OAC1BlR,GAAE/C,OAAU5F,IAAA,WAAI,MAAOwC,MAAKmT,SAC5BhN,GAAEiR,OAAU5Z,IAAA,WAAI,MAAOwC,MAAKsX,SAC5BnR,GAAE6J,MAASxS,IAAA,WAAI,MAAOwC,MAAKuX,QAC3BpR,GAAEyR,QAAWpa,IAAA,WAAI,MAAOwC,MAAKwX,UAC7BrR,GAAE0R,MAASra,IAAA,WAAI,MAAOwC,MAAKyX,QAC3BtR,GAAE2R,MAASta,IAAA,WAAI,MAAOwC,MAAK0X,QAC3BvR,GAAE5H,MAASf,IAAA,WAAI,MAAOwC,MAAK+X,QAE3Bb,GAAA3T,UAAEyU,OAAM,SAACxB,EAAO5W,GACd,GAAQkN,GAAS,GAAIwJ,IAAWtW,KAAMwW,EAAO5W,EAC7CI,MAAO2X,aAAaza,KAAK4P,GACzBA,EAAS+J,YAGXK,GAAA3T,UAAE0U,YAAW,SAAC7b,GACZ4D,KAAOwX,SAAWpb,GAGpB8a,GAAA3T,UAAE2U,UAAS,SAAC9b,GACV4D,KAAOyX,OAASrb,GAGlB8a,GAAA3T,UAAE4U,WAAU,SAACC,GACXpY,KAAOuX,QAAS,EACTa,IAAQpY,KAAK0X,OAAS,GAC7Ble,EAAIgJ,KAAKxC,KAAK2X,aAAc,SAAA7K,GAAO,MAAGA,GAAO1M,YAG/C8W,GAAA3T,UAAE8U,YAAW,WACXrY,KAAOuX,QAAS,EAChBvX,KAAO+W,gBAAkBtT,KAAKC,MAC9BlK,EAAIgJ,KAAKxC,KAAK2X,aAAc,SAAA7K,GAAO,MAAGA,GAAO+J,cAG/CK,GAAA3T,UAAE+U,gBAAe,WACftY,KAAO0X,kDAKT,IAAqBa,IAAW,SAClBC,GACZxY,KAAOyY,QAAUD,EACjBxY,KAAO4G,cACPrM,OAAS0H,OAAOjC,MAGlBuY,IAAAhV,UAAEmV,UAAS,SAACC,EAAcC,GACxB,IAAOpf,EAAE2c,SAASC,GAAgBuC,GAChC,KAAQ,IAAI1f,OAAM,qCAAuC0f,EAE3D,IAAQE,GACNrf,EAAIsf,WAAWtf,EAAE2E,KAAKya,IAAa,WAAY,UAAW,UAAW,aACvE,IAAMC,EAAgBhc,OACpB,KAAQ,IAAI5D,OAAM,qCAAuC4f,EAAgB1b,KAAK,MAEhF,IAAQ4b,IACNC,SAAYhZ,KAAKiZ,aAAa,WAAYN,EAAcC,EAAUI,UAClEE,QAAWlZ,KAAKiZ,aAAa,UAAWN,EAAcC,EAAUM,SAChEC,QAAWnZ,KAAKiZ,aAAa,UAAWN,EAAcC,EAAUO,SAChEC,UAAapZ,KAAKiZ,aAAa,YAAaN,EAAcC,EAAUQ,WAEtE,OAASpZ,MAAKqZ,iBAAiBhf,KAAK2F,KAAM2Y,EAAcI,IAG1DR,GAAAhV,UAAE0V,aAAY,SAACK,EAAOX,EAAc/Y,GAClC,GAAOA,EAAP,CACA,GAAQzE,GAAM6E,KAAKuZ,iBAAiBD,EAAOX,GACnCa,EAAkB7Z,EAAoBC,EAE9C,QADGI,KAAK4G,WAAWzL,KAAS6E,KAAK4G,WAAWzL,QAAY+B,KAAKsc,GACpDA,IAGXjB,GAAAhV,UAAEkW,gBAAe,SAACH,EAAOX,EAAca,GACrC,GAAOA,EAAP,CACA,GAAQre,GAAM6E,KAAKuZ,iBAAiBD,EAAOX,EACrC3Y,MAAK4G,WAAWzL,IAAM3B,EAAEkgB,KAAK1Z,KAAK4G,WAAWzL,GAAMqe,KAG3DjB,GAAAhV,UAAE8V,iBAAgB,SAACV,EAAcI,aAC/Bvf,GAAIgJ,KAAKuW,EAAkB,SAACS,EAAiBF,GAC3CnQ,EAAOsQ,gBAAgBH,EAAOX,EAAca,MAIhDjB,GAAAhV,UAAEoW,cAAa,SAACL,EAAOM,EAAexW,GACpC,SAAYqG,OACVzJ,KAAO4G,WAAW5G,KAAKuZ,iBAAiBD,EAAOlW,KAAYiT,GAC3DrW,KAAO4G,WAAW5G,KAAKuZ,iBAAiBD,EAAOM,KAAmBvD,GAClErW,KAAO4G,WAAW5G,KAAKuZ,iBAAiBD,EAAO,SAAWjD,KAI9DkC,GAAAhV,UAAEgW,iBAAgB,SAACD,EAAOX,GACxB,MAASW,GAAQ,IAAIX,GAGvBJ,GAAAhV,UAAEsW,QAAO,SAACD,EAAexW,EAAQgU,EAAQ0C,aACvCA,GAAana,EAAoBma,EACjC,IAAQvD,GAAYvW,KAAK+Z,gBAAgBH,EAAexW,EAAQgU,EAChE,OAASpX,MAAKga,MAAMzD,GAAW/V,KAAK,WAClC,GAAQyZ,GAAqB,WAC3B,MAASH,KAAWpZ,MAAM,SAAAhC,GAAE,MAAGsB,GAAKka,YAAY3D,EAAW7X,GAAG8B,KAAKyZ,KAErE,OAASA,OACNzZ,KAAK,SAAAtE,GAAO,MAAG8D,GAAKma,IAAI5D,GAAW/V,KAAK,WAAG,MAAGtE,QAGrDqc,GAAAhV,UAAEwW,gBAAe,SAACH,EAAexW,EAAQgU,GACvC,MAAS,IAAIF,IAAU0C,EAAexW,EAAQgU,IAGhDmB,GAAAhV,UAAEyW,MAAK,SAACzD,aACN,OAAS1W,SAAQgL,IAAIrR,EAAEkE,IACrBsC,KAAO2Z,cAAc,WAAYpD,EAAUY,KAAMZ,EAAUnT,QAC3D,SAAE4V,GAAS,MAAGA,GAASzC,MACpB/V,KAAK,WACD+V,EAAUsB,OAAOtB,EAAU0B,aAAY,IAC3C,SAAAvZ,GAAE,MAAGsB,GAAKma,IAAI5D,EAAW7X,MAGhC6Z,GAAAhV,UAAE6W,UAAS,SAAC7D,GACVA,EAAY4B,cAGdI,GAAAhV,UAAE8W,WAAU,SAAC9D,GACXA,EAAY8B,eAGdE,GAAAhV,UAAE+W,MAAK,SAAC/D,EAAWhY,GAGjB,MAFAgY,GAAY+B,kBACZ/B,EAAYwB,OAASxZ,EACZsB,QAAQgL,IAAIrR,EAAEkE,IACrBsC,KAAO2Z,cAAc,UAAWpD,EAAUY,KAAMZ,EAAUnT,QAC1D,SAAE+V,GAAQ,MAAGA,GAAQ5C,EAAWhY,MAC7BiC,KAAK,SAAA+Z,GACR,GAAQC,GAAWhhB,EAAE8W,KAAKiK,EAE1B,OADMC,UAAiBjE,GAAUwB,OACxByC,KAIbjC,GAAAhV,UAAE2W,YAAW,SAAC3D,EAAWhY,aACvB,OAASyB,MAAKsa,MAAM/D,EAAWhY,GAAOiC,KAAK,SAAAtE,GACzC,IAAOA,EAAQ,MAAO8D,GAAKma,IAAI5D,EAAWhY,IACvC,SAAAG,GAAE,MAAGsB,GAAKma,IAAI5D,EAAW7X,MAGhC6Z,GAAAhV,UAAE4W,IAAG,SAAC5D,EAAWhY,aACf,KAAMgY,EAAUsB,MAIhB,MAHAtB,GAAY0B,aAAY,GACxB1B,EAAY2B,WAAU,GAChB3Z,IAAOgY,EAAUwB,OAASxZ,GACvBsB,QAAQgL,IAAIrR,EAAEkE,IACrBsC,KAAO2Z,cAAc,UAAWpD,EAAUY,KAAMZ,EAAUnT,QAC1D,SAAE8V,GAAQ,MAAGA,GAAQ3C,MAClB/V,KACH,WAAK,MAAGR,GAAKya,UAAUlE,IACvB,SAAE7X,GAEA,MADA6X,GAAYwB,OAASrZ,EACZsB,EAAKya,UAAUlE,MAK9BgC,GAAAhV,UAAEkX,UAAS,SAAClE,GAEV,GADAA,EAAY4B,YAAW,GACjB5B,EAAUhY,MAAO,CACrB,GAAQmc,GAAqB1a,KAAK2Z,cAAc,YAAapD,EAAUY,KAAMZ,EAAUnT,OACvF,OAASpD,MAAKyY,QAAQ1O,WAAWwM,EAAUhY,OAAOiC,KAAK,WAMrD,MALMka,IACJvP,WAAa,WACX3R,EAAIgJ,KAAKkY,EAAoB,SAAAtB,GAAU,MAAGA,GAAU7C,MACjD,GAEE1W,QAAQI,OAAOsW,EAAUhY,UCjOxC9F,IAAMkiB,IAAW,mEAEIC,GAAa,WAEhC5a,KAAO6a,mBAAqB,EAC5B7a,KAAO8a,qBAGTF,IAAArX,UAAEwX,kBAAiB,SAACrX,aAClBA,GAAQA,GAAOD,KAAKC,KAGpB,KAAOzH,GAFC+e,GAAQ,GAAIlR,OAAM,IACpBmR,EAASvX,EACJhH,EAAI,EAAGA,GAAK,EAAGA,IACxBse,EAAQte,GAAKie,GAAS3d,OAAgB,GAATie,GAC7BA,EAAW9W,KAAK+W,MAAMD,EAAS,GAEjC,IAAMvX,IAAQ1D,KAAK6a,mBAAoB,CAErC,IADA,GAAMne,GAAI,GACDA,GAAK,GAAmC,KAA9BsD,KAAK8a,kBAAkBpe,IACxCyM,EAAO2R,kBAAkBpe,GAAK,EAC9B0Q,GAAO,CAET,IAAM1Q,KAAM,EACV,KAAQ,IAAIzD,OAAM,yEAEpB+G,MAAO8a,kBAAkBpe,IAAM,MACxB,CACPsD,KAAO6a,mBAAqBnX,CAC5B,KAAOzH,GAAIS,GAAI,EAAGA,EAAI,GAAIA,IAExByM,EAAO2R,kBAAkBpe,GAAKyH,KAAK+W,MAAM/W,KAAKgX,UAAYze,EAAI,GAAK,KAGvE,IAAOT,GAAIS,GAAI,EAAGA,EAAI,GAAIA,IACxBse,EAAQte,EAAI,GAAKie,GAAS3a,EAAK8a,kBAAkBpe,GAEnD,OAASse,GAAM7d,KAAK,ICjCtB,IAAqBie,IAAS,SAChB3P,EAAS+M,GACrBxY,KAAOqb,SAAW5P,EAClBzL,KAAOyY,QAAUD,EACjBxY,KAAOwT,KAAO,GAAIxQ,IAAKC,MAAOqY,OAC5BC,UAAalc,OAAWmc,WAAY,EAAGC,KAAMpc,OAAWqc,OAAQrc,OAChEsc,cAAe,SAACC,cACNzgB,EAAM,MAAQygB,CACtB,KAAO5b,KAAK7D,eAAehB,GAAM,CAC/B,GAAQqR,GAAS,WACfrD,EAAOhO,GAAOsI,KAAKC,MAAQ1D,EAAKwb,WAChC5iB,EAAUE,SAEZ0T,KACA5E,YAAc,WAAG,MAAG4E,IAAQoP,GAE9B,MAAS5b,MAAK7E,QAIlBqd,EAASvM,OAAOR,EAASzL,KAAK6b,kBAAmB7b,MAEjDA,KAAO8b,qBAAqB,mBAAoB,cAChD9b,KAAO8b,qBAAqB,YAAa,aACzCvhB,OAAS0H,OAAOjC,mBAGlBmG,IAAE4V,KAAQve,IAAA,WACR,MAASwC,MAAKwT,KAAKwI,MAAMV,OAG3BF,GAAA7X,UAAEmQ,QAAO,WACP1T,KAAOyY,QAAQtM,QAAQnM,KAAKqb,SAAUrb,KAAK6b,kBAAmB7b,MAC9DA,KAAOwT,KAAKc,YAGd8G,GAAA7X,UAAEsY,kBAAiB,SAACJ,GAClBzb,KAAO+b,KAAKN,KAAOA,EACnBzb,KAAO+b,KAAKL,OAASD,GAAQA,EAAK9Q,IAClC/R,EAAUE,UAGZsiB,GAAA7X,UAAEuY,qBAAoB,SAACG,EAAUC,cACvBC,EAAiBnc,KAAa,SAAA,UAAUic,CAChDjc,MAAOyY,QAAQhM,GAAG0P,EAAaA,EAAa,KAAM,QAAS,SAAAC,GACzDjT,EAAO4S,KAAKG,GAAaE,EAAKhgB,MAC9BxD,EAAUE;AC3Cd,GAAMujB,IAAa,SACLC,EAAS1L,GACrB5Q,KAAOuc,SAAWD,EAClBtc,KAAOwc,OAAS5L,EAChB5Q,KAAOyc,cACPzc,KAAO0c,SACP1c,KAAO2c,KAAO3c,KAAKuc,SAASlB,SAAWzK,EAAMvT,KAC7C2C,KAAO4c,UAAYxf,EAAUwT,EAAMvT,MAAM,GACzC2C,KAAO6c,YAAa,EACpB7c,KAAOgQ,OAAQ,EAGjBqM,IAAA9Y,UAAEuZ,OAAM,SAACvG,EAAWwG,GAClB/c,KAAOgd,UACPhd,KAAOyc,WAAWvf,MAAMqZ,UAAAA,EAAWwG,aAAAA,IAC7BA,GAAcA,EAAa/c,KAAK0c,QAGxCL,GAAA9Y,UAAE0Z,OAAM,SAAC1G,GACP,GAAQzX,GAAItF,EAAE0jB,UAAUld,KAAKyc,YAAalG,UAAAA,GAE1C,OADMzX,IAAK,GAAGkB,KAAKyc,WAAWxf,OAAO6B,EAAG,GAC/BkB,KAAKyc,WAAW5f,QAG3Bwf,GAAA9Y,UAAEyZ,QAAO,WACDhd,KAAK6c,aACX7c,KAAOuc,SAAS9D,QAAQhM,GACtBzM,KAAOwc,OAAOphB,WAAY4E,KAAK2c,KAAM3c,KAAKwc,OAAOtM,YAAa,QAC9DlQ,KAAOmd,gBAAiBnd,KAAKod,aAAa/iB,KAAK2F,KAAKwc,OAAOnf,MAAO2C,MAAOqd,MAAM,IACjFrd,KAAO6c,YAAa,IAGtBR,GAAA9Y,UAAEmQ,QAAO,qBACP1T,MAAOuc,SAAS9D,QAAQxL,IACtBjN,KAAOwc,OAAOphB,WAAY4E,KAAK2c,KAAM3c,KAAKwc,OAAOtM,YAAa,QAASlQ,KAAKmd,gBAC5End,MACFA,KAAO6c,YAAa,EACpB7c,KAAOgQ,OAAQ,EACfpX,EAAUE,QACV,KAAgB,GAAA4D,GAAA,EAAAC,EAAIqD,KAAK0c,MAAKhgB,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC9B,GADWvB,GAAGwB,EAAAD,EACZsD,GAAKuc,SAASe,kBAAkBtd,EAAK4c,UAAUnT,OAAOtO,MAI5DkhB,GAAA9Y,UAAE4Z,gBAAe,SAACf,aAGhB,IAAOpc,KAAKyc,WAAW5f,QAAWmD,KAAK6c,WAAvC,CACA,GAAQU,GAAcvd,KAAKwd,YAAYpB,EAEvC,IADApc,KAAOuc,SAASkB,eAAerB,IACxBpc,KAAKgQ,MAAO,CACjBhQ,KAAOgQ,OAAQ,EACfpX,EAAUE,QACV,KAAqB,GAAA4D,GAAA,EAAAC,EAAIqD,KAAKyc,WAAU/f,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACxC,GADWsP,GAAQrP,EAAAD,EACjBsD,GAAKuc,SAASmB,YAAYtD,UAAUpO,EAASuK,YAGnD,GAAMgH,EACJ,IAAqB,GAAAnQ,GAAA,EAAAC,EAAIrN,KAAKyc,WAAUrP,EAAAC,EAAAxQ,OAAAuQ,GAAA,EAAE,CACxC,GADWpB,GAAQqB,EAAAD,EACbpB,GAAS+Q,cAAc/Q,EAAS+Q,aAAaQ,MAKzDlB,GAAA9Y,UAAEia,YAAW,SAACpB,MACNmB,SACN,IAAMnB,EAAK/e,OAAS2C,KAAKwc,OAAOnf,KAG9B,GAFAkgB,EAAgB/jB,EAAE2E,KAAKie,EAAKhgB,OAC5BmhB,EAAcI,OACRnkB,EAAE2F,QAAQa,KAAK0c,MAAOa,GAC1BA,EAAgB,SACT,CACP,IAAgB,GAAA7gB,GAAA,EAAAC,EAAInD,EAAEsf,WAAWyE,EAAavd,KAAK0c,OAAMhgB,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACzD,GADWvB,GAAGwB,EAAAD,EACZsD,GAAKuc,SAASqB,gBAAgB5d,EAAK4c,UAAUnT,OAAOtO,IAExD,IAAgB,GAAAiS,GAAA,EAAAC,EAAI7T,EAAEsf,WAAW9Y,KAAK0c,MAAOa,GAAYnQ,EAAAC,EAAAxQ,OAAAuQ,GAAA,EAAE,CACzD,GADWjS,GAAGkS,EAAAD,EACZpN,GAAKuc,SAASe,kBAAkBtd,EAAK4c,UAAUnT,OAAOtO,IAE1D6E,KAAO0c,MAAQa,MAEV,IAAInB,EAAK/e,KAAKhC,QAAQ,WAAW,MAAQ2E,KAAKwc,OAAOnf,KAAM,CAClE,GAAQwgB,GAASrkB,EAAE2c,SAASnW,KAAK0c,MAAON,EAAKjhB,IACvCihB,GAAKhgB,MACFyhB,IACL7d,KAAOuc,SAASqB,gBAAgB5d,KAAK4c,UAAUnT,OAAO2S,EAAKjhB,MAC3D6E,KAAO0c,MAAMxf,KAAKkf,EAAKjhB,KACvB6E,KAAO0c,MAAMiB,OACbJ,EAAgBvd,KAAK0c,OAGjBmB,IACJ7d,KAAOuc,SAASe,kBAAkBtd,KAAK4c,UAAUnT,OAAO2S,EAAKjhB,MAC7D3B,EAAIkgB,KAAK1Z,KAAK0c,MAAON,EAAKjhB,KAC1B6E,KAAO0c,MAAMiB,OACbJ,EAAgBvd,KAAK0c,OAI3B,MAASa,IAGXlB,GAAA9Y,UAAE6Z,aAAY,SAAC7e,aACNyB,MAAKyc,WAAW5f,QAAWmD,KAAK6c,aACvC7c,KAAO6c,YAAa,EACpBhd,QAAUgL,IAAIrR,EAAEkE,IAAIsC,KAAKyc,WAAY,SAAAzQ,GAEnC,MADA7C,GAAOoT,SAASmB,YAAYrD,WAAWrO,EAASuK,WACvCvW,EAAKuc,SAASmB,YAAYpD,MAAMtO,EAASuK,UAAWhY,GAAOmC,MAAM,SAAAhC,GAExE,MADAsN,GAAWuK,UAAUlC,YAAY3V,IACxB,OAEP8B,KAAK,SAAA+Z,GACT,GAAM/gB,EAAE8W,KAAKiK,GACLva,EAAKyc,WAAW5f,QAAQmD,EAAKgd,cAEnC,KAAqB,GAAAtgB,GAAA,EAAAC,EAAIqD,EAAKyc,WAAU/f,EAAAC,EAAAE,OAAAH,GAAA,EAAjC,CAAAjE,GAAMuT,GAAQrP,EAAAD,EAAqBsP,GAASuK,UAAUlC,YAAY9V,OAO/E,IAAMuf,IAAK,SACGxB,EAASjf,EAAMiR,GAC3BtO,KAAOuc,SAAWD,EAClBtc,KAAO3C,KAAOA,EACd2C,KAAOsO,OAASA,EAChBtO,KAAOnB,IAAMmB,KAAKuc,SAASlB,SAAWhe,EACtC2C,KAAO+d,cACP/d,KAAOge,WAAa,EACpBhe,KAAOie,WAAY,EACnBje,KAAOgQ,OAAQ,EACfhQ,KAAOyO,oCAGTtI,IAAEjD,OAAU1F,IAAA,WACV,MAASwC,MAAKke,OAASle,KAAKge,YAG9B7X,GAAE+X,MAAS1gB,IAAA,WACT,MAASwC,MAAK+d,WAAWlhB,QAG3BihB,GAAAva,UAAE4a,OAAM,SAACC,aACP,KAAOA,GAAQpe,KAAKke,MAAO,CACzB,GAAMle,KAAKie,UAAW,MACtBzkB,GAAIgJ,KAAKxC,KAAK+d,WAAY,SAAAM,GAAOre,EAAKuc,SAASmB,YAAYrD,WAAWgE,KACtEre,KAAOuc,SAAS9D,QAAQhM,GACtBzM,KAAOnB,IAAKmB,KAAKnB,IAAK,KAAM,QAASmB,KAAKmd,gBAAiBnd,KAAKod,aAAa/iB,KAAK2F,MAClFA,MAASqd,MAAM,IACjBrd,KAAOie,WAAY,MAEnBzkB,GAAIgJ,KAAKxC,KAAKyO,SAAU,SAAAD,GAAUA,EAAM2P,YAI5CL,GAAAva,UAAE+a,SAAQ,SAACF,IACFA,GAAQpe,KAAKie,WAClBje,KAAOuc,SAAS9D,QAAQxL,IAAIjN,KAAKnB,IAAKmB,KAAKnB,IAAK,KAAM,QAASmB,KAAKmd,gBAAiBnd,MACrFA,KAAOie,WAAY,EACnBje,KAAOue,mBAAmB,SAAAC,GAClBA,EAAKxO,QACTwO,EAAOxO,OAAQ,EACfpX,EAAUE,aAIdU,EAAIgJ,KAAKxC,KAAKyO,SAAU,SAAAD,GAAUA,EAAM8P,cAI5CR,GAAAva,UAAE4Z,gBAAe,SAACf,aACTpc,MAAKie,WAAcje,KAAKuc,SAASkC,eAAerC,EAAK/e,QAC5D2C,KAAOuc,SAASkB,eAAerB,GACxBpc,KAAKgQ,OAASoM,EAAK/e,OAAS2C,KAAK3C,OACtC2C,KAAOgQ,OAAQ,EACfpX,EAAUE,SACVkH,KAAOse,UAAS,GAChBte,KAAOue,mBAAmB,SAAAC,GACxB,IAAe,GAAA9hB,GAAA,EAAAC,EAAIqD,EAAK+d,WAAUrhB,EAAAC,EAAAE,OAAAH,GAAA,EAA3B,CAAAjE,GAAM4lB,GAAE1hB,EAAAD,EAAqBsD,GAAKuc,SAASmB,YAAYtD,UAAUiE,SAK9EP,GAAAva,UAAE6Z,aAAY,SAAC7e,aACb,IAAOyB,KAAKke,OAAUle,KAAKie,UAS3B,MARAje,MAAOie,WAAY,EACnBje,KAAOue,mBAAmB,SAAAC,GAClBA,EAAKxO,QACTwO,EAAOxO,OAAQ,EACfpX,EAAUE,SAEZ,KAAe,GAAA4D,GAAA,EAAAC,EAAIqD,EAAK+d,WAAUrhB,EAAAC,EAAAE,OAAAH,GAAA,EAA3B,CAAAjE,GAAM4lB,GAAE1hB,EAAAD,EAAqBsD,GAAKuc,SAASmB,YAAYrD,WAAWgE,MAElExe,QAAQgL,IAAIrR,EAAEkE,IAAIsC,KAAK+d,WAAY,SAAAM,GAC1C,MAASre,GAAKuc,SAASmB,YAAYpD,MAAM+D,EAAI9f,GAAOmC,MAAM,SAAAhC,GAExD,MADA2f,GAAKhK,YAAY3V,IACR,OAEP8B,KAAK,SAAA+Z,GACT,GAAM/gB,EAAE8W,KAAKiK,GACLva,EAAKke,OAAOle,EAAKme,aAEvB,KAAe,GAAAzhB,GAAA,EAAAC,EAAIqD,EAAK+d,WAAUrhB,EAAAC,EAAAE,OAAAH,GAAA,EAA3B,CAAAjE,GAAM4lB,GAAE1hB,EAAAD,EAAqB2hB,GAAGhK,YAAY9V,OAMzDuf,GAAAva,UAAEgb,mBAAkB,SAACG,GACnBA,EAAW1e,MACXxG,EAAIgJ,KAAKxC,KAAKyO,SAAU,SAAAD,GAAM,MAAGA,GAAM+P,mBAAmBG,MAG5DZ,GAAAva,UAAEob,8BAA6B,SAACC,GAM9B,MALOA,KAAOA,MACdA,EAAQ5e,KAAK3C,MAAQ2C,KAAKkD,OACnBlD,KAAKkD,QACV1J,EAAIgJ,KAAKxC,KAAKyO,SAAU,SAAAD,GAAUA,EAAMmQ,8BAA8BC,KAE/DA,2CAKX,IAAqBC,IAAQ,SACfpT,EAAS+M,EAAQsG,EAAYC,EAAeC,GACxDhf,KAAOqb,SAAW5P,EAClBzL,KAAOyY,QAAUD,EACjBxY,KAAO0d,YAAcoB,EACrB9e,KAAOyd,eAAiBsB,EACxB/e,KAAOif,WAAaD,EACpBhf,KAAOwT,KAAO,GAAIxQ,IAAKC,MAAO8Y,KAAM,GAAI+B,IAAK9d,KAAM,KAAMkf,oBACzDlf,KAAOmf,WAAa5kB,OAAOwJ,OAAO,MAClC/D,KAAOmf,WAAW,KAAOnf,KAAKof,MAC9B7kB,OAAS0H,OAAOjC,sCAGlB+P,IAAEqP,MAAS5hB,IAAA,WACT,MAASwC,MAAKwT,KAAKwI,MAAMD,MAG3BhM,GAAEsP,eAAkB7hB,IAAA,WAClB,MAASwC,MAAKwT,KAAKwI,MAAMkD,eAG3BL,GAAAtb,UAAEmQ,QAAO,WACPla,EAAIgJ,KAAKxC,KAAKqf,eAAgB,SAAAC,GAAiBA,EAAa5L,YAC5D1T,KAAOof,MAAMd,WACbte,KAAOwT,KAAKc,YAGduK,GAAAtb,UAAEgc,OAAM,SAACliB,EAAMkZ,GACb,MAASvW,MAAK4d,gBAAgBxgB,EAAUC,GAAM,GAAOkZ,IAGvDsI,GAAAtb,UAAEqa,gBAAe,SAACnhB,EAAU8Z,GAI1B,IAAoB,GAHdiI,UACAgB,GAAcjJ,EACdvG,GAAQ,EACMtT,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,GACZ8R,EAAQ1R,EAAU0hB,EAAK/P,UAAY+P,EAAK/P,SAAS3R,GAAWkD,EAAKof,KAChE5Q,KACLA,EAAU,GAAIsP,IAAK9d,GAAuB,MAAdwe,EAAKnhB,KAAe,GAAKmhB,EAAKnhB,MAAI,IAAIP,EAAW0hB,GAC7Exb,EAAMrF,IAAI6gB,EAAK/P,SAAU3R,EAAS0R,GAClCrF,EAAOgW,WAAW3Q,EAAMnR,MAAQmR,GAElCgR,EAAeA,GAAchR,EAAMyP,UACnCjO,EAAUA,GAASxB,EAAMwB,MACzBwO,EAAShQ,EAEL+H,EACJiI,EAAOT,WAAW7gB,KAAKqZ,GAEvBiI,EAAOR,aAEHwB,EACEjJ,GAAavG,GAAOhQ,KAAK0d,YAAYtD,UAAU7D,GAErDiI,EAAOL,UAIXU,GAAAtb,UAAEkc,SAAQ,SAACpiB,EAAMkZ,GACf,MAASvW,MAAKsd,kBAAkBlgB,EAAUC,GAAM,GAAOkZ,IAGzDsI,GAAAtb,UAAE+Z,kBAAiB,SAAC7gB,EAAU8Z,GAG5B,IAAoB,GADdiI,UADEkB,KAEYtS,EAAA,EAAAzQ,EAAIF,EAAQ2Q,EAAAzQ,EAAAE,OAAAuQ,GAAA,EAAE,CAChC,GADWtQ,GAAOH,EAAAyQ,EAElB,IADEoR,EAAO1hB,EAAU0hB,EAAK/P,UAAY+P,EAAK/P,SAAS3R,GAAWkD,EAAKof,OAC3DZ,EAAM,KACbkB,GAAYxiB,KAAKshB,GAEnB,IAAOA,KAAUjI,EAAYiI,EAAKN,MAAQM,EAAKR,YAC7C,KAAQ,IAAI/kB,OAAM,sBAAqBwD,EAASU,KAAK,MAAQ,KAgB/D,IAdMoZ,EACJ/c,EAAIkgB,KAAK8E,EAAKT,WAAYxH,GAE1BiI,EAAOR,aAEHzH,IAAciI,EAAKN,QAMvBM,EAAOL,SACDK,EAAKP,WAAWO,EAAKF,aAEtBE,EAAKtb,OAAQ,CAClB,IAAOjH,GAAIS,GAAIgjB,EAAU7iB,OAAS,EAAGH,EAAI,IACvC8hB,EAASkB,EAAUhjB,GACb8hB,IAASxe,EAAKof,QAASZ,EAAKtb,QAAW1J,EAAEyV,QAAQuP,EAAK/P,WAFlB/R,IAG1CsG,EAAMyB,OAAOib,EAAUhjB,EAAI,GAAG+R,SAAUhS,EAASC,IACjD8hB,EAAOxO,MAAQ3Q,aACNW,GAAKmf,WAAWX,EAAKnhB,KAEhC,IAAQA,GAAOZ,EAASU,KAAK,MAAQ,GACrC6C,MAAOif,WAAW5hB,EAAM2C,KAAK2f,2BAA2BtiB,MAI5DwhB,GAAAtb,UAAEqc,UAAS,SAAChP,EAAO2F,EAAWwG,GAC5B,GAAMuC,GAAetf,KAAKqf,eAAezO,EAAMxV,WACxCkkB,KACLA,EAAiB,GAAIjD,IAAarc,KAAM4Q,GACxC5N,EAAMrF,IAAIqC,KAAKqf,eAAgBzO,EAAMxV,WAAYkkB,IAEnDA,EAAexC,OAAOvG,EAAWwG,IAGnC8B,GAAAtb,UAAEsc,YAAW,SAACjP,EAAO2F,GACnB,GAAQ+I,GAAetf,KAAKqf,eAAezO,EAAMxV,WAC3CkkB,KAAiBA,EAAarC,OAAO1G,KACzC+I,EAAe5L,UACf1Q,EAAMyB,OAAOzE,KAAKqf,eAAgBzO,EAAMxV,cAK5CyjB,GAAAtb,UAAEkb,eAAc,SAACphB,GAGf,IAAoB,GADdmhB,UADE/hB,EAAWW,EAAUC,GAAM,GAEfX,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADE8hB,EAAO1hB,EAAU0hB,EAAK/P,UAAY+P,EAAK/P,SAAS3R,GAAWkD,EAAKof,OAC3DZ,EAAM,OAAO,CACpB,IAAMA,EAAKtb,OAAQ,OAAO,EAE5B,OAAS,GAGX2b,GAAAtb,UAAEoc,2BAA0B,SAACtiB,GAE3B,IAAoB,GADdmhB,UACc9hB,EAAA,EAAAC,EAAIS,EAAUC,GAAM,GAAKX,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC7C,GADWI,GAAOH,EAAAD,EAElB,IADE8hB,EAAO1hB,EAAU0hB,EAAK/P,UAAY+P,EAAK/P,SAAS3R,GAAWkD,EAAKof,MAC5DZ,GAAQA,EAAKtb,OAAQ,CAAA,MAAA2N,MAAQA,EAACxT,GAAKmhB,EAAOtb,OAAM2N,QACtD,IAAO2N,EAAM,MAEf,MAASA,IAAQA,EAAKG,iCAGxBE,GAAAtb,UAAEuc,eAAc,SAACziB,GAEf,QAAW0iB,GAAoB9a,GAE7B,MADA+a,GAAiB/a,EAAMpJ,MAAM,GACpB,GAEX,IALA,GAAM2iB,GAAMwB,IAKDxB,EAAOxe,KAAKmf,WAAW9hB,KAChCA,EAASA,EAAKhC,QAAQ,YAAY0kB,IAAwB,GAG5D,KADMC,OAAmBxB,GAAK/P,SACrB+P,GAAM,CACb,GAAMA,EAAKxO,MAAO,OAAO,CACzBwO,GAASA,EAAKlQ,OAEhB,OAAS,GAGXuQ,GAAAtb,UAAE0M,aAAY,SAACW,GACb,GAAQ0O,GAAetf,KAAKqf,eAAezO,EAAMxV,WACjD,OAASkkB,IAAgBA,EAAatP,+CTzXxCvX,IAKIwnB,IAEA7e,GAPE8e,IAAiCC,eAAe,EAAMxL,QAAQ,GAU9DyL,GAAM,8NAAAja,IACVka,QAAW7iB,IAAA,WAAI,MAAOyiB,IAAyBI,QAAQjkB,OACzD+J,GAAEma,MAAS9iB,IAAA,WAAI,MAAOyiB,IAAyBK,MAAMlkB,OACrD+J,GAAE7G,OAAU9B,IAAA,WAEV,MADAjD,QAASgmB,eAAevgB,KAAM,UAAW5D,MAAO4D,KAAKqgB,QAAQ/gB,SACpDU,KAAKV,QAEhB6G,GAAEiI,KAAQ5Q,IAAA,WAER,MADAjD,QAASgmB,eAAevgB,KAAM,QAAS5D,MAAO,GAAImS,GAAUvO,KAAKV,OAAO4O,MAAOlO,KAAKsgB,SAC3EtgB,KAAKoO,MAEhBjI,GAAEqa,MAAShjB,IAAA,WAAI,MAAOwC,MAAKoO,MAC3BjI,GAAEsa,KAAQjjB,IAAA,WAGR,MAFAjD,QAASgmB,eACPvgB,KAAQ,QAAS5D,MAAOZ,EAAYwE,KAAKsgB,MAAMzkB,MAAMmE,KAAKsgB,MAAMI,YAAY,KAAO,MAC5E1gB,KAAKygB,MAEhBta,GAAE6V,MAASxe,IAAA,WAAI,MAAOwC,OACtBmG,GAAEwa,QAAWnjB,IAAA,WAAI,OAAO,GACxB2I,GAAEya,OAAUpjB,IAAA,WAAI,MAAOhE,GAAEyV,QAAQjP,KAAKgc,QACtC7V,GAAE0a,MAASrjB,IAAA,WAAI,MAAOhE,GAAE2E,KAAK6B,KAAKgc,QAClC7V,GAAE2a,QAAWtjB,IAAA,WAAI,MAAOhE,GAAE+I,OAAOvC,KAAKgc,QACtC7V,GAAE4a,MAASvjB,IAAA,WAAI,MAAOwC,MAAKV,OAAO0hB,MAClC7a,GAAEmV,MAAS9d,IAAA,WAAI,MAAOwC,MAAKV,OAAOyc,MAClC5V,GAAE8a,KAAQzjB,IAAA,WAAI,MAAOwC,MAAKV,OAAOoE,KACjCyC,GAAE+a,OAAU1jB,IAAA,WAAI,MAAOwC,MAAKoO,KAAK4B,OACjC7J,GAAEgb,YAAe3jB,IAAA,WAAI,OAAO,GAE5B4iB,GAAA7c,UAAE6d,WAAU,SAACC,EAAYzI,aACvB,IAAM5Y,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BACxC,IAAQqoB,GAActhB,KAAKV,OAAOoZ,UAAU2I,EAAYzI,GAChD2I,EAAgC,WACtCD,IACA9nB,EAAIkgB,KAAK1Z,EAAKwhB,aAAcD,GAG9B,OADAvhB,MAAOwhB,aAAatkB,KAAKqkB,GAChBA,GAGXnB,GAAA7c,UAAEke,SAAQ,SAACzO,EAAOpR,aAChB,IAAM5B,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BACjC2I,KACLA,EAAgBoR,EAChBA,EAAU3T,OAEZ,IAAQqiB,GAAY1hB,KAAKV,OAAOqiB,QAAQ3O,EAAOrR,EAAgB3B,KAAM4B,IAC7DggB,EAAkBF,EAAUhO,QAC5BA,EAAU,WAEhB,MADAla,GAAIkgB,KAAK1Z,EAAKwhB,aAAc9N,GACnBkO,EAAgBhnB,KAAK8mB,GAIhC,OAFA1hB,MAAOwhB,aAAatkB,KAAKwW,GACzBgO,EAAYhO,QAAUA,EACbgO,GAGXtB,GAAA7c,UAAEse,MAAK,SAACzK,EAAQxX,aACd,IAAMI,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BACxC,IAAQkH,GAAUE,EAChBL,KAAOV,OAAO4P,KAAKkI,EAAQxX,GAAW,WAAOpG,EAAEkgB,KAAK1Z,EAAKwhB,aAAcrhB,EAAQC,SAGjF,OADAJ,MAAOwhB,aAAatkB,KAAKiD,EAAQC,QACxBD,GAGXigB,GAAA7c,UAAEnJ,OAAM,SAAC0nB,EAAWC,EAAYzV,aAC9B,IAAMtM,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BACxC,IAAM+oB,GAEE5N,EAAUpU,KAAKV,OAAOtG,MAAM,WAElC,MADAmQ,GAAOhI,cACE2gB,EAAUlnB,KAAKoF,IACrB+hB,EAAW1nB,KAAK2F,MAAOsM,EAO5B,OALA0V,GAA8B,WAC5B5N,IACA5a,EAAIkgB,KAAK1Z,EAAKwhB,aAAcQ,IAE9BhiB,KAAOwhB,aAAatkB,KAAK8kB,GAChBA,GAGX5B,GAAA7c,UAAE0e,MAAK,SAACC,EAAY5V,aAClB,IAAMtM,KAAKkB,YAAa,KAAM,IAAIjI,OAAM,2BACxC,IAAQkH,GAAUH,KAAKV,OAAO6iB,KAAK,WAEjC,MADAhZ,GAAOhI,cACE+gB,EAAWtnB,KAAKoF,IACtBsM,EAGL,OAFAjM,GAAiBF,EAAS,WAAO3G,EAAEkgB,KAAK1Z,EAAKwhB,aAAcrhB,EAAQC,UACnEJ,KAAOwhB,aAAatkB,KAAKiD,EAAQC,QACxBD,GAGXigB,GAAA7c,UAAE6e,wBAAuB,WACvB,IAAO5oB,EAAE6oB,UAAUjhB,IACjB,KAAQ,IAAInI,OAAM,mEAEpBmI,KAA0B,GAG5Bgf,GAAA7c,UAAE+e,KAAI,SAAClmB,GAAQ,MAAO4D,MAAKoO,KAAKzQ,IAAIvB,IACpCgkB,GAAA7c,UAAEgf,QAAO,SAAChgB,GAAS,MAAOvC,MAAKoO,KAAK5B,OAAOjK,IAC3C6d,GAAA7c,UAAEif,UAAS,SAACjgB,GAAS,MAAOvC,MAAKoO,KAAK0C,SAASvO,IAC/C6d,GAAA7c,UAAEkf,QAAO,SAACnW,EAASkJ,GAAW,MAAOxV,MAAKoO,KAAK2C,OAAOzE,EAASkJ,IAE/D4K,GAAA7c,UAAEpC,YAAW,WAELnB,KAAK2U,OACT3U,KAAO2U,OAAOC,IAAI8N,SACP1iB,KAAKqgB,SACbrgB,KAAKqgB,QAAQlkB,eAAe,SAAW6D,KAAKqgB,QAAQrE,MAAQhc,KAAKqgB,SAASrgB,KAAKygB,MAElFzgB,KAAOsb,OAKXnV,GAAEwc,eAAkBnlB,IAAA,WAGlB,MAFAjD,QAASgmB,eAAevgB,KAAM,kBAC5B5D,SAAawmB,UAAU,EAAOnO,YAAY,EAAOD,cAAc,IACxDxU,KAAK2iB,gBAGhBxc,GAAEqb,aAAgBhkB,IAAA,WAGhB,MAFAjD,QAASgmB,eAAevgB,KAAM,gBAC5B5D,SAAawmB,UAAU,EAAOnO,YAAY,EAAOD,cAAc,IACxDxU,KAAKwhB,cAGhBrb,GAAEjF,YAAe1D,IAAA,WACf,OAAS,2CAKX,IAAM+D,IAAa,SACLhD,GACZyB,KAAOzB,MAAQA,GAKXmD,GAAc,SACNtF,GACZ4D,KAAO5D,MAAQA,GAKIymB,GAAQ,SACfC,GACZ9iB,KAAO+iB,OAASC,MAAO5C,IACvBpgB,KAAOijB,OAASH,EAChBvoB,OAAS0H,OAAOjC,MAGlB6iB,IAAAtf,UAAEsE,KAAI,SAACqb,EAASC,aACR3pB,GAAE4pB,cAAcF,KACpB1pB,EAAIgJ,KAAK0gB,EAAS,SAACF,EAAO3lB,GAClB2lB,EAAMK,cACZL,EAAQM,aAAeN,EAAMM,iBAC7BN,EAAQM,aAAapmB,KAAKG,MAE5B6lB,EAAY1pB,EAAE+I,OAAO2gB,GACrB1pB,EAAIgJ,KAAK0gB,EAAS,SAAAF,IACTA,EAAMK,aAAeL,EAAMM,eAChCN,EAAQK,YAAcL,EAAMM,mBACnBN,GAAMM,iBAIrBJ,EAAY1pB,EAAE+pB,KAAKL,GACnB1pB,EAAIgJ,KAAK0gB,EAAS,SAAAF,GAAM,MAAGhjB,GAAKwjB,YAAYR,EAAOG,KACnDnjB,KAAOyjB,cAAczjB,KAAK+iB,QAG5BF,GAAAtf,UAAEmQ,QAAO,aAGTmP,GAAAtf,UAAEmgB,UAAS,SAACrmB,EAAMsmB,EAAU7V,GAG1B,IAAoB,GADd0Q,UADE/hB,EAAWW,EAAUC,GAAM,GAEfX,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,GACZ8R,EAAQ1R,EACZ0hB,EAAO/P,WAAa+P,EAAK/P,SAAS3R,KAAa6mB,GAAYnF,EAAK/P,SAASmV,GAAK5jB,EAAK+iB,KACrF,KAAOvU,EAAO,CACZ,IAAOmV,EAAU,MACjBnF,GAAO/P,SAAW+P,EAAK/P,aACvBD,EAAUgQ,EAAK/P,SAAS3R,IAAYkmB,MAAO5C,IAG7C,GADA5B,EAAShQ,EACHV,GAAaA,EAAU0Q,GAAO,MAEtC,MAASA,IAGXqE,GAAAtf,UAAEsgB,WAAU,SAAC/V,EAAW0Q,aAEtB,IADOA,IAAMA,EAAOxe,KAAK+iB,OACnBjV,EAAU0Q,GAAO,MAAOA,EAC9B,KAAqB,GAAA9hB,GAAA,EAAAC,EAAInD,EAAE2E,KAAKqgB,EAAK/P,UAAS/R,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC9C,GADWwZ,GAAQvZ,EAAAD,GACXR,EAAS8D,EAAK6jB,WAAW/V,EAAW0Q,EAAK/P,SAASyH,GAC1D,IAAMha,EAAQ,MAAOA,KAIzB2mB,GAAAtf,UAAEkgB,cAAa,SAACjF,aACdhlB,GAAIgJ,KAAKgc,EAAK/P,SAAU,SAAAD,GACtBrF,EAAOsa,cAAcjV,IACfA,EAAMsV,OAAStV,EAAMuV,oBAAkBvF,EAAKuF,kBAAmB,MAIzElB,GAAAtf,UAAEygB,cAAa,SAAChB,GAGd,IAFA,GAAMiB,GACA3pB,EAAQ0oB,EAAMzf,UACXjJ,GAASA,EAAM4pB,cAAgB3pB,QAAQ,CAC9C,IAAiB,GAAAmC,GAAA,EAAAC,EAAIpC,OAAO4pB,oBAAoB7pB,GAAMoC,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACtD,GADWkN,GAAIjN,EAAAD,GACPmF,EAAatH,OAAO6pB,yBAAyB9pB,EAAOsP,EAC5D,IAAyB,MAAnBA,EAAK5M,OAAO,GAAY,CAC5B,GAAe,cAAT4M,EAAsB,QAC5B,IAAMpQ,EAAE2F,QAAQ0C,EAAYtH,OAAO6pB,yBAAyBhE,GAAM7c,UAAWqG,IAC3E,QAEF,MAAQ,IAAI3Q,OAAM,kDAAkD+pB,EAAU,KAAA,IAAIpZ,GAEpF,GAAM/H,EAAWlE,IACf,KAAQ,IAAI1E,OAAM,+CAA+C+pB,EAAU,KAAA,IAAIpZ,IAE3E/H,EAAWrE,KAASymB,GAAsBA,EAAmBra,MAC9Dqa,IAAuBA,OAA0Bra,IAClDA,KAAEA,EAAMya,SAAa/pB,EAAM4pB,YAAgB,KAAA,IAAIta,EAAQpM,IAAKqE,EAAWrE,MAI7ElD,EAAUC,OAAOC,eAAeF,GAElC,IAAiB,GAAA8S,GAAA,EAAAC,EAAI9S,OAAO4pB,oBAAoB/D,GAAM7c,WAAU6J,EAAAC,EAAAxQ,OAAAuQ,GAAA,EAAE,CAChE,GADWxD,GAAIyD,EAAAD,EACA,iBAATxD,GAA0BoZ,EAAMzf,UAAUpH,eAAeyN,IAC/DrP,OAASgmB,eACPyC,EAAQzf,UAAWqG,EAAMrP,OAAO6pB,yBAAyBhE,GAAM7c,UAAWqG,IAE9E,MAASqa,IAGXpB,GAAAtf,UAAEigB,YAAW,SAACR,EAAOG,cACXc,EAAqBjkB,KAAKgkB,cAAchB,GACxCsB,KACFC,EAASvB,EAAMK,WACrB,KAAOkB,EAAQ,KAAM,IAAItrB,OAAM,SAAS+pB,EAAU,KAAA,uCAC3CxpB,GAAE4I,QAAQmiB,KAASA,GAAUA,IACpC/qB,EAAIgJ,KAAK+hB,EAAQ,SAAAC,GAEf,GADMhrB,EAAEuD,SAASynB,KAAQA,GAASnnB,KAAMmnB,KACjCrB,GAAiC,MAAfqB,EAAMnnB,KAC7B,KAAQ,IAAIpE,OAAM,sDAGpB,KAAqB,GADb6E,GAAUF,EAAgB4mB,EAAMnnB,MACnBX,EAAA,EAAAC,EAAImB,EAAQ+G,UAASnI,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC1C,GADW+nB,GAAQ9nB,EAAAD,EACjB,IAAiB,MAAb+nB,GAA2C,MAAvBA,EAASznB,OAAO,GACxC,KAAQ,IAAI/D,OAAM,0BAA0BwrB,EAE9C,IAA6B,MAAvBA,EAASznB,OAAO,KAClBxD,EAAI6K,IAAI+b,GAAM7c,UAAWkhB,IAAavE,GAA8BuE,IAEtE,KAAQ,IAAIxrB,OAAM,6DAA6DwrB,EAEjFH,GAAepnB,KAAKunB,GAEtB,GAAQpoB,GAAamoB,EAAMnnB,KAAK4H,MAAM,eAAc,EACpD,IAA+B,MAAzB5I,EAAWW,OAAO,IACtB,GAAMwnB,EAAME,YACV,KAAQ,IAAIzrB,OACR,SAAS+pB,EAAU,KAAA,wBAAwB3mB,EAAU,gCAGpD7C,GAAE6K,IAAImgB,EAAO,iBAAgBA,EAAME,eAE5C,IAAQC,GAAc3kB,EAAK0jB,UAAUc,EAAMnnB,KAAKhC,QAAQ,YAAY,MAAM,EAC1E,IAAMspB,EAAY7mB,UACZ6mB,EAActoB,aAAeA,GACU,MAAvCsoB,EAActoB,WAAWW,OAAO,IAAuC,MAAzBX,EAAWW,OAAO,IACpE,KAAQ,IAAI/D,OACR,+BAA+BurB,EAAU,KAAA,KAAKG,EAAY3B,MAAU,KAAA,KAAKA,EAAU,KAEzFxpB,GAAI4W,OACFuU,GAAgB3B,MAAAA,EAAOllB,QAAAA,EAASmmB,mBAAAA,EAAoB5nB,WAAAA,GACpD7C,EAAIorB,KAAKJ,EAAO,cAAe,QAAS,aAAc,aAE1DhrB,EAAIgJ,KAAK8hB,EAAc,SAAAG,GACdzB,EAAMzf,UAAUkhB,IACrBlqB,OAASgmB,eAAeyC,EAAMzf,UAAWkhB,GAAWjnB,IAAK,WACvD,MAASyiB,IACPA,GAA2BwE,IAAaxE,GAAyBwE,GAAUroB,MAC3EiD,aAYVwjB,GAAAtf,UAAEshB,aAAY,SAACxnB,EAAMynB,cACXN,EAAQxkB,KAAK0jB,UAAUrmB,KAAU2lB,MAAO5C,GAChD,IAAMoE,EAAM1mB,QAAS,CACnB,GAAQmH,GAAQuf,EAAM1mB,QAAQmH,MAAM5H,EACpC,KAAO5E,GAAMgsB,KAAYxf,GACvB6f,EAAaL,IAAaroB,MAAO6I,EAAMwf,IAI3CxE,GAA6B6E,CAC7B,IAAQ/oB,GAAS,GAAIyoB,GAAMxB,KAW3B,OAVA/C,IAA6B,KAEvBuE,EAAMO,aAAYD,EAAW9I,OAAS5f,MAAO7B,OAAOwJ,OAAO,QAC3DygB,EAAMQ,SAAQF,EAAWnE,SAAWvkB,OAAO,IAC3CooB,EAAMP,oBACVzqB,EAAIgJ,KAAKgiB,EAAMP,mBAAoB,SAAAjjB,GACjC8jB,EAAa9jB,EAAK4I,MAAQ5J,EAAKilB,iCAAiClpB,EAAQiF,KAInEjF,GAGX8mB,GAAAtf,UAAE0hB,iCAAgC,SAAClpB,EAAQiF,MAGnC5E,UAFE6E,EAAgB0Q,EAAMF,IAAIzQ,EAAKqjB,UAGjCa,GAAe,CAkDrB,OAhDAnpB,GAAS4mB,eAAezlB,KAAK,SAAAxD,GAuB3B,QAAW8S,GAAOjC,GACVA,YAAoB7I,MACxB6I,EAAaA,EAASnO,MAChBgY,GACJA,IACA5a,EAAIkgB,KAAK3d,EAAOylB,aAAcpN,IAE9B+Q,GAAe,GAGbnmB,EAAa5C,EAAOmO,KAE1BtI,EAASsI,GACTtJ,EAAgBiQ,YAAc,EAC9BgU,GAAiB,EACjBnpB,EAASiF,EAAK4I,MAAQW,EACtB2a,GAAiB,GAtCnB,GAAMC,IAAa,EACXC,EAAUrkB,EAAa1G,KAAK0B,EAAQiF,EAAMC,EAC5CjB,GAAKijB,SAAQmC,EAAQhqB,SAAW,WAAO,MAAO4F,GAAKqjB,UACzD,IAAQjQ,GAAU1a,EAAIU,OAAOgrB,EAAS,SAAA7a,GACpC,GAAMxO,EAAOmF,YAAa,KAAM,IAAIjI,OAAM,2BAC1C,IAAMO,EAAE2I,SAASoI,IAAaA,EAAS/J,KAAM,CAC3C,GAAQ6kB,GAAoBpkB,EAAcQ,aAC1C8I,GAAW/J,KAAK,SAAA8kB,GACRD,IAAsBpkB,EAAcQ,eAAe+K,EAAO8Y,IAC7D,SAAA/mB,GACH,GAAM8mB,IAAsBpkB,EAAcQ,eAClC+K,EAAO,GAAIjL,IAAahD,IAAS,KAAMA,SAIjD,IAAMiO,EAAOjC,KACX3R,EAAUE,SACJyR,YAAoBhJ,KAAc,KAAMgJ,GAAShM,QAGvD4W,WAAW,GAqBXgQ,GACJ/Q,IAEArY,EAASylB,aAAatkB,KAAKkX,MAI7BK,YAAc,EAAMD,cAAc,EAClChX,IAAO,WACL,GAAMpB,YAAiBmF,IAAc,KAAMnF,GAAMmC,KACjD,OAASnC,IAEXuB,IAAO,SAAS4M,GACd,IAAO2a,EAAc,KAAM,IAAIjsB,OAAM,uCAAuC+H,EAAS,KACrF5E,GAAUmO,KAKhBsY,GAAAtf,UAAEgiB,cAAa,SAACxpB,GACd,GAAMvC,EAAE6K,IAAItI,EAAQ,gBAElB,IAAe,GAAAW,GAAA,EAAAC,EAAInD,EAAE+C,MAAMR,EAAOylB,cAAa9kB,EAAAC,EAAAE,OAAAH,GAAA,EAAxC,CAAAjE,GAAMsJ,GAAEpF,EAAAD,EAAkCqF,KAE7CvI,EAAEsI,WAAW/F,EAAOypB,YAAYzpB,EAAOypB,YAC7CjrB,OAASgmB,eACPxkB,EAAU,eAAgBK,OAAO,EAAMqY,YAAY,EAAOD,cAAc,KAG5EqO,GAAAtf,UAAEkiB,cAAa,SAACpoB,GACd,GAAQmnB,GAAQxkB,KAAK0jB,UAAUrmB,EAC/B,OAASmnB,IAASA,EAAME,aAG1B7B,GAAAtf,UAAEmiB,QAAO,SAACroB,GACR,GAAQmnB,GAAQxkB,KAAK0jB,UAAUrmB,GAAM,EAAO,SAAAmnB,GAAM,MAAGA,GAAMV,OAC3D,KAAOU,EAAO,OAAO,CACrB,IAAMA,EAAMV,MAAO,OAAO,CAC1B,IAAMU,EAAMT,iBAAkB,KAAM,IAAI9qB,OAAM,wCAAwCoE,EACtF,QAAS,GAGXwlB,GAAAtf,UAAEoiB,wBAAuB,SAACtoB,EAAMqhB,GAC9B,GAAQ8F,GAAQxkB,KAAK0jB,UAAUrmB,EAC/B7D,GAAIgJ,KAAKgiB,GAASA,EAAM/V,SAAU,SAAAD,GAC1BA,EAAMkW,aAAahG,EAASlQ,EAAMnS,WAAYmS,EAAMkW,gBAI9D7B,GAAAtf,UAAEqiB,eAAc,SAAC7pB,EAAQsB,EAAMwoB,cACrBC,GAAOD,CACTC,KAAKD,KACX,KACE,IAAgB,GAAAnpB,GAAA,EAAAC,EAAIpC,OAAO4pB,oBAAoBpoB,GAAOW,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACtD,GADWvB,GAAGwB,EAAAD,EACZ,KAAIwjB,GAA8B/kB,KAAQilB,GAAM7c,UAAUpH,eAAehB,GAAzE,CAEF,GAAQqpB,GAAQxkB,EAAK6jB,WAAW,SAAAW,GAAM,MAAGA,GAAMxB,QAAUjnB,EAAOmoB,aAEhE,MAAMM,GAASA,EAAM1mB,SAAWtE,EAAEusB,SAASvB,EAAM1mB,QAAQ+G,UAAW1J,IAApE,CACA,IAAQ2O,MAAM1H,QAAQrG,KAAY,MAAMmJ,KAAK/J,IAAgB,WAARA,EAAoB,CACvE,GAAQ0G,GAAatH,OAAO6pB,yBAAyBroB,EAAQZ,EAC7D,IAAM,SAAW0G,KAAeA,EAAWrE,IACzC,KAAQ,IAAIvE,OACR,YAAYoE,EAAI,4DAA4DlC,EAElF,IAAMY,EAAOuD,QAAUuC,EAAW4S,WAChC,IAEE,KADA1Y,GAASZ,GAAOY,EAAOZ,GACf,GAAIlC,OACR,uBAAuBoE,EAAI,6CAA6ClC,GAC1E,MAAOuD,GACT,GAAsB,uBAAhBA,EAAEsnB,UAAoC,KAAMtnB,IAIxD,GAAQtC,GAAQL,EAAOZ,IACjB3B,EAAE2I,SAAS/F,IAAWA,EAAM+jB,gBAAiB5lB,OAAOyB,aAAaI,IAC/DA,YAAiB6pB,YACvB7pB,EAAQ+jB,eAAgB,EACxB0F,EAAiB3oB,KAAKd,GACtB+M,EAAOyc,eAAexpB,EAAOI,EAASa,EAAMnC,EAAUC,IAAO0qB,OAGhE,QACD,GAAMC,EACJ,IAAiB,GAAA1Y,GAAA,EAAAC,EAAIwY,EAAczY,EAAAC,EAAAxQ,OAAAuQ,GAAA,EAA5B,CAAA3U,GAAM8L,GAAI8I,EAAAD,SAA2B7I,GAAK4b,gBCvdvD,IAAM+F,IAAY,SACJ7oB,EAAM8oB,GAClBnmB,KAAO8F,MAAQzI,EACf2C,KAAOomB,cAAgBD,4CAGzBhgB,IAAEggB,aAAgB3oB,IAAA,WAAI,MAAOwC,MAAKomB,eAClCjgB,GAAEkgB,QAAW7oB,IAAA,WAAI,MAAOwC,MAAKsmB,UAC7BngB,GAAE5D,OAAU/E,IAAA,WAAI,MAAOwC,MAAKumB,SAE5BL,GAAA3iB,UAAEijB,YAAW,SAACpqB,GACZ,GAAM4D,KAAKsmB,SAAU,KAAM,IAAIrtB,OAAM,qCAAuC+G,KAAKsmB,SACjFtmB,MAAOsmB,SAAWlqB,GAGpB8pB,GAAA3iB,UAAEkjB,MAAK,WACLzmB,KAAOwmB,YAAY,UAGrBN,GAAA3iB,UAAEnD,OAAM,WACNJ,KAAOwmB,YAAY,WAGrBN,GAAA3iB,UAAE5F,IAAG,SAACvB,GACJ,GAAgBiD,SAAVjD,EAAqB,KAAM,IAAInD,OAAM,8BAC3C+G,MAAOwmB,YAAY,OACnBxmB,KAAOumB,SAAWG,GAAItqB,IAGxB8pB,GAAA3iB,UAAEiJ,OAAM,SAACjK,GACP,GAAiBlD,SAAXkD,EAAsB,KAAM,IAAItJ,OAAM,8BAC5C,OAAMO,GAAEyV,QAAQ1M,GAAgBvC,KAAKI,UACrCJ,KAAOwmB,YAAY,eACnBxmB,KAAOumB,QAAUhkB,6CAKnB,IAAqBokB,IAAK,SACZxX,EAAO1D,EAAS+M,EAAQsG,GACpC9e,KAAO4mB,OAASzX,EAChBnP,KAAOqb,SAAW5P,EAClBzL,KAAOyY,QAAUD,EACjBxY,KAAO0d,YAAcoB,EACrB9e,KAAO6mB,8BAA+B,EACtC7mB,KAAOkG,aAAe,EACtBlG,KAAO8mB,gBACP9mB,KAAO+mB,qBAAuB,KAC9B/mB,KAAOgnB,cAAe,EACtBhnB,KAAOinB,SAAW,GAAIpE,IAAsC,QAA9B1T,EAAM+U,YAAYgD,SAChDlnB,KAAOuc,SAAW,GAAIsC,IACpBpT,EAAW+M,EAAQsG,EAAY9e,KAAKmnB,mBAAmB9sB,KAAK2F,MAAOA,KAAKwE,OAAOnK,KAAK2F,OACtFA,KAAOwT,KAAO,GAAIxQ,IAAKC,MAAOqY,MAAOjc,UACrC9E,OAASoZ,KAAK3T,4BAMhB+P,IAAEgM,KAAQve,IAAA,WAOR,MANOwC,MAAKwT,KAAKwI,MAAMV,QACrBtb,KAAOwT,KAAKwI,MAAMV,MAAQtb,KAAKonB,cAAc,IAAK,IAClDpnB,KAAOqnB,WAAWrnB,KAAKwT,KAAKwI,MAAMV,OAClCtb,KAAOsnB,sBAAsBtnB,KAAKwT,KAAKwI,MAAMV,OAC7C1iB,EAAUE,UAEHkH,KAAKwT,KAAKwI,MAAMV,OAG3BvL,GAAEZ,MAAS3R,IAAA,WACT,MAASwC,MAAK4mB,QAGhBD,GAAApjB,UAAEsE,KAAI,SAACqb,aACL,IAAMljB,KAAKgnB,aACT,KAAQ,IAAI/tB,OAAM,0DAEpB+G,MAAOgnB,cAAe,EACtBhnB,KAAOinB,SAASpf,KAAKqb,GAAUljB,KAAKwT,KAAKwI,MAAMV,MAC/C,IAAQiM,KACRvnB,MAAOwnB,mBAAmBxnB,KAAK+b,KAAM,IAAKwL,EAC1C,KAAmB,GAAA7qB,GAAA,EAAAC,EAAI4qB,EAAc7qB,EAAAC,EAAAE,OAAAH,GAAA,EAA9B,CAAAjE,GAAMsD,GAAMY,EAAAD,EAAoBsD,GAAKsnB,sBAAsBvrB,KAGpE4qB,GAAApjB,UAAEmQ,QAAO,WACP1T,KAAOuc,SAAS7I,UACV1T,KAAKinB,UAAUjnB,KAAKinB,SAASvT,UACnC1T,KAAOwT,KAAKc,YAGdqS,GAAApjB,UAAEmS,iBAAgB,SAAChQ,EAAK+hB,EAAerkB,aACrCpD,MAAO0nB,aAAahiB,EACpB,IACM0O,GADEmC,EAAYvW,KAAK0d,YAAY3D,gBAAgB,OAAQ3W,EAAQsC,EAarE,OAXM+hB,KACJrT,EAAYpU,KAAKwT,KAAKpZ,OACpB4F,KAAO2Q,UAAUtW,KAAK2F,KAAM0F,EAAIrI,MAAOoqB,GAAgBtS,WAAW,KAEtEoB,EAAYlC,YAAcrU,KAAK2nB,qBAAqBttB,KAAK2F,KAAM0F,EAAK6Q,EAAWnC,GAC/EpU,KAAO0d,YAAY1D,MAAMzD,GAAW/V,KAAK,WACjC+V,EAAUqB,UAAYrB,EAAUqR,gBACpCze,EAAOoT,SAASgD,OAAO7Z,EAAIrI,KAAMkZ,GACjCA,EAAYsR,UAAW,KAEtBnnB,MAAM,SAAAhC,MACF6X,EAAUlC,aAGrBsS,GAAApjB,UAAEokB,qBAAoB,SAACjiB,EAAK6Q,EAAWnC,EAAS7V,GACxCgY,EAAUqR,gBAChBrR,EAAYqR,eAAgB,EACtBxT,GAASA,IACTmC,EAAUsR,WACd7nB,KAAOuc,SAASkD,SAAS/Z,EAAIrI,KAAMkZ,GACnCA,EAAYsR,UAAW,GAEzB7nB,KAAO0d,YAAYvD,IAAI5D,EAAWhY,GAAOmC,MAAM,SAAAhC,QAGjDioB,GAAApjB,UAAEmN,iBAAgB,SAAChL,GAEjB,MADA1F,MAAO0nB,aAAahiB,GACX1F,KAAKuc,SAASuD,eAAepa,EAAIrI,OAG5CspB,GAAApjB,UAAEqS,aAAY,SAAChF,EAAOmM,EAAc3Z,aAClCpD,MAAO0nB,aAAa9W,EACpB,IAAQ2F,GAAYvW,KAAK0d,YAAY3D,gBAAgB,OAAQ3W,EAAQwN,EAQrE,OAPA2F,GAAYlC,YAAcrU,KAAK8nB,iBAAiBztB,KAAK2F,KAAM4Q,EAAO2F,GAClEvW,KAAO0d,YAAY1D,MAAMzD,GAAW/V,KAAK,WACjC+V,EAAUqB,UAAYrB,EAAUqR,gBACpCze,EAAOoT,SAASqD,UAAUhP,EAAO2F,EAAWwG,GAC5CxG,EAAYsR,UAAW,KAEtBnnB,MAAM,SAAAhC,MACF6X,EAAUlC,aAGrBsS,GAAApjB,UAAEukB,iBAAgB,SAAClX,EAAO2F,EAAWhY,GAC7BgY,EAAUqR,gBAChBrR,EAAYqR,eAAgB,EACtBrR,EAAUsR,WACd7nB,KAAOuc,SAASsD,YAAYjP,EAAO2F,GACnCA,EAAYsR,UAAW,GAEzB7nB,KAAO0d,YAAYvD,IAAI5D,EAAWhY,GAAOmC,MAAM,SAAAhC,QAGjDioB,GAAApjB,UAAE0M,aAAY,SAACW,GACb,MAAS5Q,MAAKuc,SAAStM,aAAaW,IAGtC+V,GAAApjB,UAAEmkB,aAAY,SAAC5a,GACb,IAAOA,EAAOuC,UAAUrP,KAAK4mB,QAC3B,KAAQ,IAAI3tB,OAAM,gDAItB0tB,GAAApjB,UAAEiJ,OAAM,SAAC9G,EAAKtC,EAAQb,aACpBA,GAAW/I,EAAEkG,UAAU6C,EAAQ,SAAAnG,GAAM,MAAGN,GAAWM,IACnD,IAAM2rB,GAAYvuB,EAAEyE,KAAKsE,EACzB,KAAOwlB,EAAW,MAAOloB,SAAQC,SAKjC,IAJiB,WAAXsD,GAAkC,aAAXA,GAC3Bf,EAA6CqD,EAAIrI,KAAMkF,GAEzDvC,KAAOgoB,iBAAiBzlB,EAAmB,aAAXa,GACf,aAAXA,EAAuB,MAAOvD,SAAQC,SAC5C,KAAiB,GAAApD,GAAA,EAAAC,EAAInD,EAAE2E,KAAKoE,GAAO7F,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACnC,GADWW,GAAIV,EAAAD,EACTsD,GAAKinB,SAASvB,QAAQroB,UAAckF,GAAOlF,GAGnD,GADA0qB,EAAcvuB,EAAEyE,KAAKsE,IACdwlB,EAAW,MAAOloB,SAAQC,SACjC,IAAQjB,GAAMmB,KAAKqb,SAAWrb,KAAKioB,yBAAyB1lB,EAC5D,OAASvC,MAAK0d,YAAY7D,QAAQ,QAASzW,EAAQsC,EAAK,WACtD,MAAoB,KAAdqiB,EACK/nB,EAAKyY,QAAQ9a,IAAIkB,EAAK0D,EAAO,IAAKvC,EAAKkG,cAEvClG,EAAKyY,QAAQjM,OAAO3N,EAAK0D,EAAQvC,EAAKkG,iBAKrDygB,GAAApjB,UAAEwN,OAAM,SAACrL,EAAKsL,cACN8G,EAAQ,CACd9G,GAAmBrR,EAAoBqR,EAEvC,IAAQkX,GAAqB,WAC3B,GAAMpQ,KAAW,GAAI,MAAOjY,SAAQI,OAAO,GAAIhH,OAAM,YACrD,IAAQktB,GAAezgB,EAAItJ,MACnB+rB,EAAM,GAAIjC,IAAYxgB,EAAIrI,KAAM8oB,EAIxC,OAAStmB,SAAQC,UAAUU,KAAK,WAAG,MAAGwQ,GAAemX,KAAM3nB,KAAK,WAC9D,GAAsB,UAAhB2nB,EAAI9B,QAAqB,MAAO8B,EACtC,IAAQ5lB,GAAS/I,EAAEkG,UAAUyoB,EAAI5lB,OAAQ,SAAAnG,GAAM,MAAGN,GAAWM,KAErDsR,EAAW3K,EAAeojB,EAClC,QAAUgC,EAAI9B,SACZ,IAAO,SACL,KACF,KAAO,MACL,GAAMrmB,EAAKinB,SAASvB,QAAQhgB,EAAIrI,MAC9B,KAAQ,IAAIpE,OAAM,4BAA4ByM,EAAQ,KAExDyD,GAAO6e,kBAAgBnX,KAAEA,EAACnL,EAAIrI,MAAKkF,EAAS,IAAGsO,SAC/C,MACF,KAAO,SACLxO,EAA6CqD,EAAIrI,KAAMkF,GACvD/I,EAAI+I,GAAQpE,OAAOqE,KAAK,SAAAnF,GACtB,GAAM2C,EAAKinB,SAASvB,QAAQroB,GAAO,KAAM,IAAIpE,OAAM,4BAA4BoE,KAEjF8L,EAAO6e,iBAAiBzlB,GACxBO,EAAkB4C,EAAIrI,KAAMkF,EAC5B,MACF,SACE,KAAQ,IAAItJ,OAAM,iCAAmCkvB,EAAI9B,SAAW,SAExE,MAASrmB,GAAKyY,QAAQhL,YACpBtE,EAAOkS,SAAW3V,EAAIrI,KAAMqQ,EAAUnL,EAAQvC,EAAKkG,cACjD1F,KAAK,SAAAtE,GACP,MAAMA,GAAOksB,WACXD,EAAM/B,cAAgBlqB,EAAOiqB,aACpBgC,IAEThf,EAAOge,mBAAmBjrB,EAAOmsB,UACxBH,SAMjB,OAASloB,MAAK4mB,OAAO1X,KAAKxJ,EAAK,WAC7B,MAAS1F,GAAK0d,YAAY7D,QAAQ,QAAS,SAAUnU,EAAKwiB,MAI9DvB,GAAApjB,UAAEykB,iBAAgB,SAACzlB,EAAQuO,aAGzB9Q,MAAOkG,eACPlG,KAAO+mB,qBAAuB/mB,KAAK4mB,OAAOljB,GAC1C,IAAQ6jB,KACR/tB,GAAIgJ,KAAKD,EAAQ,SAACnG,EAAOiB,GACvB,MAAQymB,EAAQ9jB,EAAKinB,SAASvB,QAAQroB,GAC9BirB,EACNxE,GAAOjT,KAAIA,EAACxT,IAAK,EAAMwT,GAAI7Q,EAAKuc,SAASoD,2BAA2BtiB,EACtE,KAAM7D,EAAEyV,QAAQqZ,GAAhB,CACA,GAAQC,IAAmB,MAATlrB,EAAe,EAAIA,EAAKR,QAAU,CACpD,KAAOpE,GAAM+vB,KAAkBF,GAAwB,CACrD,GAAQzZ,GAAU2Z,EAAe3sB,MAAM0sB,GACjCE,EAAWrsB,CACjB,IAAMyS,GAAqB,OAAVzS,GAA4BiD,SAAVjD,EACjC,IAAoB,GAAAM,GAAA,EAAAC,EAAIS,EAAUyR,GAAQnS,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAC1C,GADWI,GAAOH,EAAAD,EAElB,IADE+rB,EAAWA,EAAS3rB,GACHuC,SAAbopB,EAAwB,MAGlC,GAAmBppB,SAAbopB,GAAuC,OAAbA,EAC9Btf,EAAO3E,OAAOgkB,OACP,CACP,GAAQrtB,GAAM3B,EAAEqB,KAAKuC,EAAUorB,GAC/Brf,GAAOuf,YACLF,EAAkBrtB,EAAKstB,EACvBtf,EAAOwf,mBAAmBH,GAAgB,EAAOjB,IAAiB,EAAOzW,EACzEyW,GAGGzW,GAAagT,IAClB3a,EAAO2d,aAAa0B,GAAkBxoB,EAAKkG,iBAIjD,KAAmB,GAAAxJ,GAAA,EAAAC,EAAI4qB,EAAc7qB,EAAAC,EAAAE,OAAAH,GAAA,EAA9B,CAAAjE,GAAMsD,GAAMY,EAAAD,EAAoBsD,GAAKsnB,sBAAsBvrB,KAGpE4qB,GAAApjB,UAAE0kB,yBAAwB,SAAC1lB,GACzB,GAAMqmB,EACNpvB,GAAIgJ,KAAKD,EAAQ,SAACnG,EAAOiB,GACvB,GAAQZ,GAAoB,MAATY,GAAgB,IAAMD,EAAUC,GAAM,EACzD,IAAMurB,EAAgB,CAGpB,IAFA,GAAMC,GAAqB,EACnBC,EAAW3kB,KAAK4kB,IAAIH,EAAe/rB,OAAQJ,EAASI,QACnDgsB,EAAqBC,GACvBF,EAAiBC,KAAwBpsB,EAASosB,IACvDA,GAGF,IADAD,EAAmBA,EAAe/sB,MAAM,EAAGgtB,IACpCD,EAAe/rB,OAAQ,OAAO,MAErC+rB,GAAmBnsB,GAGvB,IAAQusB,GAAuC,IAA1BJ,EAAe/rB,OAAe,IAAM+rB,EAAezrB,KAAK,IAK7E,OAJA3D,GAAIgJ,KAAKhJ,EAAE2E,KAAKoE,GAAS,SAAApH,GACvBoH,EAASpH,EAAIU,MAAMmtB,EAAWnsB,OAAS,IAAM0F,EAAOpH,SAC3CoH,GAAOpH,KAET6tB,GASXrC,GAAApjB,UAAE6jB,cAAa,SAAC/pB,EAAMlC,EAAKmT,GAClBtO,KAAKgnB,cAAyB,MAAT3pB,GAAc2C,KAAK6H,MAC/C,IAAMid,IAEJzE,SAAYjkB,MAAOkS,EAAQkG,cAAc,EAAMC,YAAY,GAC3D6L,OAAUlkB,MAAOiB,GAEJ,OAATA,IAAcynB,EAAWxlB,QAAUlD,MAAO4D,KAAK4mB,QAErD,IAAQ7qB,GAASiE,KAAKinB,SAASpC,aAAaxnB,EAAMynB,EAElD,OADAvqB,QAASma,iBAAiB3Y,EAAQ+oB,GACzB/oB,GAKX4qB,GAAApjB,UAAE8jB,WAAU,SAACtrB,GACX,IAAiB,GAAAW,GAAA,EAAAC,EAAIpC,OAAO4pB,oBAAoBpoB,GAAOW,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACvD,GADWkN,GAAIjN,EAAAD,GACPmF,EAAatH,OAAO6pB,yBAAyBroB,EAAQ6N,EACvD/H,GAAW2S,cAAgB3S,EAAW4S,aAC1C5S,EAAa4S,YAAa,EACX,YAAT7K,IAAoB/H,EAAW2S,cAAe,GACpDja,OAASgmB,eAAexkB,EAAQ6N,EAAM/H,MAO5C8kB,GAAApjB,UAAE+jB,sBAAqB,SAACvrB,aACtB,IAAMA,EAAOI,eAAe,kBAAmB,CAC7C,IAAe,GAAAO,GAAA,EAAAC,EAAIZ,EAAO4mB,eAAcjmB,EAAAC,EAAAE,OAAAH,GAAA,EAAjC,CAAAjE,GAAMsJ,GAAEpF,EAAAD,EAA2BqF,GAAG/B,EAAKwT,YACzCzX,GAAO4mB,iBAIpBgE,GAAApjB,UAAE0lB,eAAc,SAACltB,aACf,IAAQA,GAAUA,EAAOuD,OAAzB,CACAU,KAAOinB,SAAS1B,cAAcxpB,EAC9B,KAAOtD,GAAM0C,KAAOY,GACXA,EAAOI,eAAehB,IAC7BgO,EAAO8f,eAAeltB,EAAOZ,MAIjCwrB,GAAApjB,UAAE4jB,mBAAkB,SAAC/K,aAInB,IAHA5iB,EAAIgJ,KAAKxC,KAAK8mB,aAAc,SAACjhB,EAAaxI,GAClC+e,EAAKvW,aAAeA,SAAoB7F,GAAK8mB,aAAazpB,KAE5D+e,EAAKxW,OAAQ,CACjB,GAAQ2hB,MACAjZ,EAAStO,KAAK2oB,mBAAmBvM,EAAK/e,MAAM,EAAMkqB,EACpDjZ,IACJtO,KAAO0oB,YAAYtM,EAAK/e,KAAM+e,EAAKjhB,IAAKihB,EAAKhgB,MAAOkS,GAAQ,GAAM,EAAOiZ,EAE3E,KAAmB,GAAA7qB,GAAA,EAAAC,EAAI4qB,EAAc7qB,EAAAC,EAAAE,OAAAH,GAAA,EAA9B,CAAAjE,GAAMsD,GAAMY,EAAAD,EAAoBsD,GAAKsnB,sBAAsBvrB,QAElEiE,MAAOwE,OAAO4X,EAAK/e,KAAM,MAAM,IAInCspB,GAAApjB,UAAEolB,mBAAkB,SAACtrB,EAAM6rB,EAAa3B,MAChCxrB,UACEU,EAAWjD,EAAE2vB,UAAU/rB,EAAUC,GAAM,IACzC+rB,EAAe,GAarB,OAZA5vB,GAAIgJ,KAAK/F,EAAU,SAACK,EAASJ,GAC3B,GAAQvB,GAAMK,EAAYsB,GACpB0R,EAAQ1R,EAAUf,EAAOigB,MAAM7gB,GAAO6E,EAAK+b,IAEjD,IADMjf,IAASssB,IAAkC,MAAjBA,EAAuB,GAAK,KAAOtsB,GAC7D0R,GACJ,GAAM0a,GAAelpB,EAAK8mB,aAAasC,GAAe,WAGtD,IADA5a,EAAUxO,EAAK0oB,YAAYU,EAAcjuB,KAASY,EAAQmtB,GAAa,EAAO3B,IACvE/Y,EAAO,MAEhBzS,GAAWyS,IAEJzS,GAGX4qB,GAAApjB,UAAEmlB,YAAW,SAACrrB,EAAMlC,EAAKiB,EAAOkS,EAAQ4a,EAAapY,EAAUyW,aAC7D,IAAM2B,IAA0B,OAAV9sB,GAA4BiD,SAAVjD,GACtC,KAAQ,IAAInD,OAAM,sCAAsCoE,EAAI,KAAKjB,EAEnE,KAAM8sB,IAAelpB,KAAK8mB,aAAazpB,GAAQ,KAA/C,CACMjB,IAAUiW,IAAkBjW,EAAQ4D,KAAK+mB,qBAC/C,IAAMhrB,GAASuS,EAAOnT,EACtB,KAAO3B,EAAE4I,QAAQhG,KAAW5C,EAAE4pB,cAAchnB,GAG1C,MAFA4D,MAAOipB,eAAeltB,OACtBiE,MAAOqpB,qBAAqB/a,EAAQnT,EAAKiB,EAG3C,IAAMktB,IAAgB,CAiCtB,OAhCO9vB,GAAE2I,SAASpG,KAIhBiE,KAAOqpB,qBAAqB/a,EAAQnT,EAAK,MACzCY,EAAWiE,KAAKonB,cAAc/pB,EAAMlC,EAAKmT,GACzCtO,KAAOqpB,qBAAqB/a,EAAQnT,EAAKY,EAAQA,EAAO4kB,SACxD3gB,KAAOqnB,WAAWtrB,GAClBwrB,EAAiBrqB,KAAKnB,GACtButB,GAAkB,GAEdxY,EACJvW,OAASgmB,eAAexkB,EAAQ,eAAgByB,IAAKhE,EAAEJ,UAAS,GAAOob,cAAc,IAC1EzY,EAAOolB,mBACTplB,GAAOolB,YAElB3nB,EAAIgJ,KAAKpG,EAAO,SAACmI,EAAMglB,GACrBpgB,EAAOuf,YACLlsB,EAAWa,EAAMksB,GAAkB/tB,EAAY+tB,GAAkBhlB,EAAMxI,EAAQmtB,EAC/EpY,EAAYyW,KAGV+B,EACJtpB,KAAOwnB,mBAAmBzrB,EAAQsB,EAAMkqB,GAExC/tB,EAAIgJ,KAAKzG,EAAQ,SAACwI,EAAM2R,GACtB,GAAQqT,GAAkBruB,EAAUgb,EAC7B9Z,GAAMD,eAAeotB,IAC1BpgB,EAAO3E,OAAOhI,EAASa,EAAMksB,GAAkB,KAAML,KAIlDntB,IAGX4qB,GAAApjB,UAAEikB,mBAAkB,SAACzrB,EAAQsB,EAAMkqB,aACjCvnB,MAAOinB,SAAStB,wBAAwBtoB,EAAM,SAAChB,EAAYqoB,GACzD,GAAQvpB,GAAMK,EAAYa,EACnBN,GAAOI,eAAehB,IAC3BgO,EAAOuf,YACLlsB,EAAWa,EAAMhB,GAAalB,EAAKupB,EAAa3oB,GAAQ,GAAO,EAAOwrB,MAK9EZ,GAAApjB,UAAEiB,OAAM,SAACnH,EAAMmsB,EAAuBN,GACpCM,EAA0BA,KAC1B,IAAQztB,GAASiE,KAAK2Q,UAAUtT,EACfgC,UAAXtD,IACAmtB,GAAelpB,KAAKypB,sBAAsBpsB,EAAMmsB,IAC9ChwB,EAAEyV,QAAQua,IAA0BxpB,KAAK0pB,gBAAgBrsB,EAAMtB,KACnEvC,EAAI2I,SAASpG,IAGfiE,KAAO2pB,kBAAkB5tB,EAAQytB,KAIrC7C,GAAApjB,UAAEkmB,sBAAqB,SAACpsB,EAAMmsB,aAC5B,KAAO/wB,GAAMmxB,KAAkB5pB,MAAK8mB,aAClC,GAAO9mB,EAAK8mB,aAAa3qB,eAAeytB,GAAxC,CACA,GAAMvsB,IAASusB,GAAqC,MAAnBA,GAC7BpwB,EAAIiJ,WAAWpF,EAAMusB,EAAiB,KAAM,OAAO,CACvD,IAAe,MAATvsB,GAAgB7D,EAAEiJ,WAAWmnB,EAAgBvsB,EAAO,KAExD,IAAOpB,GADCQ,GAAWW,EAAUwsB,GAAgB,GAClCltB,EAAID,EAASI,OAAQH,EAAI,EAAGA,IAAK,CAC1C,GAAQmS,GAAUpS,EAASZ,MAAM,EAAGa,GAAGS,KAAK,KACpC+F,EAASxG,IAAMD,EAASI,MAChC,IAAM2sB,EAAsB3a,IAAY2a,EAAsB3a,KAAa3L,EAAQ,KAEnF,IADAsmB,EAAwB3a,GAAW3L,EAC7B2L,IAAYxR,EAAM,SAMhCspB,GAAApjB,UAAEmmB,gBAAe,SAACG,EAAYC,GAc5B,OALMC,UANAC,GAAU,EACVjuB,EAAS+tB,EAMPG,EAAmBJ,EAAWxuB,QAAQ,YAAY,SAAA4J,GAExD,MADA8kB,GAAcvuB,EAAYyJ,EAAMpJ,MAAM,IAC7B,KAESwD,SAAXtD,GAAwBA,IAAWiE,KAAK+b,MAAM,CACrD,GAAQzN,GACNvS,EAASskB,SAAWtkB,IAAW+tB,GAAgB9pB,EAAK2Q,UAAUsZ,EAChE,KAAOjqB,EAAKinB,SAASxB,cAAc1pB,EAAOukB,OAASuJ,GAAa,CAC9D,GAAQK,GAAeF,EAAU,MAAQF,EAClC9pB,GAAKmqB,mBAAmBpuB,EAAQmuB,KACrCF,GAAY,EACZ7gB,EAAOihB,wBAAwB9b,EAAQvS,EAAO0kB,MAAQ1kB,IAAW+tB,GAAgBC,IAGrFhuB,EAAWuS,EAEb,MAAS0b,IAGXrD,GAAApjB,UAAE4mB,mBAAkB,SAACpuB,EAAQmuB,aAC3B,SAAMA,IAAgB1wB,EAAEusB,SAASmE,EAAcnuB,QACzCvC,EAAE8W,KAAKvU,EAAQ,SAAAK,GAAM,OAAIA,EAAMkD,UAC5B9F,EAAE8W,KAAKvU,EAAQ,SAAAK,GAAM,MAAG4D,GAAKmqB,mBAAmB/tB,EAAO8tB,OAGlEvD,GAAApjB,UAAEomB,kBAAiB,SAAC5tB,EAAQytB,aAC1B,IAAMA,EAAsBztB,EAAOukB,OAAQ,OAAO,CAC5CvkB,GAAOolB,mBAAoBplB,GAAOolB,WACxC,IAAMkJ,IAAyB,CAiB/B,OAhBA7wB,GAAIgJ,KAAKzG,EAAQ,SAACK,EAAOjB,GACvB,GACMmvB,GADAC,GAAe,CAErB,IAAMf,EAAsBhtB,EAAST,EAAOukB,MAAOplB,EAAUC,KAC3DovB,GAAiB,EACjBD,GAAgB,MACT,IAAIluB,EAAMkD,OAAQ,CACzB,GAAQolB,GAAc1kB,EAAKinB,SAASxB,cAAcrpB,EAAMkkB,QAClDoE,GAAelrB,EAAE6K,IAAImlB,EAAuBptB,EAAMkkB,UACtDgK,EAAgBtqB,EAAK2pB,kBAAkBvtB,EAAOotB,GAC9Ce,GAAkB7F,IAAgB4F,GAGhCC,GAAcvqB,EAAKoqB,wBAAwBruB,EAAQZ,GACzDkvB,EAA2BA,GAA0BC,IAE9CD,GAGX1D,GAAApjB,UAAEoN,UAAS,SAACtT,GAGV,IAAoB,GADdtB,UADEU,EAAWW,EAAUC,GAETX,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADEX,EAASe,EAAUf,EAAOe,GAAWkD,EAAK+b,KAC3B1c,SAAXtD,EAAsB,OAE9B,MAASA,IAGX4qB,GAAApjB,UAAEinB,+BAA8B,SAACzuB,EAAQZ,GACvC,GAAM0G,GAAatH,OAAO6pB,yBAAyBroB,EAAQZ,EAC3D,IAAM0G,EAAY,CAChB,IAAOA,EAAW4S,WAChB,KAAQ,IAAIxb,OACV,wEACK8C,EAAY,MAAA,KAAKZ,EAE1B,KAAO0G,EAAWrE,MAAQqE,EAAWlE,IACnC,KAAQ,IAAI1E,OAAM,uBAAuB8C,EAAY,MAAA,KAAKZ,OAErD,IAAIA,IAAOY,GAClB,KAAQ,IAAI9C,OACR,2DAA2D8C,EAAY,MAAA,KAAKZ,EAElF,OAAS0G,IAGX8kB,GAAApjB,UAAE8lB,qBAAoB,SAACttB,EAAQZ,EAAKiB,EAAO4oB,GACnCjpB,EAAOI,eAAe,WAAUJ,EAASA,EAAOigB,MACtD,IAAMna,GAAa7B,KAAKwqB,+BAA+BzuB,EAAQZ,EAC/D,IAAM0G,EAAY,CAShB,GARMmjB,GAIJzqB,OAASgmB,eAAexkB,EAAQZ,GAC9BqC,IAAOqE,EAAWrE,IAAKG,IAAKkE,EAAWlE,IAAK6W,cAAc,EAAMC,YAAY,IAG1E1Y,EAAOZ,KAASiB,EAAO,MAC7B4D,MAAO6mB,8BAA+B,EACtC9qB,EAASZ,GAAOiB,EAChB4D,KAAO6mB,8BAA+B,MAEtC7jB,GAAMrF,IAAI5B,EAAQZ,EAAKiB,GACvByF,EAAetH,OAAO6pB,yBAAyBroB,EAAQZ,GACvDZ,OAASgmB,eAAexkB,EAAQZ,GAC9BqC,IAAOqE,EAAWrE,IAAKG,IAAKqC,KAAKyqB,2BAA2BpwB,KAAK2F,KAAM6B,EAAY1G,GACnFqZ,cAAgB,EAAMC,YAAauQ,GAGvCpsB,GAAUE,UAGZ6tB,GAAApjB,UAAEknB,2BAA0B,SAAC5oB,EAAY1G,EAAKoP,GAC5C,IAAOvK,KAAK6mB,6BAA8B,CACxC,GAAQnoB,GAAI,GAAIzF,OAAM,6CAA6CkC,EAEnE,MADAuD,GAAIsnB,UAAY,qBACRtnB,EAEVmD,EAAalE,IAAI/C,KAAKoF,KAAMuK,IAG9Boc,GAAApjB,UAAE6mB,wBAAuB,SAACruB,EAAQZ,GAC1BY,EAAOI,eAAe,WAAUJ,EAASA,EAAOigB,OAEtDhc,KAAOwqB,+BAA+BzuB,EAAQZ,GAC9C6E,KAAOipB,eAAeltB,EAAOZ,IAC7B6H,EAAMyB,OAAO1I,EAAQZ,GACrBvC,EAAUE,UAGZ6tB,GAAApjB,UAAEqiB,eAAc,SAAC7pB,EAAQsB,GACvB2C,KAAOinB,SAASrB,eAAe7pB,EAAQsB,4CS1lBzCpB,IAAIuc,IAAQkS,GACNC,MAEAzD,GAAU,MAGK/tB,GAAM,SAQbsS,GAEZ,IAAO+M,GACL,KAAQ,IAAIvf,OAAM,oEAEpB+G,MAAOqb,SAAW5P,EAAQpQ,QAAQ,MAAO,IACzC2E,KAAO4qB,cAAgB,GAAIhQ,IAC3B5a,KAAO0d,YAAc,GAAInF,IAAWC,IACpCxY,KAAOwT,KAAO,GAAIxQ,GAElBwV,GAAShN,YAAYxL,KAAKqb,UAC1Brb,KAAO6qB,UAAY,GAAIzP,IAASpb,KAAKqb,SAAU7C,IAC/CxY,KAAOkO,MAAQ,GAAIyY,IAAK3mB,KAAMA,KAAKqb,SAAU7C,GAAQxY,KAAK0d,aAE1DnjB,OAAS0H,OAAOjC,wIAGlBmG,IAAE6a,KAAQxjB,IAAA,WAAI,MAAOwC,MAAK6qB,UAAU9O,MACpC5V,GAAE4V,KAAQve,IAAA,WAAI,MAAOwC,MAAKkO,MAAM6N,MAYhC5iB,GAAAoK,UAAEihB,MAAK,SAACtB,GACNljB,KAAOkO,MAAMrG,KAAKqb,IAGpB/pB,GAAAoK,UAAEmQ,QAAO,WACP1T,KAAOwT,KAAKc,WACZtU,KAAOkO,MAAMwF,UACb1T,KAAO6qB,UAAUnX,WAGnBvN,GAAEzC,IAAOlG,IAAA,WAAI,MAAOiG,MAAKC,MAAQ1D,KAAKghB,KAAKxF,YAC3CriB,GAAAoK,UAAEunB,OAAM,WAAI,MAAO9qB,MAAK4qB,cAAc7P,kBAAkB/a,KAAK0D,MAE7DvK,GAAAoK,UAAEwnB,aAAY,SAACngB,aACb,OAAS5K,MAAK0d,YAAY7D,QAAQ,OAAQ,eAAgB,GAAItL,GAAUvO,KAAKkO,MAAO,KAAM,WACxF,MAASsK,IAAOpM,oBAAoBpM,EAAKqb,SAAUzQ,GAAQogB,YAAY,OAI3E7xB,GAAAoK,UAAE0nB,eAAc,qBACd,OAASjrB,MAAK0d,YAAY7D,QACxB,OAAU,iBAAkB,GAAItL,GAAUvO,KAAKkO,MAAO,KAAM,WAC1D,MAASsK,IAAOjM,OAAOvM,EAAKqb,aAKlCliB,GAAAoK,UAAEmV,UAAS,SAAC2I,EAAYzI,GACtB,MAAS5Y,MAAK0d,YAAYhF,UAAU2I,EAAYzI,IAIlDzf,GAAAoK,UAAEoe,QAAO,SAAC3O,EAAOpR,GAMf,MALOA,KACLA,EAAgBoR,EAChBA,EAAU3T,QAENuC,YAAuBnC,KAAQmC,GAAepI,EAAGoI,IAC9C,GAAImR,IAAUC,EAAOpR,EAAa5B,KAAKkO,MAAO,YAIzD/U,GAAAoK,UAAE2L,KAAI,SAACkI,EAAQxX,aACbA,GAAaD,EAAoBC,EACjC,IAAMsrB,GAAS9qB,EACPD,EAAUN,QAAQC,UAAUU,KAAK,WAAG,MAAG,IAAIX,SAAQ,SAACC,EAASG,GACnE,GACMkrB,GADEnY,KAGF0O,EAAY,GAAI3O,IAAUC,GAAQ9W,OAAQkb,GAASpX,EAAKkO,MAAO,QAE/DoT,EAActhB,EAAK0Y,UAAU,QAASU,UAAW,SAAAiF,GACrD,QAAWpZ,GAAMpD,GACf,GAAOA,EACP,MAAMA,aAAsBpC,GAAe4e,EAAGjH,OAAOjY,QAAQ0C,GACpDrI,EAAE8W,KAAKzO,EAAY,SAAAzF,GAAM,MAAG6I,GAAM7I,KAEvC6I,EAAMyc,EAAUxN,MACpBjU,EAASoe,EAAG9f,OACZ2sB,QAIE9W,EAAUpU,EAAKhH,MAAM,WAAG,MAAG0oB,GAAU1R,OAAO,SAAAA,GACzCA,IACPoE,IACAA,EAAY,KACZ+W,EAAoB9qB,EAClBT,EAAWoT,EAAM9W,QAAS,WAAOtD,EAAQE,SAAUqyB,EAAkB,KAAMD,MACzE1qB,KAAK,SAAAtE,GAAW4D,EAAQ5D,IAAW,SAAAqC,GAAU0B,EAAO1B,OAG1D2sB,GAAY,WACJ9W,IAAUA,IAAWA,EAAU,MAC/BkN,IAAcA,IAAeA,EAAc,MAC3CI,IAAYA,EAAUhO,UAAWgO,EAAY,MAC7CyJ,GAAmBA,EAAgB/qB,QAAQ+qB,EAAgB/qB,UAGnEA,EAAW,WACTH,EAAS,GAAIhH,OAAM,aACnBiyB,QAGJ,OAAShrB,GAAcC,EAASC,IAGlCjH,GAAAoK,UAAEvK,MAAK,SAAC8oB,EAAWC,EAAYzV,GAC7B,GAAM8e,GAAe,EAEbhX,EAAUpU,KAAKwT,KAAKpZ,OAAO0nB,EAAW,SAACvX,EAAUmD,GACvD0d,IACuB,IAAjBA,EAEJvrB,QAAUC,UAAUU,KAAK,WACjB4qB,EAAe,GAAKtJ,MAAgBvX,IAC1CwX,EAAaxX,EAAUmD,GACvB9U,EAAUE,aAGZipB,EAAaxX,EAAUmD,GACvB9U,EAAUE,YAERqc,WAAW,EAAMkW,KAAM/e,GAAWA,EAAQ+e,MAEhD,OAASjX,IAGXjb,GAAAoK,UAAE4e,KAAI,SAACD,EAAY5V,MACX4e,GAASI,SACTnrB,EAAU,GAAIN,SAAQ,SAACC,EAASG,GACpC,GAAMmU,GAAUpU,EAAKhH,MAAMkpB,EAAY,SAAA9lB,GAC9BA,GAEP4G,EAAMuoB,SAAS,WACbnvB,EAAU8lB,IACH9lB,IACP0D,EAAU1D,GACV8uB,QAGE1xB,GAAE6K,IAAIiI,EAAS,aACnBgf,EAAkBngB,WAAW,WAC3BmgB,EAAkB,KAClBrrB,EAAS,GAAIhH,OAAMqT,EAAQkf,gBAAkB,YAC7CN,KACG5e,EAAQmf,UAEfP,EAAY,WACJ9W,IAAUA,IAAWA,EAAU,MAC/BkX,IAAgBrU,aAAaqU,GAAgBA,EAAgB,MACnErrB,EAAS,GAAIhH,OAAM,eAKvB,OAFAkH,GAAYD,EAAcG,EAAeF,EAAS+qB,IAC5C5e,GAAWA,EAAQ0G,OAAO1G,EAAQ0G,MAAMe,IAAI,WAAY,WAAO5T,EAAQC,WACpED,GAGXhH,GAAAoK,UAAEmoB,+BAA8B,WAC9B1rB,KAAOkO,MAAM0X,eAAe5lB,KAAKkO,MAAM6N,KAAM,MAG/C4P,GAAEC,sBAAgCpuB,IAAA,WAChC,MAASmU,GAAMhV,MAGjBxD,GAAE0yB,yBAA+B,SAACna,GAChC,sBADoC,IAC3BC,EAAM1I,IAAIyI,IAGrBvY,GAAE2yB,cAAoB,SAACvlB;AACrB,GAAMiS,GAAQ,KAAM,IAAIvf,OAAM,2BAC9B,IAAMO,EAAEuD,SAASwJ,GAAY,CAC3B,GAAQwlB,GAASpzB,OAAOqzB,cAAgBrzB,OAAOozB,MAC/C,KAAOA,EAAQ,KAAM,IAAI9yB,OAAM,yCAC/BsN,GAAc,GAAIwlB,GAAOxlB,GAI3B,MAFAiS,IAAW,GAAIlS,GAAOC,GAChBmkB,IAASlS,GAAOzP,cAAc2hB,IAC3BlS,GAAO3Q,KAAKtB,GAAW/F,KAC9B,SAAGkF,MAACumB,GAAoBvmB,EAAAumB,qBAAEC,EAAkBxmB,EAAAwmB,kBAC1C3xB,QAASgmB,eAAepnB,GAAO,wBAAyBiD,MAAO8vB,GAC/D,KAAiB,GAAAxvB,GAAA,EAAAC,EAAIsvB,EAAoBvvB,EAAAC,EAAAE,OAAAH,GAAA,EAAE,CACzC,GADWkN,GAAIjN,EAAAD,EACbvD,IAAMgzB,OAAOviB,GAAQ4O,GAAO7O,oBAAoBC,OAM1D+hB,GAAEQ,OAAiB3uB,IAAA,WAAI,MAAOmtB,KAC9BxxB,GAAEizB,UAAgB,SAACC,GACjBlzB,GAAQgzB,OAAOE,GAAgB7T,GAAO7O,oBAAoB0iB,IAG5DlzB,GAAE0U,iBAAuB,WAAI,MAAO2K,IAAO3K,oBAC3C1U,GAAEqP,QAAc,WAAI,MAAOgQ,IAAOhQ,WAClCrP,GAAEwP,4BAAkC,SAACC,EAAyBC,EAAuBC,GACnF,MAAS0P,IAAO7P,4BACdC,EAA2BC,EAAuBC,IAGtD3P,GAAEmzB,sBAA4B,SAAChzB,GAC7BV,EAAUS,eAAeC,IAG3BH,GAAE+B,UAAgB,QAAAA,GAACC,GAAM,MAAOD,GAAUC,IAC1ChC,GAAEqC,YAAkB,QAAAA,GAACa,GAAa,MAAOb,GAAYa,IAErDlD,GAAE4P,cAAoB,SAAChH,GACrB2oB,GAAY3oB,EACNyW,IAAQA,GAAOzP,cAAchH,IAIrCoE,GAAEkM,iBAAoB7U,IAAA,WAAI,MAAOrE,IAAMkZ,kBACvClM,GAAE+gB,QAAW1pB,IAAA,WAAI,MAAOrE,IAAM+tB,SAC9B/gB,GAAEomB,qBAAwB/uB,IAAA,WAAI,MAAOrE,IAAMozB,8FAG3ChyB,OAAOma,iBAAiBvb,IACtBkZ,kBAAmBjW,MAAOiW,GAC1B6U,SAAU9qB,MAAO8qB,MAGnBtuB,EAAQM,aAAaC","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(typeof object === 'object' && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates, writeSerial});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: false, get: () => this._vue.values[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    if (this.$$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n\n  get $$destroyed() {\n    return false;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n            targetMount.escapedKey === escapedKey ||\n            targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$')) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.each(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get: function() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      const unwatch = vue.$watch(compute, newValue => {\n        if (object.$$destroyed) throw new Error('Object already destroyed');\n        if (_.isObject(newValue) && newValue.then) {\n          const computationSerial = propertyStats.numRecomputes;\n          newValue.then(finalValue => {\n            if (computationSerial === propertyStats.numRecomputes) update(finalValue);\n          }, error => {\n            if (computationSerial === propertyStats.numRecomputes) {\n              if (update(new ErrorWrapper(error))) throw error;\n            }\n          });\n        } else {\n          if (update(newValue)) {\n            angular.digest();\n            if (newValue instanceof ErrorWrapper) throw newValue.error;\n          }\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          if (unwatch) {\n            unwatch();\n            _.pull(object.$$finalizers, unwatch);\n          } else {\n            unwatchNow = true;\n          }\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        freeze(newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n    Object.defineProperty(\n      object, '$$destroyed', {value: true, enumerable: false, configurable: false});\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key)) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  if (this.$$destroyed) throw new Error('Object already destroyed');\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || Object.isFrozen(object) || !_.isObject(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) {\n    return _.map(object, value => freeze(value));\n  } else {\n    return _.mapValues(object, value => freeze(value));\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, currentValue) {\n    this._path = path;\n    this._currentValue = currentValue;\n  }\n\n  get currentValue() {return this._currentValue;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const currentValue = ref.value;\n      const txn = new Transaction(ref.path, currentValue);\n      // Resolve an empty promise before running the update function to ensure that Vue's watcher\n      // queue gets emptied (it's also scheduled as a microtask) and computed properties are up to\n      // date.\n      return Promise.resolve().then(() => updateFunction(txn)).then(() => {\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        // Capture old value before applying local writes.\n        const oldValue = toFirebaseJson(currentValue);\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._modeler.isLocal(ref.path)) {\n              throw new Error(`Commit in local subtree: ${ref.path}`);\n            }\n            this._applyLocalWrite({[ref.path]: values['']});\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            _(values).keys().each(path => {\n              if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n            });\n            this._applyLocalWrite(values);\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          if (result.committed) {\n            txn._currentValue = result.currentValue;\n            return txn;\n          } else {\n            this._integrateSnapshot(result.snapshot);\n            return attemptTransaction();\n          }\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override,\n            createdObjects\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : splitPath(path, true);\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(snap.path, snap.key, snap.value, parent, true, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    _.each(segments, (segment, i) => {\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(ancestorPath, key, {}, object, remoteWrite, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    let object = parent[key];\n    if (!_.isArray(value) && !_.isPlainObject(value)) {\n      this._destroyObject(object);\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, createdObjects);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, escapedKey), key, placeholder, object, false, false, createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(parent, object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(object, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (object[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object !== 'object') return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils/promises.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    this._nodeIndex['/'] = this._root;\n    Object.freeze(this);\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}