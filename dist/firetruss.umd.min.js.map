{"version":3,"sources":["../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/angularCompatibility.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","_","isObject","Object","isExtensible","let","result","const","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","isError","error","Error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","call","onFinally","computeValue","prop","propertyStats","$destroyed","$$touchThis","oldPropertyFrozen","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","forEach","startsWith","includes","absolutePath","allPaths","sortBy","otherPath","extractCommonPathPrefix","prefixSegments","firstMismatchIndex","maxIndex","Math","min","relativizePaths","offset","toFirebaseJson","vue","lastDigestRequest","digestInProgress","bareDigest","digestRequest","angularProxy","active","window","angular","module","digest","watch","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","debounce","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","getPrototypeOf","angularDigest","$digest","original","Vue","data","nextTick","last","_watchers","id","Infinity","method","noop","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","exists","writeSerial","_path","_value","_exists","_writeSerial","prototypeAccessors","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","seal","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","compact","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","once","snapshot","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","isMatch","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","snapshots","jsonSnapshot","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","assign","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","unused","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","connectReference","updateFn","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","_updateRefValue","childKeys","childKey","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","operand","_type","_target","_operand","_ready","_running","_ended","_tries","_slowHandles","targets","escapedPathFragment","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","getRandomValues","crypto","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","array","Uint8Array","random","MetaTree","dispatcher","_rootUrl","_dispatcher","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_auth","serial","initialAuthChangeReceived","_handleAuthChange","_connectInfoProperty","root","$data","authenticate","rememberMe","unauthenticate","approved","supersededChange","authSerial","_isAuthChangeStale","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","_queueSnapshotCallback","updatedKeys","_updateKeys","_applySnapshot","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","applySnapshot","prunePath","_pendingSnapshotCallbacks","_throttled","processPendingSnapshots","_processPendingSnapshots","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","isEmpty","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","throttleSnapshots","throttle","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","Value","$parent","$path","defineProperty","$refs","$key","lastIndexOf","$hidden","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$newKey","newKey","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$nextTick","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","writable","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","_wrapProperties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","valueKey","pendingPromise","writeAllowed","unwatchNow","compute","finalValue","trussExpectedException","watcher","destroyObject","$finalize","isPlaceholder","isLocal","_hasLocalProperties","forEachPlaceholderChild","checkVueObject","checkedObjects","top","trussCode","Transaction","_ref","_outcome","_values","currentValue","outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","throttleRemoteDataUpdates","numValues","_applyLocalWrite","pathPrefix","immediateFailure","_repair","attemptTransaction","txn","committed","basePath","flatten","numLocal","coupledDescendantPaths","descendantPath","subValue","_plantValue","_scaffoldAncestors","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","cleanup","callbackPromise","oldValueClone","usePreciseDefaults","precise","numCallbacks","deep","newValueClone","defaultsDeep","defaults","timeoutHandle","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\.$#[\\]/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(_.isObject(object) && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[.$#[\\]]|\\\\(?![0-9a-f][0-9a-f])/i.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      // eslint-disable-next-line no-control-regex\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\nconst MIN_WORKER_VERSION = '0.8.0';\n\n\nclass Snapshot {\n  constructor({path, value, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    Object.seal(this);\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) throw new Error('localStorage and sessionStorage not available');\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) {\n          return Promise.reject(new Error(\n            `Incompatible Firetruss worker version: ${response.version} ` +\n            `(${MIN_WORKER_VERSION} or better required)`\n          ));\n        }\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || _.constant(true);\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (!_.isFunction(fn)) throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    }\n    return Promise.resolve();\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    const simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'once':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(_.map(simulatedCalls, message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (_.every(securityTraces, trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return _.compact(securityTraces).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  once(url, writeSerial) {\n    return this._send({msg: 'once', url, writeSerial}).then(snapshot => new Snapshot(snapshot));\n  }\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback, handle => _.isMatch(handle, {listenerKey, eventType, context})\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of _.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send(\n      {msg: 'transaction', url, oldValue, relativeUpdates, writeSerial}\n    ).then(result => {\n      if (result.snapshots) {\n        result.snapshots = _.map(result.snapshots, jsonSnapshot => new Snapshot(jsonSnapshot));\n      }\n      return result;\n    });\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = _.noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction errorFromJson(json, params) {\n  if (!json || _.isError(json)) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      error.extra = error.extra || {};\n      error.extra[propertyName] = json[propertyName];\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.forEach(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.forEach(this._angularUnwatches, unwatch => {unwatch();});\n    _.forEach(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (unused, key) => ({\n      configurable: true, enumerable: false, get: () => {\n        const descriptor = this._vue.descriptors[key];\n        if (descriptor instanceof Reference) return descriptor.value;\n        return this._vue.values[key];\n      }\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.forEach(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.forEach(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.forEach(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    Vue.set(this._vue.values, key, undefined);\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      this._disconnects[key] = this._tree.connectReference(descriptor, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.includes(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      // eslint-disable-next-line no-invalid-this\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}  // eslint-disable-line lodash/prefer-constant\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}  // eslint-disable-line lodash/prefer-constant\n\n  $newKey() {return this.$truss.newKey();}\n\n  $intercept(actionType, callbacks) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {  // eslint-disable-line prefer-const\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $nextTick() {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.nextTick();\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    /* eslint-disable no-unused-expressions */\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    /* eslint-enable no-unused-expressions */\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n\n  get $destroyed() {  // eslint-disable-line lodash/prefer-constant\n    return false;\n  }\n}\n\n\n_.forEach(Value.prototype, (prop, name) => {\n  Object.defineProperty(\n    Value.prototype, name, {value: prop, enumerable: false, configurable: false, writable: false});\n});\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.forEach(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.forEach(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.forEach(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {  // eslint-disable-line no-empty-function\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.forEach(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get,\n            set: descriptor.set\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.forEach(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n          _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else if (!_.has(mount, 'placeholder')) {\n        mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n        targetMount.escapedKey === escapedKey ||\n        targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$'\n      )) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.assign(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.forEach(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (angular.active) this._wrapProperties(object);\n\n    if (mount.keysUnsafe) {\n      properties.$data = {value: Object.create(null), configurable: true, enumerable: true};\n    }\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.forEach(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _wrapProperties(object) {\n    _.forEach(object, (value, key) => {\n      const valueKey = '$_' + key;\n      Object.defineProperties(object, {\n        [valueKey]: {value, writable: true},\n        [key]: {\n          get: () => object[valueKey],\n          set: arg => {object[valueKey] = arg; angular.digest();},\n          enumerable: true, configurable: true\n        }\n      });\n    });\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value, pendingPromise;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      let unwatch = () => {unwatchNow = true;};\n      unwatch = vue.$watch(compute, newValue => {\n        if (object.$destroyed) {\n          unwatch();\n          return;\n        }\n        if (pendingPromise) {\n          if (pendingPromise.cancel) pendingPromise.cancel();\n          pendingPromise = undefined;\n        }\n        if (_.isObject(newValue) && newValue.then) {\n          const promise = newValue.then(finalValue => {\n            if (promise === pendingPromise) update(finalValue);\n            // No need to angular.digest() here, since if we're running under Angular then we expect\n            // promises to be aliased to its $q service, which triggers digest itself.\n          }, error => {\n            if (promise === pendingPromise && update(new ErrorWrapper(error)) &&\n                !error.trussExpectedException) throw error;\n          });\n          pendingPromise = promise;\n        } else if (update(newValue)) {\n          angular.digest();\n          if (newValue instanceof ErrorWrapper && !newValue.error.trussExpectedException) {\n            throw newValue.error;\n          }\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      // Hack to change order of computed property watchers.  By flipping their ids to be negative,\n      // we ensure that they will settle before all other watchers, and also that children\n      // properties will settle before their parents since values are often aggregated upwards.\n      const watcher = _.last(vue._watchers);\n      watcher.id = -watcher.id;\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        // Freeze the computed value so it can't be accidentally modified by a third party.  Ideally\n        // we'd freeze it before setting it so that Vue wouldn't instrument the object recursively\n        // (since it can't change anyway), but we actually need the instrumentation in case a client\n        // tries to access an inexistent property off a computed pointer to an unfrozen value (e.g.,\n        // a $truss-ified object).  When instrumented, Vue will add a dependency on the unfrozen\n        // value in case the property is later added.  If uninstrumented, the dependency won't be\n        // added and we won't be notified.  And Vue only instruments extensible objects...\n        freeze(newValue);\n        return true;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get() {\n        if (!writeAllowed && value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set(newValue) {\n        if (writeAllowed) {\n          value = newValue;\n        } else if (prop.set) {\n          prop.set.call(this, newValue);\n        } else {\n          throw new Error(`You cannot set a computed property: ${prop.name}`);\n        }\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n    Object.defineProperty(\n      object, '$destroyed', {value: true, enumerable: false, configurable: false});\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path, value) {\n    // eslint-disable-next-line no-shadow\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (mount && mount.local) return true;\n    if (this._hasLocalProperties(mount, value)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return false;\n  }\n\n  _hasLocalProperties(mount, value) {\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (!mount.localDescendants || !_.isObject(value)) return false;\n    for (const key in value) {\n      const local =\n        this._hasLocalProperties(mount.children[escapeKey(key)] || mount.children.$, value[key]);\n      if (local) return true;\n    }\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.forEach(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key) ||\n            /^\\$_/.test(key)) continue;\n        // eslint-disable-next-line no-shadow\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        let value;\n        try {\n          value = object[key];\n        } catch (e) {\n          // Ignore any values that hold exceptions, or otherwise throw on access -- we won't be\n          // able to check them anyway.\n          continue;\n        }\n        if (!(_.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = value;\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(_.isFunction(value) || value instanceof Promise)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  /* eslint-disable no-invalid-this */\n  if (this.$destroyed) return;\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  const oldPropertyFrozen = currentPropertyFrozen;\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = oldPropertyFrozen;\n  }\n  /* eslint-enable no-invalid-this */\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        /* eslint-disable no-invalid-this */\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n        /* eslint-enable no-invalid-this */\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    }\n    return wrapConnections(object, descriptor);\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || !_.isObject(object) || Object.isFrozen(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) return _.map(object, value => freeze(value));\n  return _.mapValues(object, value => freeze(value));\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport Reference from './Reference.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(ref) {\n    this._ref = ref;\n    this._outcome = undefined;\n    this._values = undefined;\n  }\n\n  get currentValue() {return this._ref.value;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', undefined, createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  throttleRemoteDataUpdates(delay) {\n    this._coupler.throttleSnapshots(delay);\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    const numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    if (this._applyLocalWrite(values, method === 'override')) return Promise.resolve();\n    const pathPrefix = extractCommonPathPrefix(values);\n    relativizePaths(pathPrefix, values);\n    if (pathPrefix !== ref.path) ref = new Reference(ref._tree, pathPrefix, ref._annotations);\n    const url = this._rootUrl + pathPrefix;\n    const writeSerial = this._writeSerial;\n    const set = numValues === 1;\n    const operand = set ? values[''] : values;\n    return this._dispatcher.execute('write', set ? 'set' : 'update', ref, operand, () => {\n      const promise = this._bridge[set ? 'set' : 'update'](url, operand, writeSerial);\n      return promise.catch(e => {\n        if (!e.immediateFailure) return Promise.reject(e);\n        return promiseFinally(this._repair(ref, values), () => Promise.reject(e));\n      });\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) {\n        return Promise.reject(new Error('Transaction needed too many retries, giving up'));\n      }\n      const txn = new Transaction(ref);\n      let oldValue;\n      // Ensure that Vue's watcher queue gets emptied and computed properties are up to date before\n      // running the updateFunction.\n      return Vue.nextTick().then(() => {\n        oldValue = toFirebaseJson(txn.currentValue);\n        return updateFunction(txn);\n      }).then(() => {\n        if (!_.isEqual(oldValue, toFirebaseJson(txn.currentValue))) return attemptTransaction();\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._applyLocalWrite({[ref.path]: values['']})) return Promise.resolve();\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            if (this._applyLocalWrite(values)) return Promise.resolve();\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          _.forEach(result.snapshots, snapshot => this._integrateSnapshot(snapshot));\n          return result.committed ? txn : attemptTransaction();\n        }, e => {\n          if (e.immediateFailure && (txn.outcome === 'set' || txn.outcome === 'update')) {\n            return promiseFinally(this._repair(ref, values), () => Promise.reject(e));\n          }\n          return Promise.reject(e);\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, undefined, attemptTransaction);\n    });\n  }\n\n  _repair(ref, values) {\n    // If a write fails early -- that is, before it gets applied to the Firebase client's local\n    // tree -- then we need to repair our own local tree manually since Firebase won't send events\n    // to unwind the change.  This should be very rare since it's always due to a developer mistake\n    // so we don't need to be particularly efficient.\n    const basePath = ref.path;\n    const paths = _(values).keys().map(key => {\n      let path = basePath;\n      if (key) path = joinPath(path, key);\n      return _.keys(this._coupler.findCoupledDescendantPaths(path));\n    }).flatten().value();\n    return Promise.all(_.map(paths, path => {\n      return this._bridge.once(this._rootUrl + path).then(snap => {\n        this._integrateSnapshot(snap);\n      });\n    }));\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    let numLocal = 0;\n    _.forEach(values, (value, path) => {\n      const local = this._modeler.isLocal(path, value);\n      if (local) numLocal++;\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue.$data[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override, local,\n            createdObjects\n          );\n        }\n        if (!override && !local) this._localWrites[descendantPath] = this._writeSerial;\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n    if (numLocal && numLocal < _.size(values)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return override || !!numLocal;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    const properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (_.startsWith(name, '$')) descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss) || object.$destroyed) return;\n    this._modeler.destroyObject(object);\n    // Normally we'd only destroy enumerable children, which are the Firebase properties.  However,\n    // clients have the option of creating hidden placeholders, so we need to scan non-enumerable\n    // properties as well.  To distinguish such placeholders from the myriad other non-enumerable\n    // properties (that lead all over tree, e.g. $parent), we check that the property's parent is\n    // ourselves before destroying.\n    for (const key of Object.getOwnPropertyNames(object)) {\n      const child = object.$data[key];\n      if (child && child.$parent === object) this._destroyObject(child);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.forEach(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(\n          snap.path, snap.key, snap.value, parent, true, false, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(\n          ancestorPath, key, {}, object, remoteWrite, false, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    }\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, local, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    let object = parent.$data[key];\n    if (!_.isArray(value) && !(local ? _.isPlainObject(value) : _.isObject(value))) {\n      this._destroyObject(object);\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    // Plant hidden placeholders first, so their computed watchers will have a similar precedence to\n    // the parent object, and the parent object's other children will get computed first.  This can\n    // optimize updates when parts of a complex model are broken out into hidden sub-models, and\n    // shouldn't risk being overwritten by actual Firebase data since that will rarely (never?) be\n    // hidden.\n    if (objectCreated) this._plantPlaceholders(object, path, true, createdObjects);\n    _.forEach(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, local, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, false, createdObjects);\n    } else {\n      _.forEach(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, hidden, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, mount => {\n      if (hidden !== undefined && hidden !== !!mount.hidden) return;\n      const key = unescapeKey(mount.escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, mount.escapedKey), key, mount.placeholder, object, false, false, false,\n          createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object && object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object && object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(\n            parent, object && object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (object === undefined || object === null) return false;\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (!_.isObject(object) || !object.$truss) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.forEach(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object.$data[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, data, key) {\n    const descriptor = Object.getOwnPropertyDescriptor(data, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        const child = data[key];\n        if (!child || child.$parent !== object) {\n          throw new Error(\n            `Key conflict between Firebase and instance or computed properties at ` +\n            `${object.$path}: ${key}`);\n        }\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in data) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    let descriptor = this._getFirebasePropertyDescriptor(object, data, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(data, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (data[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      data[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(data, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(data, key);\n      Object.defineProperty(data, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, data, key);\n    this._destroyObject(data[key]);\n    Vue.delete(data, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.forEach(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (_.includes(path, '/')) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.forEach(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function extractCommonPathPrefix(values) {\n  let prefixSegments;\n  _.forEach(values, (value, path) => {\n    const segments = path === '/' ? [''] : splitPath(path, true);\n    if (prefixSegments) {\n      let firstMismatchIndex = 0;\n      const maxIndex = Math.min(prefixSegments.length, segments.length);\n      while (firstMismatchIndex < maxIndex &&\n             prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n        firstMismatchIndex++;\n      }\n      prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n      if (!prefixSegments.length) return false;\n    } else {\n      prefixSegments = segments;\n    }\n  });\n  return prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n}\n\nexport function relativizePaths(rootPath, values) {\n  const offset = rootPath === '/' ? 1 : rootPath.length + 1;\n  _.forEach(_.keys(values), path => {\n    values[path.slice(offset)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (!_.isObject(object)) return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nlet vue;\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  _.forEach(['digest', 'watch', 'defineModule', 'debounceDigest'], method => {\n    angularProxy[method] = _.noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(['$provide', function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue = new Vue({data: {digestRequest: 0}});\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            // Make sure we execute the digest outside the Vue task queue, because otherwise if the\n            // client replaced Promise with angular.$q all Truss.nextTick().then() functions will be\n            // executed inside the Angular digest and hence inside the Vue task queue. But\n            // Truss.nextTick() is used precisely to avoid that.  Note that it's OK to use\n            // Vue.nextTick() here because even though it will schedule a flush via Promise.then()\n            // it only uses the native Promise, before it could've been monkey-patched by the app.\n            Vue.nextTick(() => {\n              if (vue.digestRequest <= lastDigestRequest) return;\n              digestInProgress = true;\n              rootScope.$digest.original.call(rootScope);\n              lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n            });\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  }]);\n}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n/* eslint-disable no-use-before-define */\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '') || '/';\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        return mapping;\n      }\n      if (arg === undefined || arg === null) return;\n      escapedKeys.push(escapeKey(arg));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  test(pattern) {\n    return makePathMatcher(pattern).test(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.assign({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (!_.includes(childPath, '/')) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\nexport class Reference extends Handle {\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.assign({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec, this._annotations);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.assign(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.forEach(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.forEach(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.forEach(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport Reference from './Reference.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {joinPath} from './utils/paths.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'authenticate',\n  'unathenticate', 'certify', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(() => {\n      this._fired = true;\n      this._callback(this._operation);\n    }, this._delay - elapsed);\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target, operand) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._operand = operand;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get targets() {\n    if (this._method !== 'update') return [this._target];\n    return _.map(this._operand, (value, escapedPathFragment) => {\n      return new Reference(\n        this._target._tree, joinPath(this._target.path, escapedPathFragment),\n        this._target._annotations);\n    });\n  }\n  get operand() {return this._operand;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.forEach(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.forEach(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.includes(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.forEach(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, operand, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target, operand);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target, operand) {\n    return new Operation(operationType, method, target, operand);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      // If the operation ended in the meantime, bail.  This will cause the caller to attempt to\n      // fail the operation, but since it's already ended the call to end() with an error will be a\n      // no-op.\n      if (operation.ended) return;\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return Promise.resolve();\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) {\n      operation._error = error;\n    } else {\n      // In case we're racing with a retry(), wipe out the error.\n      delete operation._error;\n    }\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (!operation.error) return Promise.resolve();\n    const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n    return this._bridge.probeError(operation.error).then(() => {\n      if (onFailureCallbacks) {\n        setTimeout(() => {\n          _.forEach(onFailureCallbacks, onFailure => onFailure(operation));\n        }, 0);\n      }\n      return Promise.reject(operation.error);\n    });\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst getRandomValues = window.crypto && window.crypto.getRandomValues &&\n  window.crypto.getRandomValues.bind(window.crypto);\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);  // eslint-disable-line no-bitwise\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      if (getRandomValues) {\n        /* global Uint8Array */\n        const array = new Uint8Array(12);\n        getRandomValues(array);\n        for (let i = 0; i < 12; i++) {\n          // eslint-disable-next-line no-bitwise\n          this._lastRandomValues[i] = array[i] & (i ? 0x3f : 0x0f);\n        }\n      } else {\n        for (let i = 0; i < 12; i++) {\n          // Make sure to leave some space for incrementing in the top nibble.\n          this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n        }\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\nimport Reference from './Reference.js';\n\n\nexport default class MetaTree {\n  constructor(rootUrl, tree, bridge, dispatcher) {\n    this._rootUrl = rootUrl;\n    this._tree = tree;\n    this._dispatcher = dispatcher;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            Vue.set(this, key, Date.now() + this.timeOffset);\n            angular.digest();\n          };\n          update();\n          setInterval(update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    this._auth = {serial: 0, initialAuthChangeReceived: false};\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  authenticate(token) {\n    this._auth.serial++;\n    return this._dispatcher.execute(\n      'auth', 'authenticate', new Reference(this._tree, '/'), token, () => {\n        return this._bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n      }\n    );\n  }\n\n  unauthenticate() {\n    // Signal user change to null pre-emptively.  This is what the Firebase SDK does as well, since\n    // it lets the app tear down user-required connections before the user is actually deauthed,\n    // which can prevent spurious permission denied errors.\n    this._auth.serial++;\n    return this._handleAuthChange(null).then(approved => {\n      // Bail if auth change callback initiated another authentication, since it will have already\n      // sent the command to the bridge and sending our own now would incorrectly override it.\n      if (!approved) return;\n      return this._dispatcher.execute(\n        'auth', 'unauthenticate', new Reference(this._tree, '/'), undefined, () => {\n          return this._bridge.unauth(this._rootUrl);\n        }\n      );\n    });\n  }\n\n  _handleAuthChange(user) {\n    const supersededChange = !this._auth.initialAuthChangeReceived && this._auth.serial;\n    if (user !== undefined) this._auth.initialAuthChangeReceived = true;\n    if (supersededChange) return;\n    const authSerial = this._auth.serial;\n    if (this.root.user === user) return Promise.resolve(false);\n    return this._dispatcher.execute('auth', 'certify', new Reference(this._tree, '/'), user, () => {\n      if (this.root.user === user || authSerial !== this._auth.serial) return false;\n      if (user) Object.freeze(user);\n      this.root.user = user;\n      this.root.userid = user && user.uid;\n      angular.digest();\n      return true;\n    });\n  }\n\n  _isAuthChangeStale(user) {\n    return this.root.user === user;\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError, this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    this._coupler._queueSnapshotCallback(() => {\n      // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n      // tree, then tell the client to update its keys, pulling values from the tree.\n      if (!this._listeners.length || !this._listening) return;\n      const updatedKeys = this._updateKeys(snap);\n      this._coupler._applySnapshot(snap);\n      if (!this.ready) {\n        this.ready = true;\n        angular.digest();\n        for (const listener of this._listeners) {\n          this._coupler._dispatcher.markReady(listener.operation);\n        }\n      }\n      if (updatedKeys) {\n        for (const listener of this._listeners) {\n          if (listener.keysCallback) listener.keysCallback(updatedKeys);\n        }\n      }\n    });\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.includes(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else if (hasKey) {\n        this._coupler._decoupleSegments(this._segments.concat(snap.key));\n        _.pull(this._keys, snap.key);\n        this._keys.sort();\n        updatedKeys = this._keys;\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.forEach(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError, this,\n        {sync: true});\n      this.listening = true;\n    } else {\n      _.forEach(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.forEach(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    this._coupler._queueSnapshotCallback(() => {\n      if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n      this._coupler._applySnapshot(snap);\n      if (!this.ready && snap.path === this.path) {\n        this.ready = true;\n        angular.digest();\n        this.unlisten(true);\n        this._forAllDescendants(node => {\n          for (const op of node.operations) this._coupler._dispatcher.markReady(op);\n        });\n      }\n    });\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of node.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.forEach(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.forEach(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._pendingSnapshotCallbacks = [];\n    this._throttled = {processPendingSnapshots: this._processPendingSnapshots};\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: undefined, queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    Object.freeze(this);\n    // Set root node after freezing Coupler, otherwise it gets vue-ified too.\n    this._vue.$data.root = new Node(this, '/');\n    this._nodeIndex['/'] = this._root;\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.forEach(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n  }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n  _queueSnapshotCallback(callback) {\n    this._pendingSnapshotCallbacks.push(callback);\n    this._throttled.processPendingSnapshots.call(this);\n  }\n\n  _processPendingSnapshots() {\n    for (const callback of this._pendingSnapshotCallbacks) callback();\n    this._pendingSnapshotCallbacks.splice(0, Infinity);\n  }\n\n  throttleSnapshots(delay) {\n    if (delay) {\n      this._throttled.processPendingSnapshots = _.throttle(this._processPendingSnapshots, delay);\n    } else {\n      this._throttled.processPendingSnapshots = this._processPendingSnapshots;\n    }\n  }\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = '0.8.8';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n    this._metaTree = new MetaTree(this._rootUrl, this._tree, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._metaTree.authenticate(token);\n  }\n\n  unauthenticate() {\n    return this._metaTree.unauthenticate();\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    const usePreciseDefaults = _.isObject(options && options.precise);\n    let numCallbacks = 0;\n    let oldValueClone;\n    if (usePreciseDefaults) oldValueClone = _.clone(options.precise, options.deep);\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      if (options && options.precise) {\n        const newValueClone = usePreciseDefaults ?\n          (options.deep ?\n            _.defaultsDeep({}, newValue, options.precise) :\n            _.defaults({}, newValue, options.precise)) :\n          _.clone(newValue, options.deep);\n        if (_.isEqual(newValueClone, oldValueClone)) return;\n        oldValueClone = newValueClone;\n      }\n      numCallbacks++;\n      if (!unwatch) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1) return;\n          callbackFn(newValue, oldValue);\n          // No need to digest since under Angular we'll be using $q as Promise.\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    if (options && options.scope) options.scope.$on('$destroy', unwatch);\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup), cleanup);\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  nextTick() {\n    let cleanup;\n    let promise = new Promise((resolve, reject) => {\n      Vue.nextTick(resolve);\n      cleanup = () => {\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promise, cleanup);\n    return promise;\n  }\n\n  throttleRemoteDataUpdates(delay) {\n    this._tree.throttleRemoteDataUpdates(delay);\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}