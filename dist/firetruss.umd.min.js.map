{"version":3,"sources":["../src/angularCompatibility.js","../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","isExtensible","let","result","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","computeValue","prop","propertyStats","$$touchThis","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","startsWith","absolutePath","allPaths","sortBy","otherPath","relativizePaths","toFirebaseJson","Vue","data","active","forEach","method","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","Math","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","freeze","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","_path","_value","_valueError","_exists","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","writeSerial","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","isArray","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_values","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","$data","defineProperties","__ob__","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","contains","root","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$parent","$key","$path","$$initializers","$$finalizers","$$$trussCheck","Value","defineProperty","$refs","lastIndexOf","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","dep","depend","writable","Modeler","_trie","Class","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","createObject","properties","keysUnsafe","_buildComputedPropertyDescriptor","writeAllowed","destroyObject","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","isObject","Function","Transaction","currentValue","outcome","_outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_writeSerial","_localWrites","_localWriteTimestamp","_initialized","_modeler","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","coupledDescendantPaths","offset","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","VERSION","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(typeof object === 'object' && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {splitPath} from './utils/paths.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._values = new Vue({data: _.mapValues(connections, _.constant(undefined))});\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {}\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._values.$destroy();\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: true, get: () => this._values.$data[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      if (!this._scope.__ob__) Object.defineProperties(this._scope, dataProperties);\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._values.$data, key, subScope);\n          if (this._scope.__ob__) Vue.set(this._scope, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._values.$data[key] !== value) {\n      Vue.set(this._values.$data, key, value);\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._values.$data[key]) {\n      Vue.set(this._values.$data, key, {});\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, this._values.$data[key]);\n      angular.digest();\n    }\n    const subScope = this._values.$data[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    let object;\n    for (const segment of splitPath(this._vue.descriptors[key].path)) {\n      object = segment ? object[segment] : this._tree.root;\n    }\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {\n  $truss: true, $parent: true, $key: true, $path: true, $ref: true,\n  $$touchThis: true, $$initializers: true, $$finalizers: true,\n  $$$trussCheck: true,\n  __ob__: true\n};\n\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor() {\n    this._trie = {Class: Value};\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(targetMount, {\n        Class, matcher, computedProperties, escapedKey, placeholder: mount.placeholder,\n        local: mount.local\n      });\n    });\n    _.each(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get: function() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      const unwatch = vue.$watch(computeValue.bind(object, prop, propertyStats), newValue => {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        angular.digest();\n        if (newValue instanceof ErrorWrapper) throw newValue.error;\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      object.$$finalizers.push(unwatch);\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key]) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, tree) {\n    this._path = path;\n    this._tree = tree;\n  }\n\n  get currentValue() {return this._tree.getObject(this._path);}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler();\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const txn = new Transaction();\n      try {\n        updateFunction(txn);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      const values = _.mapValues(values, value => escapeKeys(value));\n      const oldValue = toFirebaseJson(this.getObject(ref.path));\n      switch (txn.outcome) {\n        case 'abort': return;\n        case 'cancel':\n          break;\n        case 'set':\n          if (this._modeler.isLocal(ref.path)) {\n            throw new Error(`Commit in local subtree: ${ref.path}`);\n          }\n          this._applyLocalWrite({[ref.path]: values['']});\n          break;\n        case 'update':\n          checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n          _(values).keys().each(path => {\n            if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n          });\n          this._applyLocalWrite(values);\n          relativizePaths(ref.path, values);\n          break;\n        default:\n          throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n      }\n      return this._bridge.transaction(\n        this._rootUrl + ref.path, oldValue, values\n      ).then(committed => {\n        if (!committed) return attemptTransaction();\n        return txn;\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? [path] : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath of coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override,\n            createdObjects\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : splitPath(path, true);\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(_.keys(this._localWrites), (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(snap.path, snap.key, snap.value, parent, true, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path));\n    _.each(segments, (segment, i) => {\n      let child = segment ? object[segment] : this.root;\n      if (!child) {\n        const ancestorPath = segments.slice(0, i + 1).join('/');\n        child = this._plantValue(\n          ancestorPath, segment, {}, object, remoteWrite, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !(_.isObject(value) && value.constructor === Object)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    let object = parent[key];\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, createdObjects);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, escapedKey), key, placeholder, object, false, false, createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = match.slice(1);\n      return '';\n    });\n    while (object && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(parent, object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: true\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object !== 'object') return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils/promises.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady() {\n    this._ready = true;\n    this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    this.markReady(operation);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    this._nodeIndex['/'] = this._root;\n    Object.freeze(this);\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/')}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/');\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    });\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}