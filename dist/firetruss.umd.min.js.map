{"version":3,"sources":["../src/angularCompatibility.js","../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","isExtensible","let","result","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","computeValue","prop","propertyStats","$$touchThis","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isObject","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","startsWith","absolutePath","allPaths","sortBy","otherPath","relativizePaths","toFirebaseJson","Vue","data","active","forEach","method","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","Math","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","writeSerial","_path","_value","_valueError","_exists","_writeSerial","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","contains","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","root","$data","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","Value","$parent","$path","defineProperty","$refs","$key","lastIndexOf","$hidden","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","writable","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","writeAllowed","unwatchNow","compute","computationSerial","finalValue","destroyObject","$finalize","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","Function","Transaction","currentValue","_currentValue","outcome","_outcome","_values","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","snapshot","coupledDescendantPaths","offset","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(typeof object === 'object' && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates, writeSerial});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {splitPath} from './utils/paths.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: false, get: () => this._vue.values[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n            targetMount.escapedKey === escapedKey ||\n            targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$')) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.each(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get: function() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      const unwatch = vue.$watch(compute, newValue => {\n        if (_.isObject(newValue) && newValue.then) {\n          const computationSerial = propertyStats.numRecomputes;\n          newValue.then(finalValue => {\n            if (computationSerial === propertyStats.numRecomputes) update(finalValue);\n          }, error => {\n            if (computationSerial === propertyStats.numRecomputes) {\n              if (update(new ErrorWrapper(error))) throw error;\n            }\n          });\n        } else {\n          if (update(newValue)) {\n            angular.digest();\n            if (newValue instanceof ErrorWrapper) throw newValue.error;\n          }\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          if (unwatch) {\n            unwatch();\n            _.pull(object.$$finalizers, unwatch);\n          } else {\n            unwatchNow = true;\n          }\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        freeze(newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key)) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || Object.isFrozen(object) || !_.isObject(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) {\n    return _.map(object, value => freeze(value));\n  } else {\n    return _.mapValues(object, value => freeze(value));\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, currentValue) {\n    this._path = path;\n    this._currentValue = currentValue;\n  }\n\n  get currentValue() {return this._currentValue;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const currentValue = ref.value;\n      const txn = new Transaction(ref.path, currentValue);\n      // Resolve an empty promise before running the update function to ensure that Vue's watcher\n      // queue gets emptied (it's also scheduled as a microtask) and computed properties are up to\n      // date.\n      return Promise.resolve().then(() => updateFunction(txn)).then(() => {\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        // Capture old value before applying local writes.\n        const oldValue = toFirebaseJson(currentValue);\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._modeler.isLocal(ref.path)) {\n              throw new Error(`Commit in local subtree: ${ref.path}`);\n            }\n            this._applyLocalWrite({[ref.path]: values['']});\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            _(values).keys().each(path => {\n              if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n            });\n            this._applyLocalWrite(values);\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          if (result.committed) {\n            txn._currentValue = result.currentValue;\n            return txn;\n          } else {\n            this._integrateSnapshot(result.snapshot);\n            return attemptTransaction();\n          }\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override,\n            createdObjects\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : splitPath(path, true);\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(snap.path, snap.key, snap.value, parent, true, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    _.each(segments, (segment, i) => {\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(ancestorPath, key, {}, object, remoteWrite, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !_.isPlainObject(value)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    let object = parent[key];\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, createdObjects);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, escapedKey), key, placeholder, object, false, false, createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(parent, object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(object, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (object[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object !== 'object') return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils/promises.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    this._nodeIndex['/'] = this._root;\n    Object.freeze(this);\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}