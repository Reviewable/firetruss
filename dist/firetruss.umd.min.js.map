{"version":3,"sources":["../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/angularCompatibility.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","escapeKeys","object","_","isObject","Object","isExtensible","let","result","const","hasOwnProperty","value","escapedKey","escapedValue","clone","joinPath","segments","i","list","arguments","length","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","isError","error","Error","message","propertyName","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","call","onFinally","computeValue","prop","propertyStats","$destroyed","$$touchThis","oldPropertyFrozen","currentPropertyFrozen","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","connections","descriptor","isFunction","fn","angularWatchSuppressed","freeze","isFrozen","isArray","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","forEach","startsWith","includes","absolutePath","allPaths","sortBy","otherPath","extractCommonPathPrefix","prefixSegments","firstMismatchIndex","maxIndex","Math","min","relativizePaths","offset","toFirebaseJson","vue","Vue","data","digestRequest","lastDigestRequest","digestInProgress","bareDigest","angularProxy","active","window","angular","module","digest","watch","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","debounce","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","getPrototypeOf","angularDigest","$digest","original","last","_watchers","id","Infinity","method","noop","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","writeSerial","_path","_value","_valueError","_exists","_writeSerial","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","seal","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","compact","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","isMatch","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","snapshots","jsonSnapshot","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","mapping","subPath","rest","subRef","subMapping","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","assign","by","some","clause","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_vue","descriptors","destroy","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","defineProperties","__ob__","dep","notify","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","operand","_type","_target","_operand","_ready","_running","_ended","_tries","_slowHandles","targets","escapedPathFragment","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","ending","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","dispatcher","_rootUrl","_dispatcher","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_auth","serial","_handleAuthChange","_connectInfoProperty","root","$data","authenticate","rememberMe","unauthenticate","approved","authSerial","_isAuthChangeStale","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","isEmpty","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$$$trussCheck","Value","$parent","$path","defineProperty","$refs","$key","lastIndexOf","$hidden","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$newKey","newKey","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$$finalizers","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$nextTick","nextTick","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","depend","$$initializers","writable","Modeler","debug","_trie","Class","_debug","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","allVariables","mounts","mount","variable","placeholder","targetMount","pick","createObject","properties","_wrapProperties","keysUnsafe","hidden","_buildComputedPropertyDescriptor","valueKey","pendingPromise","writeAllowed","unwatchNow","compute","finalValue","watcher","destroyObject","$finalize","isPlaceholder","isLocal","_hasLocalProperties","forEachPlaceholderChild","checkVueObject","checkedObjects","top","trussCode","Transaction","_ref","_outcome","_values","currentValue","outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_localWrites","_localWriteTimestamp","_initialized","_modeler","VERSION","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","pathPrefix","attemptTransaction","txn","snapshot","committed","numLocal","coupledDescendantPaths","descendantPath","subValue","_plantValue","_scaffoldAncestors","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","_keyGenerator","_metaTree","cleanup","callbackPromise","oldValueClone","usePreciseDefaults","precise","numCallbacks","deep","newValueClone","defaultsDeep","defaults","timeoutHandle","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\.$#[\\]/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function escapeKeys(object) {\n  // isExtensible check avoids trying to escape references to Firetruss internals.\n  if (!(_.isObject(object) && Object.isExtensible(object))) return object;\n  let result = object;\n  for (const key in object) {\n    if (!object.hasOwnProperty(key)) continue;\n    const value = object[key];\n    const escapedKey = escapeKey(key);\n    const escapedValue = escapeKeys(value);\n    if (escapedKey !== key || escapedValue !== value) {\n      if (result === object) result = _.clone(object);\n      result[escapedKey] = escapedValue;\n      if (result[key] === value) delete result[key];\n    }\n  }\n  return result;\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[.$#[\\]]|\\\\(?![0-9a-f][0-9a-f])/i.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      // eslint-disable-next-line no-control-regex\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists, writeSerial}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n    this._writeSerial = writeSerial;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  get writeSerial() {\n    return this._writeSerial;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    Object.seal(this);\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) {\n          return Promise.reject(new Error(\n            `Incompatible Firetruss worker version: ${response.version} ` +\n            `(${MIN_WORKER_VERSION} or better required)`\n          ));\n        }\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || _.constant(true);\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (!_.isFunction(fn)) throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    }\n    return Promise.resolve();\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    const simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(_.map(simulatedCalls, message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (_.every(securityTraces, trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return _.compact(securityTraces).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage({items}) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item of items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback, handle => _.isMatch(handle, {listenerKey, eventType, context})\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of _.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates, writeSerial) {\n    return this._send(\n      {msg: 'transaction', url, oldValue, relativeUpdates, writeSerial}\n    ).then(result => {\n      if (result.snapshots) {\n        result.snapshots = _.map(result.snapshots, jsonSnapshot => new Snapshot(jsonSnapshot));\n      }\n      return result;\n    });\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = _.noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction errorFromJson(json, params) {\n  if (!json || _.isError(json)) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      error.extra = error.extra || {};\n      error.extra[propertyName] = json[propertyName];\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {},\n      values: _.mapValues(connections, _.constant(undefined))\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.forEach(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.forEach(this._angularUnwatches, unwatch => {unwatch();});\n    _.forEach(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: false, get: () => this._vue.values[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      Object.defineProperties(this._scope, dataProperties);\n      if (this._scope.__ob__) this._scope.__ob__.dep.notify();\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.forEach(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.forEach(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.forEach(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._vue.values, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._vue.values[key] !== value) {\n      Vue.set(this._vue.values, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._vue.values[key]) {\n      Vue.set(this._vue.values, key, {});\n      angular.digest();\n    }\n    const subScope = this._vue.values[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.includes(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    const object = this._tree.getObject(this._vue.descriptors[key].path);\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      // eslint-disable-next-line no-invalid-this\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {$$$trussCheck: true, __ob__: true};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $hidden() {return false;}  // eslint-disable-line lodash/prefer-constant\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}  // eslint-disable-line lodash/prefer-constant\n\n  $newKey() {return this.$truss.newKey();}\n\n  $intercept(actionType, callbacks) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {  // eslint-disable-line prefer-const\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $nextTick() {\n    if (this.$destroyed) throw new Error('Object already destroyed');\n    const promise = this.$truss.nextTick();\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    /* eslint-disable no-unused-expressions */\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    /* eslint-enable no-unused-expressions */\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n\n  get $destroyed() {  // eslint-disable-line lodash/prefer-constant\n    return false;\n  }\n}\n\n\n_.forEach(Value.prototype, (prop, name) => {\n  Object.defineProperty(\n    Value.prototype, name, {value: prop, enumerable: false, configurable: false, writable: false});\n});\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor(debug) {\n    this._trie = {Class: Value};\n    this._debug = debug;\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.forEach(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.forEach(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.forEach(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {  // eslint-disable-line no-empty-function\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || !scaffold && node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.forEach(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (name === '$finalize') continue;\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    const allVariables = [];\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.forEach(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n          _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n        allVariables.push(variable);\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else if (!_.has(mount, 'placeholder')) {\n        mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher && (\n        targetMount.escapedKey === escapedKey ||\n        targetMount.escapedKey.charAt(0) === '$' && escapedKey.charAt(0) === '$'\n      )) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.assign(\n        targetMount, {Class, matcher, computedProperties, escapedKey},\n        _.pick(mount, 'placeholder', 'local', 'keysUnsafe', 'hidden'));\n    });\n    _.forEach(allVariables, variable => {\n      if (!Class.prototype[variable]) {\n        Object.defineProperty(Class.prototype, variable, {get() {\n          return creatingObjectProperties ?\n            creatingObjectProperties[variable] && creatingObjectProperties[variable].value :\n            undefined;\n        }});\n      }\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (angular.active) this._wrapProperties(object);\n\n    if (mount.keysUnsafe) {\n      properties.$data = {value: Object.create(null), configurable: true, enumerable: true};\n    }\n    if (mount.hidden) properties.$hidden = {value: true};\n    if (mount.computedProperties) {\n      _.forEach(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _wrapProperties(object) {\n    _.forEach(object, (value, key) => {\n      const valueKey = '$_' + key;\n      Object.defineProperties(object, {\n        [valueKey]: {value, writable: true},\n        [key]: {\n          get: () => object[valueKey],\n          set: arg => {object[valueKey] = arg; angular.digest();},\n          enumerable: true, configurable: true\n        }\n      });\n    });\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value, pendingPromise;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      let unwatchNow = false;\n      const compute = computeValue.bind(object, prop, propertyStats);\n      if (this._debug) compute.toString = () => {return prop.fullName;};\n      let unwatch = () => {unwatchNow = true;};\n      unwatch = vue.$watch(compute, newValue => {\n        if (object.$destroyed) {\n          unwatch();\n          return;\n        }\n        if (pendingPromise) {\n          if (pendingPromise.cancel) pendingPromise.cancel();\n          pendingPromise = undefined;\n        }\n        if (_.isObject(newValue) && newValue.then) {\n          const promise = newValue.then(finalValue => {\n            if (promise === pendingPromise) update(finalValue);\n            // No need to angular.digest() here, since if we're running under Angular then we expect\n            // promises to be aliased to its $q service, which triggers digest itself.\n          }, error => {\n            if (promise === pendingPromise && update(new ErrorWrapper(error))) throw error;\n          });\n          pendingPromise = promise;\n        } else if (update(newValue)) {\n          angular.digest();\n          if (newValue instanceof ErrorWrapper) throw newValue.error;\n        }\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      // Hack to change order of computed property watchers.  By flipping their ids to be negative,\n      // we ensure that they will settle before all other watchers, and also that children\n      // properties will settle before their parents since values are often aggregated upwards.\n      const watcher = _.last(vue._watchers);\n      watcher.id = -watcher.id;\n\n      function update(newValue) {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        // Freeze the computed value so it can't be accidentally modified by a third party.  Ideally\n        // we'd freeze it before setting it so that Vue wouldn't instrument the object recursively\n        // (since it can't change anyway), but we actually need the instrumentation in case a client\n        // tries to access an inexistent property off a computed pointer to an unfrozen value (e.g.,\n        // a $truss-ified object).  When instrumented, Vue will add a dependency on the unfrozen\n        // value in case the property is later added.  If uninstrumented, the dependency won't be\n        // added and we won't be notified.  And Vue only instruments extensible objects...\n        freeze(newValue);\n        return true;\n      }\n\n      if (unwatchNow) {\n        unwatch();\n      } else {\n        object.$$finalizers.push(unwatch);\n      }\n    });\n    return {\n      enumerable: true, configurable: true,\n      get() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n    if (_.isFunction(object.$finalize)) object.$finalize();\n    Object.defineProperty(\n      object, '$destroyed', {value: true, enumerable: false, configurable: false});\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path, value) {\n    // eslint-disable-next-line no-shadow\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (mount && mount.local) return true;\n    if (this._hasLocalProperties(mount, value)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return false;\n  }\n\n  _hasLocalProperties(mount, value) {\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (!mount.localDescendants || !_.isObject(value)) return false;\n    for (const key in value) {\n      const local =\n        this._hasLocalProperties(mount.children[escapeKey(key)] || mount.children.$, value[key]);\n      if (local) return true;\n    }\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.forEach(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key] || Value.prototype.hasOwnProperty(key) ||\n            /^\\$_/.test(key)) continue;\n        // eslint-disable-next-line no-shadow\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(_.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(_.isFunction(value) || value instanceof Promise)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  /* eslint-disable no-invalid-this */\n  if (this.$destroyed) return;\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  const oldPropertyFrozen = currentPropertyFrozen;\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = oldPropertyFrozen;\n  }\n  /* eslint-enable no-invalid-this */\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        /* eslint-disable no-invalid-this */\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n        /* eslint-enable no-invalid-this */\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    }\n    return wrapConnections(object, descriptor);\n  });\n}\n\nfunction freeze(object) {\n  if (object === null || object === undefined || !_.isObject(object) || Object.isFrozen(object) ||\n      object.$truss) return object;\n  object = Object.freeze(object);\n  if (_.isArray(object)) return _.map(object, value => freeze(value));\n  return _.mapValues(object, value => freeze(value));\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport Reference from './Reference.js';\nimport {escapeKey, escapeKeys, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(ref) {\n    this._ref = ref;\n    this._outcome = undefined;\n    this._values = undefined;\n  }\n\n  get currentValue() {return this._ref.value;}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler(truss.constructor.VERSION === 'dev');\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', undefined, createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(_.noop);  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(_.noop);\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.mapValues(values, value => escapeKeys(value));\n    const numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    if (this._applyLocalWrite(values, method === 'override')) return Promise.resolve();\n    const pathPrefix = extractCommonPathPrefix(values);\n    relativizePaths(pathPrefix, values);\n    if (pathPrefix !== ref.path) ref = new Reference(ref._tree, pathPrefix, ref._annotations);\n    const url = this._rootUrl + pathPrefix;\n    const writeSerial = this._writeSerial;\n    const set = numValues === 1;\n    const operand = set ? values[''] : values;\n    return this._dispatcher.execute('write', set ? 'set' : 'update', ref, operand, () => {\n      if (set) return this._bridge.set(url, operand, writeSerial);\n      return this._bridge.update(url, operand, writeSerial);\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n    updateFunction = wrapPromiseCallback(updateFunction);\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) {\n        return Promise.reject(new Error('Transaction needed too many retries, giving up'));\n      }\n      const txn = new Transaction(ref);\n      let oldValue;\n      // Ensure that Vue's watcher queue gets emptied and computed properties are up to date before\n      // running the updateFunction.\n      return Vue.nextTick().then(() => {\n        oldValue = toFirebaseJson(txn.currentValue);\n        return updateFunction(txn);\n      }).then(() => {\n        if (!_.isEqual(oldValue, toFirebaseJson(txn.currentValue))) return attemptTransaction();\n        if (txn.outcome === 'abort') return txn;  // early return to save time\n        const values = _.mapValues(txn.values, value => escapeKeys(value));\n        switch (txn.outcome) {\n          case 'cancel':\n            break;\n          case 'set':\n            if (this._applyLocalWrite({[ref.path]: values['']})) return Promise.resolve();\n            break;\n          case 'update':\n            checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n            if (this._applyLocalWrite(values)) return Promise.resolve();\n            relativizePaths(ref.path, values);\n            break;\n          default:\n            throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n        }\n        return this._bridge.transaction(\n          this._rootUrl + ref.path, oldValue, values, this._writeSerial\n        ).then(result => {\n          _.forEach(result.snapshots, snapshot => this._integrateSnapshot(snapshot));\n          return result.committed ? txn : attemptTransaction();\n        });\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, undefined, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    let numLocal = 0;\n    _.forEach(values, (value, path) => {\n      const local = this._modeler.isLocal(path, value);\n      if (local) numLocal++;\n      const coupledDescendantPaths =\n        local ? {[path]: true} : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath in coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath && value !== null && value !== undefined) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override, local,\n            createdObjects\n          );\n        }\n        if (!override && !local) this._localWrites[descendantPath] = this._writeSerial;\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n    if (numLocal && numLocal < _.size(values)) {\n      throw new Error('Write on a mix of local and remote tree paths.');\n    }\n    return override || !!numLocal;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    const properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (_.startsWith(name, '$')) descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss) || object.$destroyed) return;\n    this._modeler.destroyObject(object);\n    // Normally we'd only destroy enumerable children, which are the Firebase properties.  However,\n    // clients have the option of creating hidden placeholders, so we need to scan non-enumerable\n    // properties as well.  To distinguish such placeholders from the myriad other non-enumerable\n    // properties (that lead all over tree, e.g. $parent), we check that the property's parent is\n    // ourselves before destroying.\n    for (const key of Object.getOwnPropertyNames(object)) {\n      const child = object[key];\n      if (child && child.$parent === object) this._destroyObject(child);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.forEach(this._localWrites, (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(\n          snap.path, snap.key, snap.value, parent, true, false, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path, true));\n    let ancestorPath = '/';\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const key = unescapeKey(segment);\n      let child = segment ? object.$data[key] : this.root;\n      if (segment) ancestorPath += (ancestorPath === '/' ? '' : '/') + segment;\n      if (child) {\n        if (remoteWrite && this._localWrites[ancestorPath]) return;\n      } else {\n        child = this._plantValue(\n          ancestorPath, key, {}, object, remoteWrite, false, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    }\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, local, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    let object = parent[key];\n    if (!_.isArray(value) && !(local ? _.isPlainObject(value) : _.isObject(value))) {\n      this._destroyObject(object);\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object, object.$hidden);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    // Plant hidden placeholders first, so their computed watchers will have a similar precedence to\n    // the parent object, and the parent object's other children will get computed first.  This can\n    // optimize updates when parts of a complex model are broken out into hidden sub-models, and\n    // shouldn't risk being overwritten by actual Firebase data since that will rarely (never?) be\n    // hidden.\n    if (objectCreated) this._plantPlaceholders(object, path, true, createdObjects);\n    _.forEach(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, local, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, false, createdObjects);\n    } else {\n      _.forEach(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, hidden, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, mount => {\n      if (hidden !== undefined && hidden !== !!mount.hidden) return;\n      const key = unescapeKey(mount.escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, mount.escapedKey), key, mount.placeholder, object, false, false, false,\n          createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = unescapeKey(match.slice(1));\n      return '';\n    });\n    while (object !== undefined && object !== this.root) {\n      const parent =\n        object && object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object && object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(\n            parent, object && object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (object === undefined || object === null) return false;\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (!_.isObject(object) || !object.$truss) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.forEach(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, data, key) {\n    const descriptor = Object.getOwnPropertyDescriptor(data, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in data) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value, hidden) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    let descriptor = this._getFirebasePropertyDescriptor(object, data, key);\n    if (descriptor) {\n      if (hidden) {\n        // Redefine property as hidden after it's been created, since we usually don't know whether\n        // it should be hidden until too late.  This is a one-way deal -- you can't unhide a\n        // property later, but that's fine for our purposes.\n        Object.defineProperty(data, key, {\n          get: descriptor.get, set: descriptor.set, configurable: true, enumerable: false\n        });\n      }\n      if (data[key] === value) return;\n      this._firebasePropertyEditAllowed = true;\n      data[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(data, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(data, key);\n      Object.defineProperty(data, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: !hidden\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    const data = object.hasOwnProperty('$data') ? object.$data : object;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, data, key);\n    this._destroyObject(data[key]);\n    Vue.delete(data, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.forEach(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (_.includes(path, '/')) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.forEach(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function extractCommonPathPrefix(values) {\n  let prefixSegments;\n  _.forEach(values, (value, path) => {\n    const segments = path === '/' ? [''] : splitPath(path, true);\n    if (prefixSegments) {\n      let firstMismatchIndex = 0;\n      const maxIndex = Math.min(prefixSegments.length, segments.length);\n      while (firstMismatchIndex < maxIndex &&\n             prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n        firstMismatchIndex++;\n      }\n      prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n      if (!prefixSegments.length) return false;\n    } else {\n      prefixSegments = segments;\n    }\n  });\n  return prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n}\n\nexport function relativizePaths(rootPath, values) {\n  const offset = rootPath === '/' ? 1 : rootPath.length + 1;\n  _.forEach(_.keys(values), path => {\n    values[path.slice(offset)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (!_.isObject(object)) return object;\n  const result = {};\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) result[escapeKey(key)] = toFirebaseJson(object[key]);\n  }\n  return result;\n}\n\n","/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  _.forEach(['digest', 'watch', 'defineModule', 'debounceDigest'], method => {\n    angularProxy[method] = _.noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(['$provide', function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  }]);\n}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n/* eslint-disable no-use-before-define */\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '') || '/';\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        return mapping;\n      }\n      if (arg === undefined || arg === null) return;\n      escapedKeys.push(escapeKey(arg));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  test(pattern) {\n    return makePathMatcher(pattern).test(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.assign({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (!_.includes(childPath, '/')) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\nexport class Reference extends Handle {\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.assign({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec, this._annotations);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.assign(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.forEach(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.forEach(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.forEach(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport Reference from './Reference.js';\nimport {wrapPromiseCallback} from './utils/promises.js';\nimport {joinPath} from './utils/paths.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'authenticate',\n  'unathenticate', 'certify', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(() => {\n      this._fired = true;\n      this._callback(this._operation);\n    }, this._delay - elapsed);\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target, operand) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._operand = operand;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get targets() {\n    if (this._method !== 'update') return [this._target];\n    return _.map(this._operand, (value, escapedPathFragment) => {\n      return new Reference(\n        this._target._tree, joinPath(this._target.path, escapedPathFragment),\n        this._target._annotations);\n    });\n  }\n  get operand() {return this._operand;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady(ending) {\n    this._ready = true;\n    if (!ending) this._tries = 0;\n    _.forEach(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.forEach(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.includes(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.forEach(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, operand, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target, operand);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target, operand) {\n    return new Operation(operationType, method, target, operand);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      // If the operation ended in the meantime, bail.  This will cause the caller to attempt to\n      // fail the operation, but since it's already ended the call to end() with an error will be a\n      // no-op.\n      if (operation.ended) return;\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return Promise.resolve();\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) {\n      operation._error = error;\n    } else {\n      // In case we're racing with a retry(), wipe out the error.\n      delete operation._error;\n    }\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    operation._markReady(true);\n    if (!operation.error) return Promise.resolve();\n    const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n    return this._bridge.probeError(operation.error).then(() => {\n      if (onFailureCallbacks) {\n        setTimeout(() => {\n          _.forEach(onFailureCallbacks, onFailure => onFailure(operation));\n        }, 0);\n      }\n      return Promise.reject(operation.error);\n    });\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);  // eslint-disable-line no-bitwise\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\nimport Reference from './Reference.js';\n\n\nexport default class MetaTree {\n  constructor(rootUrl, tree, bridge, dispatcher) {\n    this._rootUrl = rootUrl;\n    this._tree = tree;\n    this._dispatcher = dispatcher;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            Vue.set(this, key, Date.now() + this.timeOffset);\n            angular.digest();\n          };\n          update();\n          setInterval(update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    this._auth = {serial: 0};\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  authenticate(token) {\n    this._auth.serial++;\n    return this._dispatcher.execute(\n      'auth', 'authenticate', new Reference(this._tree, '/'), token, () => {\n        return this._bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n      }\n    );\n  }\n\n  unauthenticate() {\n    // Signal user change to null pre-emptively.  This is what the Firebase SDK does as well, since\n    // it lets the app tear down user-required connections before the user is actually deauthed,\n    // which can prevent spurious permission denied errors.\n    this._auth.serial++;\n    return this._handleAuthChange(null).then(approved => {\n      // Bail if auth change callback initiated another authentication, since it will have already\n      // sent the command to the bridge and sending our own now would incorrectly override it.\n      if (!approved) return;\n      return this._dispatcher.execute(\n        'auth', 'unauthenticate', new Reference(this._tree, '/'), undefined, () => {\n          return this._bridge.unauth(this._rootUrl);\n        }\n      );\n    });\n  }\n\n  _handleAuthChange(user) {\n    const authSerial = this._auth.serial;\n    if (this.root.user === user) return Promise.resolve(false);\n    return this._dispatcher.execute('auth', 'certify', new Reference(this._tree, '/'), user, () => {\n      if (this.root.user === user || authSerial !== this._auth.serial) return false;\n      if (user) Object.freeze(user);\n      this.root.user = user;\n      this.root.userid = user && user.uid;\n      angular.digest();\n      return true;\n    });\n  }\n\n  _isAuthChangeStale(user) {\n    return this.root.user === user;\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError, this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.includes(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else if (hasKey) {\n        this._coupler._decoupleSegments(this._segments.concat(snap.key));\n        _.pull(this._keys, snap.key);\n        this._keys.sort();\n        updatedKeys = this._keys;\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.forEach(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError, this,\n        {sync: true});\n      this.listening = true;\n    } else {\n      _.forEach(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.forEach(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of node.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of node.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.forEach(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.forEach(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: undefined, queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    Object.freeze(this);\n    // Set root node after freezing Coupler, otherwise it gets vue-ified too.\n    this._vue.$data.root = new Node(this, '/');\n    this._nodeIndex['/'] = this._root;\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.forEach(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/') || '/'}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/') || '/';\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n  }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (node && node.active) return {[path]: node.active};\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n    this._metaTree = new MetaTree(this._rootUrl, this._tree, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._metaTree.authenticate(token);\n  }\n\n  unauthenticate() {\n    return this._metaTree.unauthenticate();\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = Promise.resolve().then(() => new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    }));\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    const usePreciseDefaults = _.isObject(options && options.precise);\n    let numCallbacks = 0;\n    let oldValueClone;\n    if (usePreciseDefaults) oldValueClone = _.clone(options.precise, options.deep);\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      if (options && options.precise) {\n        const newValueClone = usePreciseDefaults ?\n          (options.deep ?\n            _.defaultsDeep({}, newValue, options.precise) :\n            _.defaults({}, newValue, options.precise)) :\n          _.clone(newValue, options.deep);\n        if (_.isEqual(newValueClone, oldValueClone)) return;\n        oldValueClone = newValueClone;\n      }\n      numCallbacks++;\n      if (!unwatch) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1) return;\n          callbackFn(newValue, oldValue);\n          // No need to digest since under Angular we'll be using $q as Promise.\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    if (options && options.scope) options.scope.$on('$destroy', unwatch);\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup), cleanup);\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  nextTick() {\n    let cleanup;\n    let promise = new Promise((resolve, reject) => {\n      Vue.nextTick(resolve);\n      cleanup = () => {\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promise, cleanup);\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}