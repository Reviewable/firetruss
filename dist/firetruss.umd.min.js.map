{"version":3,"sources":["../src/angularCompatibility.js","../src/utils/paths.js","../src/Bridge.js","../src/utils/utils.js","../src/Connector.js","../src/utils/promises.js","../src/Modeler.js","../src/Tree.js","../src/utils/LruCache.js","../src/Reference.js","../src/utils/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","joinPath","segments","i","list","arguments","length","let","segment","isString","charAt","splice","push","join","splitPath","path","leaveSegmentsEscaped","pathSegments","get","split","map","set","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","error","message","propertyName","hasOwnProperty","e","extra","getUrlRoot","url","k","indexOf","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","flattenRefs","refs","Handle","mapValues","wrapPromiseCallback","callback","Promise","resolve","apply","this","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","result","computeValue","prop","propertyStats","$$touchThis","currentPropertyFrozen","value","startTime","performanceNow","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","object","connections","descriptor","isFunction","fn","angularWatchSuppressed","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","startsWith","absolutePath","allPaths","sortBy","otherPath","relativizePaths","toFirebaseJson","Vue","data","active","forEach","method","LruCacheItem","touch","prototype","timestamp","Date","now","LruCache","maxSize","pruningSize","_items","create","_size","_maxSize","_pruningSize","Math","ceil","has","Boolean","item","_prune","delete","itemsToPrune","toArray","take","variables","prefixMatch","endsWith","pathTemplate","match","freeze","test","_regex","RegExp","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","_path","_value","_valueError","_exists","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","writeSerial","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","isArray","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","clone","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","for","n","stats","stat","above","lines","widths","range","line","max","column","padLeft","SERVER_TIMESTAMP",".sv","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_values","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","$data","defineProperties","__ob__","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","childKeys","childKey","contains","root","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_nodeIndex","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","isSubtreeReady","extractChildSegment","childSegment","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$parent","$key","$path","$$initializers","$$finalizers","$$$trussCheck","Value","defineProperty","$refs","lastIndexOf","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","dep","depend","writable","Modeler","_trie","Class","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","mounts","mount","variable","escapedKey","placeholder","targetMount","createObject","properties","keysUnsafe","_buildComputedPropertyDescriptor","writeAllowed","destroyObject","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","isObject","isExtensible","Function","Transaction","currentValue","outcome","_outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_writeSerial","_localWrites","_localWriteTimestamp","_initialized","_modeler","_integrateSnapshot","_createObject","_fixObject","_completeCreateObject","createdObjects","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","coupledDescendantPaths","offset","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","targetKey","deleted","targetParentPath","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","VERSION","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import LruCache from './LruCache.js';\nimport _ from 'lodash';\n\n\nconst pathSegments = new LruCache(1000);\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function splitPath(path, leaveSegmentsEscaped) {\n  const key = (leaveSegmentsEscaped ? 'esc:' : '') + path;\n  let segments = pathSegments.get(key);\n  if (!segments) {\n    segments = path.split('/');\n    if (!leaveSegmentsEscaped) segments = _.map(segments, unescapeKey);\n    pathSegments.set(key, segments);\n  }\n  return segments;\n}\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils/paths.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage(items) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item in items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {splitPath} from './utils/paths.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._values = new Vue({data: _.mapValues(connections, _.constant(undefined))});\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {}\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._values.$destroy();\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: true, get: () => this._values.$data[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      if (!this._scope.__ob__) Object.defineProperties(this._scope, dataProperties);\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._values.$data, key, subScope);\n          if (this._scope.__ob__) Vue.set(this._scope, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._values.$data[key] !== value) {\n      Vue.set(this._values.$data, key, value);\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._values.$data[key]) {\n      Vue.set(this._values.$data, key, {});\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, this._values.$data[key]);\n      angular.digest();\n    }\n    const subScope = this._values.$data[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    let object;\n    for (const segment of splitPath(this._vue.descriptors[key].path)) {\n      object = segment ? object[segment] : this._tree.root;\n    }\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","export function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './utils/stats.js';\nimport {makePathMatcher, joinPath, splitPath, escapeKey, unescapeKey} from './utils/paths.js';\nimport {isTrussEqual} from './utils/utils.js';\nimport {promiseFinally} from './utils/promises.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {\n  $truss: true, $parent: true, $key: true, $path: true, $ref: true,\n  $$touchThis: true, $$initializers: true, $$finalizers: true,\n  $$$trussCheck: true,\n  __ob__: true\n};\n\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor() {\n    this._trie = {Class: Value};\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(targetMount, {\n        Class, matcher, computedProperties, escapedKey, placeholder: mount.placeholder,\n        local: mount.local\n      });\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    const mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      const unwatch = vue.$watch(computeValue.bind(object, prop, propertyStats), newValue => {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        angular.digest();\n        if (newValue instanceof ErrorWrapper) throw newValue.error;\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      object.$$finalizers.push(unwatch);\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key]) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, unescapeKey, joinPath, splitPath} from './utils/paths.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, tree) {\n    this._path = path;\n    this._tree = tree;\n  }\n\n  get currentValue() {return this._tree.getObject(this._path);}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler();\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    const createdObjects = [];\n    this._plantPlaceholders(this.root, '/', createdObjects);\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, ref.path), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.clone(values);\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const txn = new Transaction();\n      try {\n        updateFunction(txn);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      const values = _.clone(txn.values);\n      const oldValue = toFirebaseJson(this.getObject(ref.path));\n      switch (txn.outcome) {\n        case 'abort': return;\n        case 'cancel':\n          break;\n        case 'set':\n          if (this._modeler.isLocal(ref.path)) {\n            throw new Error(`Commit in local subtree: ${ref.path}`);\n          }\n          this._applyLocalWrite({[ref.path]: values['']});\n          break;\n        case 'update':\n          checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n          _(values).keys().each(path => {\n            if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n          });\n          this._applyLocalWrite(values);\n          relativizePaths(ref.path, values);\n          break;\n        default:\n          throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n      }\n      return this._bridge.transaction(\n        this._rootUrl + ref.path, oldValue, values\n      ).then(committed => {\n        if (!committed) return attemptTransaction();\n        return txn;\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    const createdObjects = [];\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? [path] : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath of coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath) {\n          for (const segment of splitPath(subPath)) {\n            subValue = subValue[segment];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = _.last(splitPath(descendantPath));\n          this._plantValue(\n            descendantPath, key, subValue,\n            this._scaffoldAncestors(descendantPath, false, createdObjects), false, override,\n            createdObjects\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n    for (const object of createdObjects) this._completeCreateObject(object);\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : splitPath(path, true);\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _fixObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(_.keys(this._localWrites), (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const createdObjects = [];\n      const parent = this._scaffoldAncestors(snap.path, true, createdObjects);\n      if (parent) {\n        this._plantValue(snap.path, snap.key, snap.value, parent, true, false, createdObjects);\n      }\n      for (const object of createdObjects) this._completeCreateObject(object);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite, createdObjects) {\n    let object;\n    const segments = _.dropRight(splitPath(path));\n    _.each(segments, (segment, i) => {\n      let child = segment ? object[segment] : this.root;\n      if (!child) {\n        const ancestorPath = segments.slice(0, i + 1).join('/');\n        child = this._plantValue(\n          ancestorPath, segment, {}, object, remoteWrite, false, createdObjects);\n        if (!child) return;\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path || '/']) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !(_.isObject(value) && value.constructor === Object)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    let object = parent[key];\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override, createdObjects\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path, createdObjects);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path, createdObjects) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(\n          joinPath(path, escapedKey), key, placeholder, object, false, false, createdObjects);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = splitPath(localWritePath, true);\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    let targetKey;\n    const targetParentPath = targetPath.replace(/\\/[^/]+$/, match => {\n      targetKey = match.slice(1);\n      return '';\n    });\n    while (object && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetParentPath);\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(parent, object.$key || object === targetObject && targetKey);\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(path) {\n    const segments = splitPath(path);\n    let object;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: true\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object === 'object') {\n    const result = {};\n    for (const key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      result[escapeKey(key)] = toFirebaseJson(object[key]);\n    }\n    return result;\n  } else {\n    return object;\n  }\n}\n\n","import _ from 'lodash';\n\n\nclass LruCacheItem {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.touch();\n  }\n\n  touch() {\n    this.timestamp = Date.now();\n  }\n}\n\n\nexport default class LruCache {\n  constructor(maxSize, pruningSize) {\n    this._items = Object.create(null);\n    this._size = 0;\n    this._maxSize = maxSize;\n    this._pruningSize = pruningSize || Math.ceil(maxSize * 0.10);\n  }\n\n  has(key) {\n    return Boolean(this._items[key]);\n  }\n\n  get(key) {\n    const item = this._items[key];\n    if (!item) return;\n    item.touch();\n    return item.value;\n  }\n\n  set(key, value) {\n    const item = this._items[key];\n    if (item) {\n      item.value = value;\n    } else {\n      if (this._size >= this._maxSize) this._prune();\n      this._items[key] = new LruCacheItem(key, value);\n      this._size += 1;\n    }\n  }\n\n  delete(key) {\n    const item = this._items[key];\n    if (!item) return;\n    delete this._items[key];\n    this._size -= 1;\n  }\n\n  _prune() {\n    const itemsToPrune =\n      _(this._items).toArray().sortBy('timestamp').take(this._pruningSize).value();\n    for (const item of itemsToPrune) this.delete(item.key);\n  }\n}\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils/paths.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils/promises.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady() {\n    this._ready = true;\n    this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    this.markReady(operation);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","const ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport {splitPath} from './utils/paths.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = splitPath(query.path, true);\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path, parent) {\n    this._coupler = coupler;\n    this.path = path;\n    this.parent = parent;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    this._nodeIndex = Object.create(null);\n    this._nodeIndex['/'] = this._root;\n    Object.freeze(this);\n  }\n\n  get _root() {\n    return this._vue.$data.root;\n  }\n\n  get _queryHandlers() {\n    return this._vue.$data.queryHandlers;\n  }\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(splitPath(path, true), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`, node);\n        Vue.set(node.children, segment, child);\n        this._nodeIndex[child.path] = child;\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(splitPath(path, true), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/')}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n        node.ready = undefined;\n        delete this._nodeIndex[node.path];\n      }\n      const path = segments.join('/');\n      this._prunePath(path, this.findCoupledDescendantPaths(path));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = splitPath(path, true);\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(path) {\n    let node;\n    for (const segment of splitPath(path, true)) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    let node, childSegment;\n    function extractChildSegment(match) {\n      childSegment = match.slice(1);\n      return '';\n    }\n    while (!(node = this._nodeIndex[path])) {\n      path = path.replace(/\\/[^/]*$/, extractChildSegment) || '/';\n    }\n    if (childSegment) void node.children;  // state an interest in the closest ancestor's children\n    while (node) {\n      if (node.ready) return true;\n      node = node.parent;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './utils/stats.js';\nimport {escapeKey, unescapeKey} from './utils/paths.js';\nimport {wrapPromiseCallback, promiseCancel, promiseFinally} from './utils/promises.js';\nimport {SERVER_TIMESTAMP} from './utils/utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    });\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}