{"version":3,"sources":["../src/angularCompatibility.js","../src/utils.js","../src/Bridge.js","../src/Connector.js","../src/Modeler.js","../src/Tree.js","../src/Reference.js","../src/stats.js","../node_modules/performance-now/lib/performance-now.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../src/Truss.js"],"names":["initAngular","const","module","window","angular","angularProxy","digest","bareDigest","watch","Error","defineModule","Truss","constant","debounceDigest","wait","debouncedDigest","_","debounce","vue","digestRequest","lastDigestRequest","digestInProgress","config","$provide","decorator","$delegate","$exceptionHandler","rootScope","$watch","bind","proto","Object","getPrototypeOf","angularDigest","$digest","original","call","last","_watchers","id","Infinity","noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","wrapPromiseCallback","callback","Promise","resolve","apply","this","arguments","e","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","propertyName","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","onFinally","result","error","joinPath","segments","i","list","length","let","segment","isString","charAt","splice","push","join","isTrussEqual","a","b","isEqual","isTrussValueEqual","undefined","$truss","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","message","hasOwnProperty","extra","getUrlRoot","url","k","indexOf","flattenRefs","refs","Handle","mapValues","computeValue","prop","propertyStats","$$touchThis","currentPropertyFrozen","value","startTime","performanceNow","get","ErrorWrapper","runtime","numRecomputes","FrozenWrapper","wrapConnections","object","connections","descriptor","isFunction","fn","angularWatchSuppressed","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","path","startsWith","absolutePath","allPaths","map","sortBy","otherPath","relativizePaths","toFirebaseJson","Vue","data","active","forEach","method","SERVER_TIMESTAMP","freeze",".sv","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","prototype","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","_path","_value","_valueError","_exists","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","console","log","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","item","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","set","writeSerial","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","isArray","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","clone","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","StatItem","numUpdates","add","runtimePerRecompute","toLogParts","totals","toFixed","Stats","_items","for","n","stats","stat","take","above","lines","widths","range","line","max","column","padLeft","getNanoSeconds","hrtime","loadTime","performance","now","exports","process","hr","Date","getTime","Connector","scope","_scope","_connections","_method","_subConnectors","_disconnects","_angularUnwatches","_data","_values","_vue","descriptors","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","ignored","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","dataProperties","configurable","enumerable","$data","defineProperties","__ob__","connectionStats","getter","_computeConnection","_updateComputedConnection","angularWatch","immediate","newDescriptor","oldDescriptor","descriptorChanged","has","_updateConnections","updateFn","_updateRefValue","connectReference","_updateQueryValue","connectQuery","subScope","subRefs","subConnector","subReady","delete","childKeys","childKey","contains","split","root","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","Math","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","_handleAuthChange","_connectInfoProperty","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","pathOrSegments","isSubtreeReady","creatingObjectProperties","RESERVED_VALUE_PROPERTY_NAMES","$parent","$key","$path","$$initializers","$$finalizers","$$$trussCheck","Value","defineProperty","$refs","lastIndexOf","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$freezeComputedProperty","isBoolean","$set","$update","$override","$commit","dep","depend","writable","Modeler","_trie","Class","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","mounts","mount","variable","escapedKey","placeholder","targetMount","createObject","properties","keysUnsafe","create","_buildComputedPropertyDescriptor","writeAllowed","destroyObject","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","isObject","isExtensible","Function","Transaction","currentValue","outcome","_outcome","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_writeSerial","_localWrites","_localWriteTimestamp","_initialized","_modeler","_integrateSnapshot","_prune","_createObject","_fixObject","_completeCreateObject","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","coupledDescendantPaths","offset","descendantPath","subValue","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","createdObjects","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","deleted","targetSegments","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","VERSION","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","deep","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","staticAccessors","computedPropertyStats","logComputedPropertyStats","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"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","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nconst vue = new Vue({data: {digestRequest: 0}});\nlet lastDigestRequest = 0, digestInProgress = false;\nconst bareDigest = function() {\n  if (vue.digestRequest > lastDigestRequest) return;\n  vue.digestRequest = lastDigestRequest + 1;\n};\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular\n};\n\nif (angularProxy.active) {\n  initAngular();\n} else {\n  ['digest', 'watch', 'defineModule', 'debounceDigest'].forEach(method => {\n    angularProxy[method] = noop;\n  });\n}\n\nfunction initAngular() {\n  const module = window.angular.module('firetruss', []);\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  angularProxy.defineModule = function(Truss) {\n    module.constant('Truss', Truss);\n  };\n  angularProxy.debounceDigest = function(wait) {\n    if (wait) {\n      const debouncedDigest = _.debounce(bareDigest, wait);\n      angularProxy.digest = function() {\n        if (vue.digestRequest > lastDigestRequest) return;\n        if (digestInProgress) bareDigest(); else debouncedDigest();\n      };\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  };\n\n  module.config(function($provide) {\n    $provide.decorator('$rootScope', ['$delegate', '$exceptionHandler',\n      function($delegate, $exceptionHandler) {\n        const rootScope = $delegate;\n        angularProxy.watch = rootScope.$watch.bind(rootScope);\n        const proto = Object.getPrototypeOf(rootScope);\n        const angularDigest = proto.$digest;\n        proto.$digest = bareDigest;\n        proto.$digest.original = angularDigest;\n        vue.$watch(() => vue.digestRequest, () => {\n          if (vue.digestRequest > lastDigestRequest) {\n            digestInProgress = true;\n            rootScope.$digest.original.call(rootScope);\n            lastDigestRequest = vue.digestRequest = vue.digestRequest + 1;\n          } else {\n            digestInProgress = false;\n          }\n        });\n        _.last(vue._watchers).id = Infinity;  // make sure watcher is scheduled last\n        return rootScope;\n      }\n    ]);\n  });\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\nexport function isTrussEqual(a, b) {\n  return _.isEqual(a, b, isTrussValueEqual);\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a === b || a === undefined || a === null || b === undefined || b === null ||\n      a.$truss || b.$truss) return a === b;\n  if (a.isEqual) return a.isEqual(b);\n}\n\n\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage(items) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item in items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './stats.js';\nimport {isTrussEqual} from './utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n\n    this._subConnectors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._data = {};\n    this._values = new Vue({data: _.mapValues(connections, _.constant(undefined))});\n    this._vue = new Vue({data: {\n      descriptors: {},\n      refs: refs || {}\n    }});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._connections, (ignored, key) => {\n      const descriptor = this._vue.descriptors[key];\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._vue.refs;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._values.$destroy();\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    const dataProperties = _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: true, get: () => this._values.$data[key]\n    }));\n    Object.defineProperties(this._data, dataProperties);\n    if (this._scope) {\n      for (const key in this._connections) {\n        if (key in this._scope) {\n          throw new Error(`Property already defined on connection target: ${key}`);\n        }\n      }\n      if (!this._scope.__ob__) Object.defineProperties(this._scope, dataProperties);\n    }\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const connectionStats = stats.for(`connection.at.${key}`);\n    const getter = this._computeConnection.bind(this, fn, connectionStats);\n    const update = this._updateComputedConnection.bind(this, key, fn, connectionStats);\n    const angularWatch = angular.active && !fn.angularWatchSuppressed;\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angularWatch});\n    if (angularWatch) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn, connectionStats) {\n    const startTime = performanceNow();\n    try {\n      return flattenRefs(fn.call(this._scope));\n    } finally {\n      connectionStats.runtime += performanceNow() - startTime;\n      connectionStats.numRecomputes += 1;\n    }\n  }\n\n  _updateComputedConnection(key, value, connectionStats) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._vue.descriptors[key];\n    const descriptorChanged = !isTrussEqual(oldDescriptor, newDescriptor);\n    if (!descriptorChanged) return;\n    if (connectionStats && descriptorChanged) connectionStats.numUpdates += 1;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    Vue.set(this._vue.descriptors, key, newDescriptor);\n    angular.digest();\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    Vue.set(this._vue.descriptors, key, descriptor);\n    angular.digest();\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateRefValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      Vue.set(this._vue.refs, key, descriptor);\n      const updateFn = this._updateQueryValue.bind(this, key);\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      Vue.set(this._vue.refs, key, subRefs);\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n      // actually takes place after we've captured the unwatch function, in case the subConnector\n      // is ready immediately.\n      const unwatch = this._disconnects[key] = this._tree.truss.watch(\n        () => subConnector.ready,\n        subReady => {\n          if (!subReady) return;\n          unwatch();\n          delete this._disconnects[key];\n          Vue.set(this._values.$data, key, subScope);\n          if (this._scope.__ob__) Vue.set(this._scope, key, subScope);\n          angular.digest();\n        }\n      );\n    }\n  }\n\n  _disconnect(key) {\n    Vue.delete(this._vue.refs, key);\n    this._updateRefValue(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    Vue.delete(this._vue.descriptors, key);\n    angular.digest();\n  }\n\n  _updateRefValue(key, value) {\n    if (this._values.$data[key] !== value) {\n      Vue.set(this._values.$data, key, value);\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateQueryValue(key, childKeys) {\n    if (!this._values.$data[key]) {\n      Vue.set(this._values.$data, key, {});\n      if (this._scope && this._scope.__ob__) Vue.set(this._scope, key, this._values.$data[key]);\n      angular.digest();\n    }\n    const subScope = this._values.$data[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        angular.digest();\n      }\n    }\n    let object;\n    for (const segment of this._vue.descriptors[key].path.split('/')) {\n      object = segment ? object[segment] : this._tree.root;\n    }\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      angular.digest();\n    }\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","import {Reference, Handle} from './Reference.js';\nimport angular from './angularCompatibility.js';\nimport stats from './stats.js';\nimport {\n  makePathMatcher, joinPath, isTrussEqual, escapeKey, unescapeKey, promiseFinally\n} from './utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {\n  $truss: true, $parent: true, $key: true, $path: true, $ref: true,\n  $$touchThis: true, $$initializers: true, $$finalizers: true,\n  $$$trussCheck: true,\n  __ob__: true\n};\n\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\nlet currentPropertyFrozen;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $freezeComputedProperty() {\n    if (!_.isBoolean(currentPropertyFrozen)) {\n      throw new Error('Cannot freeze a computed property outside of its getter function');\n    }\n    currentPropertyFrozen = true;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.__ob__) {\n      this.__ob__.dep.depend();\n    } else if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nclass FrozenWrapper {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n\nexport default class Modeler {\n  constructor() {\n    this._trie = {Class: Value};\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(targetMount, {\n        Class, matcher, computedProperties, escapedKey, placeholder: mount.placeholder,\n        local: mount.local\n      });\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    let mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    const propertyStats = stats.for(prop.fullName);\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      const unwatch = vue.$watch(computeValue.bind(object, prop, propertyStats), newValue => {\n        if (newValue instanceof FrozenWrapper) {\n          newValue = newValue.value;\n          unwatch();\n          _.pull(object.$$finalizers, unwatch);\n        }\n        if (isTrussEqual(value, newValue)) return;\n        // console.log('updating', object.$key, prop.fullName, 'from', value, 'to', newValue);\n        propertyStats.numUpdates += 1;\n        writeAllowed = true;\n        object[prop.name] = newValue;\n        writeAllowed = false;\n        angular.digest();\n        if (newValue instanceof ErrorWrapper) throw newValue.error;\n      }, {immediate: true});  // use immediate:true since watcher will run computeValue anyway\n      object.$$finalizers.push(unwatch);\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key]) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n}\n\n\nfunction computeValue(prop, propertyStats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  currentPropertyFrozen = false;\n  const startTime = performanceNow();\n  let value;\n  try {\n    try {\n      value = prop.get.call(this);\n    } catch (e) {\n      value = new ErrorWrapper(e);\n    } finally {\n      propertyStats.runtime += performanceNow() - startTime;\n      propertyStats.numRecomputes += 1;\n    }\n    if (currentPropertyFrozen) value = new FrozenWrapper(value);\n    return value;\n  } finally {\n    currentPropertyFrozen = undefined;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      const fn = function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n      fn.angularWatchSuppressed = true;\n      return fn;\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n","import angular from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, unescapeKey, joinPath, SERVER_TIMESTAMP} from './utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, tree) {\n    this._path = path;\n    this._tree = tree;\n  }\n\n  get currentValue() {return this._tree.getObject(this._path);}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler();\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n      angular.digest();\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    this._plantPlaceholders(this.root, '/');\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      const segments = _(ref.path).split('/').map(segment => unescapeKey(segment)).value();\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, segments), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.clone(values);\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const txn = new Transaction();\n      try {\n        updateFunction(txn);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      const values = _.clone(txn.values);\n      const oldValue = toFirebaseJson(this.getObject(ref.path));\n      switch (txn.outcome) {\n        case 'abort': return;\n        case 'cancel':\n          break;\n        case 'set':\n          if (this._modeler.isLocal(ref.path)) {\n            throw new Error(`Commit in local subtree: ${ref.path}`);\n          }\n          this._applyLocalWrite({[ref.path]: values['']});\n          break;\n        case 'update':\n          checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n          _(values).keys().each(path => {\n            if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n          });\n          this._applyLocalWrite(values);\n          relativizePaths(ref.path, values);\n          break;\n        default:\n          throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n      }\n      return this._bridge.transaction(\n        this._rootUrl + ref.path, oldValue, values\n      ).then(committed => {\n        if (!committed) return attemptTransaction();\n        return txn;\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? [path] : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath of coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath) {\n          const segments = subPath.split('/');\n          for (const segment of segments) {\n            subValue = subValue[unescapeKey(segment)];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(descendantPath);\n        } else {\n          const key = unescapeKey(_.last(descendantPath.split('/')));\n          this._plantValue(\n            descendantPath, key, subValue, this._scaffoldAncestors(descendantPath), false,\n            override\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : path.split('/');\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _completeCreateObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(_.keys(this._localWrites), (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const parent = this._scaffoldAncestors(snap.path, true);\n      if (parent) this._plantValue(snap.path, snap.key, snap.value, parent, true, false);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite) {\n    let object;\n    const segments = _(path).split('/').dropRight().value();\n    _.each(segments, (segment, i) => {\n      const childKey = unescapeKey(segment);\n      let child = childKey ? object[childKey] : this.root;\n      if (!child) {\n        const ancestorPath = segments.slice(0, i + 1).join('/');\n        if (remoteWrite && this._localWrites[ancestorPath || '/']) return;\n        child = this._plantValue(ancestorPath, childKey, {}, object);\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override, createdObjects) {\n    const top = !createdObjects;\n    createdObjects = createdObjects || [];\n    if (remoteWrite && (value === null || value === undefined)) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path]) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !(_.isObject(value) && value.constructor === Object)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    let object = parent[key];\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object);\n      this._fixObject(object);\n      createdObjects.push(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override\n      );\n    });\n    if (objectCreated) {\n      this._plantPlaceholders(object, path);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    if (top) {\n      for (const object of createdObjects) this._completeCreateObject(object);\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(joinPath(path, escapedKey), key, placeholder, object);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = localWritePath.split('/');\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    const targetSegments = _(targetPath).split('/').map(unescapeKey).value();\n    while (object && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetSegments.slice(0, -1));\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(\n            parent, object.$key || object === targetObject && _.last(targetSegments));\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(pathOrSegments) {\n    let object;\n    const segments = _.isString(pathOrSegments) ?\n      _(pathOrSegments).split('/').map(unescapeKey).value() : pathOrSegments;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: true\n      });\n    }\n    angular.digest();\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n    angular.digest();\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object === 'object') {\n    const result = {};\n    for (const key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      result[escapeKey(key)] = toFirebaseJson(object[key]);\n    }\n    return result;\n  } else {\n    return object;\n  }\n}\n\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = this._pathPrefix + (escapedKeys.length ? `/${escapedKeys.join('/')}` : '');\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString() &&\n      _.isEqual(this._annotations, that._annotations);\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\n\n\nclass StatItem {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n\n  add(item) {\n    this.runtime += item.runtime;\n    this.numUpdates += item.numUpdates;\n    this.numRecomputes += item.numRecomputes;\n  }\n\n  get runtimePerRecompute() {\n    return this.numRecomputes ? this.runtime / this.numRecomputes : 0;\n  }\n\n  toLogParts(totals) {\n    return [\n      `${this.name}:`, ` ${(this.runtime / 1000).toFixed(2)}s`,\n      `(${(this.runtime / totals.runtime * 100).toFixed(1)}%)`,\n      ` ${this.numUpdates} upd /`, `${this.numRecomputes} runs`,\n      `(${(this.numUpdates / this.numRecomputes * 100).toFixed(1)}%)`,\n      ` ${this.runtimePerRecompute.toFixed(2)}ms / run`\n    ];\n  }\n}\n\nclass Stats {\n  constructor() {\n    this._items = {};\n  }\n\n  for(name) {\n    if (!this._items[name]) this._items[name] = new StatItem(name);\n    return this._items[name];\n  }\n\n  get list() {\n    return _(this._items).values().sortBy(item => -item.runtime).value();\n  }\n\n  log(n = 10) {\n    let stats = this.list;\n    if (!stats.length) return;\n    const totals = new StatItem('=== Total');\n    _.each(stats, stat => {totals.add(stat);});\n    stats = _.take(stats, n);\n    const above = new StatItem('--- Above');\n    _.each(stats, stat => {above.add(stat);});\n    const lines = _.map(stats, item => item.toLogParts(totals));\n    lines.push(above.toLogParts(totals));\n    lines.push(totals.toLogParts(totals));\n    const widths = _.map(_.range(lines[0].length), i => _(lines).map(line => line[i].length).max());\n    _.each(lines, line => {\n      console.log(_.map(line, (column, i) => _.padLeft(column, widths[i])).join(' '));\n    });\n  }\n}\n\nexport default new Stats();\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady() {\n    this._ready = true;\n    this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    this.markReady(operation);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","'use strict';\n\nconst ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angular from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angular.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n    angular.digest();\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n      angular.digest();\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = query.path.split('/');\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angular.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angular.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path) {\n    this._coupler = coupler;\n    this.path = path;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angular.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angular.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angular.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    Object.freeze(this);\n  }\n\n  get _root() {return this._vue.root;}\n  get _queryHandlers() {return this._vue.queryHandlers;}\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(path.split('/'), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`);\n        Vue.set(node.children, segment, child);\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(path.split('/'), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/')}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n      }\n      this._prunePath(segments.join('/'), this.findCoupledDescendantPaths(segments));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(pathOrSegments) {\n    const segments = _.isString(pathOrSegments) ? pathOrSegments.split('/') : pathOrSegments;\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.ready) return true;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angular from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport stats from './stats.js';\nimport {\n  escapeKey, unescapeKey, wrapPromiseCallback, promiseCancel, promiseFinally,\n  SERVER_TIMESTAMP\n} from './utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {angular.digest(); callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    });\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angular.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angular.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {\n    return stats.list;\n  }\n\n  static logComputedPropertyStats(n = 10) {\n    return stats.log(n);\n  }\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angular.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangular.defineModule(Truss);\n"]}