{"version":3,"sources":["../src/angularCompatibility.js","../src/utils.js","../src/Bridge.js","../src/Connector.js","../src/Modeler.js","../src/Tree.js","../src/Reference.js","../src/Dispatcher.js","../src/KeyGenerator.js","../src/MetaTree.js","../src/Coupler.js","../node_modules/performance-now/lib/performance-now.js","../src/Truss.js"],"names":["noop","escapeKey","key","toString","replace","char","charCodeAt","unescapeKey","code","String","fromCharCode","parseInt","slice","wrapPromiseCallback","callback","Promise","resolve","apply","this","arguments","e","reject","promiseCancel","promise","cancel","promiseFinally","propagatePromiseProperty","propertyName","const","originalThen","then","originalCatch","catch","onResolved","onRejected","derivedPromise","call","onFinally","result","error","joinPath","segments","i","list","length","let","segment","_","isString","charAt","splice","push","join","makePathMatcher","pattern","matcher","pathMatchers","PathMatcher","size","maxNumPathMatchers","keys","errorFromJson","json","params","Error","message","hasOwnProperty","extra","getUrlRoot","url","k","indexOf","flattenRefs","refs","Handle","mapValues","computeValue","prop","stats","$$touchThis","startTime","performanceNow","get","ErrorWrapper","runtime","numRecomputes","wrapConnections","object","connections","descriptor","isFunction","isTrussValueEqual","a","b","$truss","checkUpdateHasOnlyDescendantsWithNoOverlap","rootPath","values","each","path","startsWith","absolutePath","allPaths","map","sortBy","value","otherPath","relativizePaths","toFirebaseJson","digestRequested","bareDigest","angularProxy","active","window","angular","debounceDigest","wait","digest","debounce","forEach","method","watch","module","run","$rootScope","$evalAsync","$watch","bind","defineModule","Truss","constant","SERVER_TIMESTAMP","Object","freeze",".sv","variables","prefixMatch","endsWith","pathTemplate","match","test","_regex","RegExp","prototype","lastIndex","exec","bindings","MIN_WORKER_VERSION","Snapshot","ref","valueError","exists","_path","_value","_valueError","_exists","undefined","prototypeAccessors","_checkValue","_key","Bridge","webWorker","_idCounter","_deferreds","_suspended","_servers","_callbacks","_log","_simulatedTokenGenerator","_maxSimulationDuration","_simulatedCallFilter","_inboundMessages","_outboundMessages","_flushMessageQueue","_port","port","_shared","onmessage","_receive","addEventListener","_send","msg","setInterval","init","items","storage","localStorage","sessionStorage","getItem","response","workerVersion","version","minVersion","sufficient","suspend","suspended","_receiveMessages","debugPermissionDeniedErrors","simulatedTokenGenerator","maxSimulationDuration","callFilter","enableLogging","fn","console","log","id","oneWay","this$1","deferred","sent","resolveSent","postMessage","event","concat","data","messages","bindExposedFunction","name","args","Array","probeError","toLowerCase","_simulateCall","securityTrace","permissionDeniedDetails","props","simulatedCalls","spec","newValue","auth","getAuth","simulationPromise","uid","token","all","securityTraces","every","trace","filter","timeoutPromise","setTimeout","race","updateLocalStorage","item","removeItem","setItem","trackServer","rootUrl","server","authListeners","authCallbackId","_registerCallback","_authCallback","callbackId","listener","onAuth","context","offAuth","authWithCustomToken","authToken","options","unauth","set","writeSerial","update","on","listenerKey","eventType","snapshotCallback","cancelCallback","handle","_onCallback","__callbackIds","off","idsToDeregister","_findAndRemoveCallbackId","i$1","list$1","_nullifyCallback","_deregisterCallback","snapshotJson","transaction","oldValue","relativeUpdates","onDisconnect","bounceConnection","predicate","EMPTY_ANNOTATIONS","tree","annotations","_tree","_annotations","$ref","_pathPrefix","parent","Reference","child","children","escapedKeys","arg","isArray","mapping","subPath","rest","subRef","subMapping","isEmpty","peek","truss","isEqual","that","belongsTo","Query","super","_spec","_copyAndValidateSpec","queryTerms","encodeURIComponent","JSON","stringify","_string","prototypeAccessors$1","ready","isQueryReady","constraints","annotate","extend","by","some","clause","clone","childPath","prototypeAccessors$2","isReferenceReady","getObject","query","obj","override","commit","updateFunction","Connector","scope","_scope","_connections","_method","_refs","_subConnectors","_currentDescriptors","_disconnects","_angularUnwatches","_vue","Vue","destroy","seal","_linkScopeProperties","_bindComputedConnection","_connect","$on","$id","at","_unlinkScopeProperties","unwatch","_disconnect","$destroy","defineProperties","configurable","enumerable","getter","_computeConnection","_updateComputedConnection","immediate","deep","newDescriptor","oldDescriptor","has","_updateConnections","updateFn","_updateScopeRef","connectReference","_updateScopeQuery","connectQuery","subScope","subRefs","subConnector","subReady","$data","childKeys","changed","childKey","contains","delete","split","root","INTERCEPT_KEYS","EMPTY_ARRAY","SlowHandle","operation","delay","_operation","_delay","_callback","_fired","initiate","elapsed","Date","now","_startTimestamp","_timeoutId","clearTimeout","Operation","type","target","_type","_target","_ready","_running","_ended","_tries","_slowHandles","running","ended","tries","_error","onSlow","_setRunning","_setEnded","_markReady","_clearReady","_incrementTries","Dispatcher","bridge","_bridge","intercept","interceptKey","callbacks","badCallbackKeys","difference","wrappedCallbacks","onBefore","_addCallback","onAfter","onError","onFailure","_removeCallbacks","stage","_getCallbacksKey","wrappedCallback","_removeCallback","pull","_getCallbacks","operationType","execute","executor","createOperation","begin","executeWithRetries","_retryOrEnd","end","markReady","clearReady","retry","results","retrying","_afterEnd","onFailureCallbacks","ALPHABET","KeyGenerator","_lastUniqueKeyTime","_lastRandomValues","generateUniqueKey","chars","prefix","Math","floor","random","MetaTree","_rootUrl","$root","connected","timeOffset","user","userid","nowAtInterval","intervalMillis","angularCompatibility","_handleAuthChange","_connectInfoProperty","property","attribute","propertyUrl","snap","QueryHandler","coupler","_coupler","_query","_listeners","_keys","_url","_segments","_listening","attach","keysCallback","_listen","detach","findIndex","_handleSnapshot","_handleError","sync","_decoupleSegments","updatedKeys","_updateKeys","_applySnapshot","_dispatcher","sort","_coupleSegments","hasKey","Node","operations","queryCount","listening","count","listen","skip","op","unlisten","_forAllDescendants","node","isTrunkCoupled","iteratee","collectCoupledDescendantPaths","paths","Coupler","dispatcher","applySnapshot","prunePath","_prunePath","queryHandlers","_root","_queryHandlers","queryHandler","couple","superseded","decouple","ancestors","findCoupledDescendantPaths","subscribe","unsubscribe","pathOrSegments","isSubtreeReady","creatingObjectProperties","getNanoSeconds","hrtime","loadTime","performance","exports","process","hr","getTime","RESERVED_VALUE_PROPERTY_NAMES","$parent","$key","$path","$$initializers","$$finalizers","$$$trussCheck","__ob__","computedPropertyStats","Value","defineProperty","$refs","lastIndexOf","$empty","$keys","$values","$meta","meta","$now","$ready","$overridden","$intercept","actionType","unintercept","uninterceptAndRemoveFinalizer","$connect","connector","connect","originalDestroy","$peek","subjectFn","callbackFn","unwatchAndRemoveFinalizer","$when","expression","when","$set","$update","$override","$commit","writable","ComputedPropertyStats","numUpdates","Modeler","_trie","Class","classes","rootAcceptable","isPlainObject","$trussMount","$$trussMount","uniq","_mountClass","_decorateTrie","_getMount","scaffold","$","_findMount","local","localDescendants","_augmentClass","computedProperties","proto","constructor","getOwnPropertyNames","getOwnPropertyDescriptor","fullName","getPrototypeOf","mounts","mount","variable","escapedKey","placeholder","targetMount","createObject","properties","keysUnsafe","create","_buildComputedPropertyDescriptor","writeAllowed","vue","destroyObject","isPlaceholder","isLocal","forEachPlaceholderChild","checkVueObject","checkedObjects","top","includes","trussCode","isObject","isExtensible","Function","staticAccessors","Transaction","currentValue","outcome","_outcome","_values","_setOutcome","abort","","Tree","_truss","_firebasePropertyEditAllowed","_writeSerial","_localWrites","_localWriteTimestamp","_initialized","_modeler","_integrateSnapshot","_prune","_createObject","_fixObject","_completeCreateObject","_plantPlaceholders","valueCallback","_checkHandle","_disconnectReference","_disconnected","_coupled","_disconnectQuery","numValues","_applyLocalWrite","_extractCommonPathPrefix","attemptTransaction","txn","committed","coupledDescendantPaths","offset","descendantPath","subValue","last","_plantValue","_scaffoldAncestors","prefixSegments","firstMismatchIndex","maxIndex","min","pathPrefix","_destroyObject","remoteWrite","dropRight","ancestorPath","_setFirebaseProperty","objectCreated","escapedChildKey","lockedDescendantPaths","_avoidLocalWritePaths","_pruneAncestors","_pruneDescendants","localWritePath","targetPath","targetObject","deleted","targetSegments","ghostObjects","_holdsConcreteData","_deleteFirebaseProperty","coupledDescendantFound","valueLocked","shouldDelete","_getFirebasePropertyDescriptor","_overwriteFirebaseProperty","logging","workerFunctions","VERSION","_keyGenerator","_metaTree","newKey","authenticate","rememberMe","unauthenticate","cleanup","callbackPromise","numCallbacks","timeoutHandle","nextTick","timeoutMessage","timeout","checkObjectsForRogueProperties","connectWorker","Worker","SharedWorker","exposedFunctionNames","firebaseSdkVersion","worker","preExpose","functionName","debounceAngularDigest","FIREBASE_SDK_VERSION"],"mappings":"6OAwCA,SAASA,MCnCF,QAASC,GAAUC,GACxB,MAAKA,GACEA,EAAIC,WAAWC,QAAQ,oBAAqB,SAASC,GAC1D,MAAO,KAAOA,EAAKC,WAAW,GAAGH,SAAS,MAF3BD,EAMZ,QAASK,GAAYL,GAC1B,MAAKA,GACEA,EAAIC,WAAWC,QAAQ,kBAAmB,SAASI,GACxD,MAAOC,QAAOC,aAAaC,SAASH,EAAKI,MAAM,GAAI,OAFpCV,EAMZ,QAASW,GAAoBC,GAClC,MAAO,YACL,IACE,MAAOC,SAAQC,QAAQF,EAASG,MAAMC,KAAMC,YAC5C,MAAOC,GACP,MAAOL,SAAQM,OAAOD,KAKrB,QAASE,GAAcC,EAASC,GAQrC,MAPAD,GAAUE,EAAeF,EAAS,WAAOC,EAAS,OAClDD,EAAQC,OAAS,WACVA,IACLA,IACAA,EAAS,OAEXE,EAAyBH,EAAS,UAC3BA,EAGT,QAASG,GAAyBH,EAASI,GACzCC,GAAMC,GAAeN,EAAQO,KAAMC,EAAgBR,EAAQS,KAa3D,OAZAT,GAAQO,KAAO,SAACG,EAAYC,GAC1BN,GAAMO,GAAiBN,EAAaO,KAAKb,EAASU,EAAYC,EAG9D,OAFAC,GAAeR,GAAgBJ,EAAQI,GACvCD,EAAyBS,EAAgBR,GAClCQ,GAETZ,EAAQS,MAAQ,SAAAE,GACdN,GAAMO,GAAiBJ,EAAcK,KAAKb,EAASW,EAGnD,OAFAC,GAAeR,GAAgBJ,EAAQI,GACvCD,EAAyBS,EAAgBR,GAClCQ,GAEFZ,EAGF,QAASE,GAAeF,EAASc,GACtC,MAAKA,IACLA,EAAYxB,EAAoBwB,GACzBd,EAAQO,KAAK,SAAAQ,GAClB,MAAOD,KAAYP,KAAK,WAAG,MAAGQ,MAC7B,SAAAC,GACD,MAAOF,KAAYP,KAAK,WAAG,MAAGf,SAAQM,OAAOkB,QALxBhB,EASlB,QAASiB,KAEd,IAAgB,GADVC,MACUC,EAAA,EAAAC,EAAIxB,UAASuB,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAA1BG,GAAIC,GAAOH,EAAAD,EACTK,GAAEC,SAASF,KAAUA,EAAU,GAAKA,GACf,MAAtBA,EAAQG,OAAO,IAAYR,EAASS,OAAO,EAAGT,EAASG,QAC3DH,EAASU,KAAKL,GAGhB,MADoB,MAAhBL,EAAS,KAAYA,EAAS,GAAK,IAChCA,EAASW,KAAK,KA8ChB,QAASC,GAAgBC,GAC9BT,GAAIU,GAAUC,EAAaF,EAO3B,OANKC,KACHA,EAAU,GAAIE,GAAYH,GAEtBP,EAAEW,KAAKF,KAAkBG,SAA2BH,GAAaT,EAAEa,KAAKJ,GAAc,IAC1FA,EAAaF,GAAWC,GAEnBA,EC6RT,QAASvD,MAET,QAAS6D,GAAcC,EAAMC,GAC3B,IAAKD,GAAQA,YAAgBE,OAAO,MAAOF,EAC3ClC,IAAMW,GAAQ,GAAIyB,OAAMF,EAAKG,QAC7B1B,GAAMwB,OAASA,CACf,KAAKnC,GAAMD,KAAgBmC,GACzB,GAAqB,YAAjBnC,GAA+BmC,EAAKI,eAAevC,GACvD,IACEY,EAAMZ,GAAgBmC,EAAKnC,GAC3B,MAAOP,GAEP,KADAA,GAAE+C,OAASxC,aAAAA,GACLP,EAGV,MAAOmB,GAGT,QAAS6B,GAAWC,GAClBzC,GAAM0C,GAAID,EAAIE,QAAQ,IAAK,EAC3B,OAAOD,IAAK,EAAID,EAAIzD,MAAM,EAAG0D,GAAKD,ECzOpC,QAASG,GAAYC,GACnB,GAAKA,EACL,MAAIA,aAAgBC,GAAeD,EAAKtE,WACjC4C,EAAE4B,UAAUF,EAAMD,kEC8N3B,QAASI,GAAaC,EAAMC,GAI1B5D,KAAK6D,aAELnD,IAAMoD,GAAYC,IAClB,KACE,MAAOJ,GAAKK,IAAI9C,KAAKlB,MACrB,MAAOE,GACP,MAAO,IAAI+D,IAAa/D,GACzB,QACC0D,EAAMM,SAAWH,KAAmBD,EACpCF,EAAMO,eAAiB,GAK3B,QAASC,GAAgBC,EAAQC,GAC/B,OAAKA,GAAeA,YAAuBd,GAAec,EACnDzC,EAAE4B,UAAUa,EAAa,SAAAC,GAC9B,MAAIA,aAAsBf,GAAee,EACrC1C,EAAE2C,WAAWD,GACR,WAEL,MADAF,GAAOR,cACAO,EAAgBC,EAAQE,EAAWrD,KAAKlB,QAG1CoE,EAAgBC,EAAQE,KAKrC,QAASE,GAAkBC,EAAGC,GAC5B,GAAID,GAAKA,EAAEE,QAAUD,GAAKA,EAAEC,OAAQ,MAAOF,KAAMC,ECsI5C,QAASE,GAA2CC,EAAUC,GAGnElD,EAAEmD,KAAKnD,EAAEa,KAAKqC,GAAS,SAAAE,GACrB,GAAuB,MAAnBA,EAAKlD,OAAO,IACd,KAAMkD,IAASH,GAAyB,MAAbA,GACrBjD,EAAEqD,WAAWD,EAAMH,EAAW,MAAQG,EAAKvD,OAASoD,EAASpD,OAAS,GAC1E,KAAM,IAAIoB,OAAM,kDAAkDmC,OAE/D,CACL,GAAIA,EAAK5B,QAAQ,MAAQ,EACvB,KAAM,IAAIP,OAAM,mEAAmEmC,EAErFvE,IAAMyE,GAAe7D,EAASwD,EAAU/F,EAAUkG,GAClD,IAAIF,EAAO/B,eAAemC,GACxB,KAAM,IAAIrC,OAAM,yBAAyBmC,EAAI,QAAQE,EAEvDJ,GAAOI,GAAgBJ,EAAOE,SACvBF,GAAOE,KAIlBvE,IAAM0E,GAAWvD,EAAEkD,GAAQrC,OAAO2C,IAAI,SAAAJ,GAAK,MAAG3D,GAAS2D,EAAM,MAAKK,OAAO,UAAUC,OACnF1D,GAAEmD,KAAKD,EAAQ,SAACQ,EAAON,GACrB,IAAoB,GAAAzD,GAAA,EAAAC,EAAI2D,EAAQ5D,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAA7Bd,GAAM8E,GAAS/D,EAAAD,EAClB,IAAIgE,EAAU9D,OAASuD,EAAKvD,OAAQ,KACpC,IAAIuD,IAASO,GAAa3D,EAAEqD,WAAWD,EAAMO,GAC3C,KAAM,IAAI1C,OAAM,yBAAyB0C,EAAS,QAAQP,MAM3D,QAASQ,GAAgBX,EAAUC,GACxClD,EAAEmD,KAAKnD,EAAEa,KAAKqC,GAAS,SAAAE,GACrBF,EAAOE,EAAKvF,MAAmB,MAAboF,EAAmB,EAAIA,EAASpD,OAAS,IAAMqD,EAAOE,SACjEF,GAAOE,KAIX,QAASS,GAAerB,GAC7B,GAAsB,gBAAXA,GAAqB,CAC9B3D,GAAMU,KACN,KAAKV,GAAM1B,KAAOqF,GACXA,EAAOrB,eAAehE,KAC3BoC,EAAOrC,EAAUC,IAAQ0G,EAAerB,EAAOrF,IAEjD,OAAOoC,GAEP,MAAOiD,0DLjoBX,IAGIsB,GACAC,EAAa,WACfD,GAAkB,GAIdE,GACJC,OAA0B,mBAAXC,SAA0BA,OAAOC,QAChDC,eAAc,SAACC,GACTA,EACFL,EAAaM,OAAStE,EAAEuE,SAASR,EAAYM,GAE7CL,EAAaM,OAASP,KAI3B,SAAU,QAAS,gBAAgBS,QAAQ,SAAAC,GAAWT,EAAaS,GAAUxH,IAE1E+G,EAAaC,SACfD,EAAaM,OAASP,EACtBC,EAAaU,MAAQ,WAAY,KAAM,IAAIzD,OAAM,4CACjDiD,OAAOC,QAAQQ,OAAO,gBAAiBC,KAAK,aAAc,SAASC,GACjEb,EAAaM,OAAS,WAChBR,IACJA,GAAkB,EAClBe,EAAWC,WAAW,WAAYhB,GAAkB,MAElDA,GAAiBE,EAAaM,SAClCN,EAAaU,MAAQG,EAAWE,OAAOC,KAAKH,MAE9Cb,EAAaiB,aAAe,SAASC,GACnChB,OAAOC,QAAQQ,OAAO,aAAaQ,SAAS,QAASD,ICjClDrG,IAAMuG,GAAmBC,OAAOC,QAAQC,MAAO,cA4EhD9E,KACAG,EAAqB,IAGrBF,EAAY,SACJH,aACZpC,MAAOqH,YACP,IAAQC,GAAczF,EAAE0F,SAASnF,EAAS,MACpCkF,KAAalF,EAAUA,EAAQ1C,MAAM,GAAG,GAC9C,IAAQ8H,GAAepF,EAAQlD,QAAQ,cAAe,SAAAuI,GAEpD,MADMA,GAAM/F,OAAS,GAAG1B,EAAKqH,UAAUpF,KAAKwF,EAAM/H,MAAM,IAC/C,KAGX,IADAwH,OAASC,OAAOnH,KAAKqH,WACf,eAAeK,KAAKF,GACxB,KAAQ,IAAI1E,OAAM,oCAAsCV,EAE1DpC,MAAO2H,OAAS,GAAIC,QAClB,IAAQJ,EAAatI,QAAQ,UAAW,aAAeoI,EAAc,QAAU,MAGnF/E,GAAAsF,UAAEJ,MAAK,QAAAA,GAACxC,aACNjF,MAAO2H,OAAOG,UAAY,CAC1B,IAAQL,GAAQzH,KAAK2H,OAAOI,KAAK9C,EACjC,IAAOwC,EAAP,CAEA,IAAO9F,GADCqG,MACGxG,EAAI,EAAGA,EAAIxB,KAAKqH,UAAU3F,OAAQF,IAC3CwG,EAAWhI,EAAKqH,UAAU7F,IAAMnC,EAAYoI,EAAMjG,EAAI,GAExD,OAASwG,KAGXzF,EAAAsF,UAAEH,KAAI,SAACzC,GACL,MAASjF,MAAK2H,OAAOD,KAAKzC,IAG5B1C,EAAAsF,UAAE5I,SAAQ,WACR,MAASe,MAAK2H,OAAO1I,WC/GvByB,IAAMuH,GAAqB,QAGrBC,EAAS,SACDC,MAAClD,GAAIkD,EAAAlD,KAAEM,EAAK4C,EAAA5C,MAAE6C,EAAUD,EAAAC,WAAEC,EAAMF,EAAAE,MAC5CrI,MAAOsI,MAAQrD,EACfjF,KAAOuI,OAAShD,EAChBvF,KAAOwI,YAAc7F,EAAcyF,GACnCpI,KAAOyI,QAAoBC,SAAVnD,EAAsB8C,IAAU,EAAkB,OAAV9C,wCAG3DoD,GAAE1D,KAAQjB,IAAA,WACR,MAAShE,MAAKsI,OAGhBK,EAAEN,OAAUrE,IAAA,WACV,MAAShE,MAAKyI,SAGhBE,EAAEpD,MAASvB,IAAA,WAET,MADAhE,MAAO4I,cACE5I,KAAKuI,QAGhBI,EAAE3J,IAAOgF,IAAA,WAEP,MADoB0E,UAAd1I,KAAK6I,OAAoB7I,KAAK6I,KAAOxJ,EAAYW,KAAKsI,MAAMpJ,QAAQ,OAAQ,MACzEc,KAAK6I,MAGhBX,EAAAL,UAAEe,YAAW,WACX,GAAM5I,KAAKwI,YAAa,KAAMxI,MAAKwI,WACnC,IAAsBE,SAAhB1I,KAAKuI,OAAsB,KAAM,IAAIzF,OAAM,sEAKnD,IAAqBgG,GAAO,SACdC,aACZ/I,MAAOgJ,WAAa,EACpBhJ,KAAOiJ,cACPjJ,KAAOkJ,YAAa,EACpBlJ,KAAOmJ,YACPnJ,KAAOoJ,cACPpJ,KAAOqJ,KAAOxH,EAAE/C,KAChBkB,KAAOsJ,yBAA2B,KAClCtJ,KAAOuJ,uBAAyB,IAChCvJ,KAAOwJ,qBAAuB,KAC9BxJ,KAAOyJ,oBACPzJ,KAAO0J,qBACP1J,KAAO2J,mBAAqB3J,KAAK2J,mBAAmB9C,KAAK7G,MACzDA,KAAO4J,MAAQb,EAAUc,MAAQd,EACjC/I,KAAO8J,UAAYf,EAAUc,KAC7B7J,KAAO4J,MAAMG,UAAY/J,KAAKgK,SAASnD,KAAK7G,MAC5C+F,OAASkE,iBAAiB,SAAU,WAAOjK,EAAKkK,OAAOC,IAAK,cAC5DC,YAAc,WAAOpK,EAAKkK,OAAOC,IAAK,UAAY,KAGpDrB,GAAAjB,UAAEwC,KAAI,SAACtB,GACL,GAAQuB,KACR,KACE,GAAQC,GAAUxE,OAAOyE,cAAgBzE,OAAO0E,cAChD,KAAOF,EAAS,MAChB,KAAO5I,GAAIH,GAAI,EAAGA,EAAI+I,EAAQ7I,OAAQF,IAAK,CACzC,GAAQxC,GAAMuL,EAAQvL,IAAIwC,EAC1B8I,GAAQrI,MAAMjD,IAAAA,EAAKuG,MAAOgF,EAAQG,QAAQ1L,MAE1C,MAAOkB,IAGX,MAASF,MAAKkK,OAAOC,IAAK,OAAQI,QAASD,IAAQ1J,KAAK,SAAA+J,GACtD,GAAQC,GAAgBD,EAASE,QAAQpD,MAAM,8BAC/C,IAAMmD,EAAe,CACnB,GAAQE,GAAa7C,EAAmBR,MAAM,+BAEtCsD,EAAaH,EAAc,KAAOE,EAAW,KACnDF,EAAgB,GAAKE,EAAW,IAChCF,EAAgB,KAAOE,EAAW,IAAMF,EAAc,IAAME,EAAW,GAEzE,KAAOC,EAAY,MAAOlL,SAAQM,OAAO,GAAI2C,OAC3C,0CAA4C6H,EAAgB,QAAA,KACtD1C,EAAkB,yBAG5B,MAAS0C,MAIb7B,EAAAjB,UAAEmD,QAAO,SAACC,GACYvC,SAAduC,IAAyBA,GAAY,GACrCjL,KAAKkJ,aAAe+B,IAC1BjL,KAAOkJ,WAAa+B,EACbA,IACLjL,KAAOkL,iBAAiBlL,KAAKyJ,kBAC7BzJ,KAAOyJ,oBACDzJ,KAAK0J,kBAAkBhI,QAAQ7B,QAAQC,UAAUc,KAAKZ,KAAK2J,uBAIrEb,EAAAjB,UAAEsD,4BAA2B,SAACC,EAAyBC,EAAuBC,GAC5EtL,KAAOsJ,yBAA2B8B,EACF1C,SAA1B2C,IAAqCrL,KAAKuJ,uBAAyB8B,GACzErL,KAAOwJ,qBAAuB8B,GAAc,WAAY,OAAO,IAGjExC,EAAAjB,UAAE0D,cAAa,SAACC,GACRA,GACEA,KAAO,IAAMA,EAAKC,QAAQC,IAAI7E,KAAK4E,UACzCzL,KAAOqJ,KAAOmC,GAEdxL,KAAOqJ,KAAOxH,EAAE/C,MAIpBgK,EAAAjB,UAAEqC,MAAK,SAACnH,aACNA,GAAU4I,KAAO3L,KAAKgJ,UACtB,IAAM3I,EACN,IAAM0C,EAAQ6I,OACZvL,EAAYR,QAAQC,cACb,CACPO,EAAY,GAAIR,SAAQ,SAACC,EAASK,GAChC0L,EAAO5C,WAAWlG,EAAQ4I,KAAO7L,QAAAA,EAASK,OAAAA,IAE5C,IAAQ2L,GAAW9L,KAAKiJ,WAAWlG,EAAQ4I,GAC3CG,GAAWzL,QAAUA,EACrBA,EAAU0L,KAAO,GAAIlM,SAAQ,SAAAC,GAC3BgM,EAAWE,YAAclM,IAE3BgM,EAAWjJ,OAASE,EAOtB,MALO/C,MAAK0J,kBAAkBhI,QAAW1B,KAAKkJ,YAC5CrJ,QAAUC,UAAUc,KAAKZ,KAAK2J,oBAEhC3J,KAAOqJ,KAAK,QAAStG,GACrB/C,KAAO0J,kBAAkBzH,KAAKc,GACrB1C,GAGXyI,EAAAjB,UAAE8B,mBAAkB,WAClB3J,KAAO4J,MAAMqC,YAAYjM,KAAK0J,mBAC9B1J,KAAO0J,sBAGTZ,EAAAjB,UAAEmC,SAAQ,SAACkC,GACHlM,KAAKkJ,WACTlJ,KAAOyJ,iBAAmBzJ,KAAKyJ,iBAAiB0C,OAAOD,EAAME,MAE7DpM,KAAOkL,iBAAiBgB,EAAME,OAIlCtD,EAAAjB,UAAEqD,iBAAgB,SAACmB,GACjB,IAAoB,WAAA7K,EAAA,EAAAC,EAAI4K,EAAQ7K,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWuB,GAAOtB,EAAAD,EAChBxB,GAAKqJ,KAAK,QAAStG,EACrB,IAAQyI,GAAKxL,EAAK+C,EAAQoH,IAC1B,IAAoB,kBAAPqB,GAAmB,KAAM,IAAI1I,OAAM,oBAAsBC,EAAQoH,IAC9EqB,GAAKtK,KAAKlB,EAAM+C,KAIpB+F,EAAAjB,UAAEyE,oBAAmB,SAACC,GACpB,MAAS,YACP,MAASvM,MAAKkK,OAAOC,IAAK,OAAQoC,KAAAA,EAAMC,KAAMC,MAAM5E,UAAUnI,MAAMwB,KAAKjB,cACtE4G,KAAK7G,OAGZ8I,EAAAjB,UAAE/H,QAAO,SAACiD,GACR,GAAQ+I,GAAW9L,KAAKiJ,WAAWlG,EAAQ4I,GAC3C,KAAOG,EAAU,KAAM,IAAIhJ,OAAM,yDACxB9C,MAAKiJ,WAAWlG,EAAQ4I,IACjCG,EAAWhM,QAAQiD,EAAQ3B,SAG7B0H,EAAAjB,UAAE1H,OAAM,SAAC4C,GACP,GAAQ+I,GAAW9L,KAAKiJ,WAAWlG,EAAQ4I,GAC3C,KAAOG,EAAU,KAAM,IAAIhJ,OAAM,wDACxB9C,MAAKiJ,WAAWlG,EAAQ4I,IACjCG,EAAW3L,OAAOwC,EAAcI,EAAQ1B,MAAOyK,EAASjJ,UAG1DiG,EAAAjB,UAAE6E,WAAU,SAACrL,GACX,GAAQ/B,GAAO+B,EAAM/B,MAAQ+B,EAAM0B,OACnC,OAAM1B,GAAMwB,QAAUvD,GAA+B,sBAAvBA,EAAKqN,cACxB3M,KAAK4M,cAAcvL,EAAMwB,QAAQjC,KAAK,SAAAiM,GACvCA,IAAexL,EAAMyL,wBAA0BD,KAG9ChN,QAAQC,WAIrBgJ,EAAAjB,UAAE+E,cAAa,SAACG,aACd,MAAQ/M,KAAKsJ,0BAA4BtJ,KAAKuJ,uBAAyB,GACrE,MAAS1J,SAAQC,SAEnB,IAAMkN,KACN,QAAUD,EAAM5C,KACd,IAAO,MACL6C,EAAiB/K,MAAMqE,OAAQ,MAAOnD,IAAK4J,EAAM5J,IAAKqJ,MAAOO,EAAMxH,QACnE,MACF,KAAO,SACLyH,EAAiB/K,MAAMqE,OAAQ,SAAUnD,IAAK4J,EAAM5J,IAAKqJ,MAAOO,EAAMxH,QACtE,MACF,KAAO,KACLyH,EAAiB/K,MAAMqE,OAAQ,OAAQnD,IAAK4J,EAAM5J,IAAK8J,KAAMF,EAAME,KAAMT,MAAO,UAChF,MACF,KAAO,cACLQ,EAAiB/K,MAAMqE,OAAQ,OAAQnD,IAAK4J,EAAM5J,IAAKqJ,MAAO,WAC9DQ,EAAiB/K,MAAMqE,OAAQ,MAAOnD,IAAK4J,EAAM5J,IAAKqJ,MAAOO,EAAMG,YAGvE,IAAOF,EAAetL,SAAW1B,KAAKwJ,qBAAqBuD,EAAM5C,IAAK4C,EAAM5J,KAC1E,MAAStD,SAAQC,SAEnB,IAAQqN,GAAOnN,KAAKoN,QAAQlK,EAAW6J,EAAM5J,MACrCkK,EAAoBrN,KAAKsJ,yBAAyB6D,GAAQA,EAAKG,KAAK1M,KAAK,SAAA2M,GAC/E,MAAS1N,SAAQ2N,IAAIR,EAAe3H,IAAI,SAAAtC,GAGtC,MAFAA,GAAUoH,IAAM,WAChBpH,EAAUwK,MAAQA,EACTvN,EAAKkK,MAAMnH,QAEnBnC,KAAK,SAAA6M,GACR,MAAMA,GAAeC,MAAM,SAAAC,GAAM,MAAa,QAAVA,IACzB,0CAEFF,EAAeG,OAAO,SAAAD,GAAM,MAAGA,KAAOzL,KAAK,UACjDpB,MAAM,SAAAZ,GACT,MAAS,6BAA+BA,IAElC2N,EAAiB,GAAIhO,SAAQ,SAAAC,GACnCgO,WAAahO,EAAQ+G,KAAK,KAAM,4BAA6B7G,EAAKuJ,yBAEpE,OAAS1J,SAAQkO,MAAMV,EAAmBQ,KAG5C/E,EAAAjB,UAAEmG,mBAAkB,SAAC1D,GACnB,IACE,GAAQC,GAAUxE,OAAOyE,cAAgBzE,OAAO0E,cAChD,KAAO/J,GAAMuN,KAAQ3D,GACE,OAAf2D,EAAK1I,MACTgF,EAAU2D,WAAWD,EAAKjP,KAE1BuL,EAAU4D,QAAQF,EAAKjP,IAAKiP,EAAK1I,OAGnC,MAAOrF,MAKb4I,EAAAjB,UAAEuG,YAAW,SAACC,GACZ,IAAMrO,KAAKmJ,SAASnG,eAAeqL,GAAnC,CACA,GAAQC,GAAStO,KAAKmJ,SAASkF,IAAYE,kBACnCC,EAAiBxO,KAAKyO,kBAAkBzO,KAAK0O,cAAc7H,KAAK7G,KAAMsO,GAC9EtO,MAAOkK,OAAOC,IAAK,SAAUhH,IAAKkL,EAASM,WAAYH,MAGzD1F,EAAAjB,UAAE6G,cAAa,SAACJ,EAAQnB,GACtBmB,EAASnB,KAAOA,CAChB,KAAqB,GAAA3L,GAAA,EAAAC,EAAI6M,EAAOC,cAAa/M,EAAAC,EAAAC,OAAAF,GAAA,EAAtC,CAAAd,GAAMkO,GAAQnN,EAAAD,EAA0BoN,GAASzB,KAG1DrE,EAAAjB,UAAEgH,OAAM,SAACR,EAASzO,EAAUkP,GAC1B,GAAQF,GAAWhP,EAASiH,KAAKiI,EACjCF,GAAWhP,SAAWA,EACtBgP,EAAWE,QAAUA,EACrB9O,KAAOmJ,SAASkF,GAASE,cAActM,KAAK2M,GAC5CA,EAAW5O,KAAKoN,QAAQiB,KAG1BvF,EAAAjB,UAAEkH,QAAO,SAACV,EAASzO,EAAUkP,GAE3B,IAAOnN,GADC4M,GAAgBvO,KAAKmJ,SAASkF,GAASE,cACpC/M,EAAI,EAAGA,EAAI+M,EAAc7M,OAAQF,IAAK,CAC/C,GAAQoN,GAAWL,EAAc/M,EACjC,IAAMoN,EAAShP,WAAaA,GAAYgP,EAASE,UAAYA,EAAS,CACpEP,EAAgBvM,OAAOR,EAAG,EAC1B,UAKNsH,EAAAjB,UAAEuF,QAAO,SAACiB,GACR,MAASrO,MAAKmJ,SAASkF,GAASlB,MAGlCrE,EAAAjB,UAAEmH,oBAAmB,SAAC7L,EAAK8L,EAAWC,GACpC,MAASlP,MAAKkK,OAAOC,IAAK,sBAAuBhH,IAAAA,EAAK8L,UAAAA,EAAWC,QAAAA,KAGnEpG,EAAAjB,UAAEsH,OAAM,SAAChM,GACP,MAASnD,MAAKkK,OAAOC,IAAK,SAAUhH,IAAAA,KAGtC2F,EAAAjB,UAAEuH,IAAG,SAACjM,EAAKoC,EAAO8J,GAAc,MAAOrP,MAAKkK,OAAOC,IAAK,MAAOhH,IAAAA,EAAKoC,MAAAA,EAAO8J,YAAAA,KAC3EvG,EAAAjB,UAAEyH,OAAM,SAACnM,EAAKoC,EAAO8J,GAAc,MAAOrP,MAAKkK,OAAOC,IAAK,SAAUhH,IAAAA,EAAKoC,MAAAA,EAAO8J,YAAAA,KAEjFvG,EAAAjB,UAAE0H,GAAE,SAACC,EAAarM,EAAK8J,EAAMwC,EAAWC,EAAkBC,EAAgBb,EAASI,GACjF,GAAQU,IACNJ,YAAEA,EAAaC,UAAAA,EAAWC,iBAAAA,EAAkBC,eAAAA,EAAgBb,QAAAA,EAC5DjM,QAAWsH,IAAK,KAAMqF,YAAAA,EAAarM,IAAAA,EAAK8J,KAAAA,EAAMwC,UAAAA,EAAWP,QAAAA,IAEnDtP,EAAWI,KAAK6P,YAAYhJ,KAAK7G,KAAM4P,EAC/C5P,MAAOyO,kBAAkB7O,EAAUgQ,GAEnCF,EAAmBI,cAAgBJ,EAAiBI,kBACpDJ,EAAmBI,cAAc7N,KAAK2N,EAAOjE,IAC7C3L,KAAOkK,OACLC,IAAO,KAAMqF,YAAAA,EAAarM,IAAAA,EAAK8J,KAAAA,EAAMwC,UAAAA,EAAWd,WAAYiB,EAAOjE,GAAIuD,QAAAA,IACpEpO,MAAM,SAAAO,GACTzB,EAAWyB,MAIfyH,EAAAjB,UAAEkI,IAAG,SAACP,EAAarM,EAAK8J,EAAMwC,EAAWC,EAAkBZ,MAEnDH,UADEqB,IAER,IAAMN,EAAkB,CAOtB,GANAf,EAAe3O,KAAKiQ,yBAClBP,EACA,SAAEE,GAAO,MACLA,GAAOJ,cAAgBA,GAAeI,EAAOH,YAAcA,GAC7DG,EAASd,UAAYA,KAElBH,EAAY,MAAO9O,SAAQC,SAClCkQ,GAAkB/N,KAAK0M,OAEvB,KAAe,GAAAnN,GAAA,EAAAC,EAAIyF,OAAOxE,KAAK1C,KAAKoJ,YAAW5H,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAC/C,GADWmK,GAAElK,EAAAD,GACLoO,EAAS5P,EAAKoJ,WAAWuC,EAC3BiE,GAAOJ,cAAgBA,GAAiBC,GAAaG,EAAOH,YAAcA,GAC9EO,EAAkB/N,KAAK0J,GAO7B,IAAe,GAAAuE,GAAA,EAAAC,EAAIH,EAAeE,EAAAC,EAAAzO,OAAAwO,GAAA,EAA3B,CAAAxP,GAAMiL,GAAEwE,EAAAD,EAAqBlQ,GAAKoQ,iBAAiBzE,GAC1D,MAAS3L,MAAKkK,OAAOC,IAAK,MAAOqF,YAAAA,EAAarM,IAAAA,EAAK8J,KAAAA,EAAMwC,UAAAA,EAAWd,WAAAA,IAAa/N,KAAK,WACpF,IAAe,GAAAY,GAAA,EAAAC,EAAIuO,EAAexO,EAAAC,EAAAC,OAAAF,GAAA,EAA3B,CAAAd,GAAMiL,GAAElK,EAAAD,EAAqBxB,GAAKqQ,oBAAoB1E,OAIjE7C,EAAAjB,UAAEgI,YAAW,SAACD,EAAQvO,EAAOiP,GAC3B,GAAMjP,EAAO,CACXrB,KAAOqQ,oBAAoBT,EAAOjE,GAClC,IAAQzL,GAAIyC,EAActB,EAAOuO,EAAO/M,OAClC+M,GAAOD,eACXC,EAASD,eAAezO,KAAK0O,EAAOd,QAAS5O,GAE7CuL,QAAUpK,MAAMnB,OAGlB0P,GAASF,iBAAiBxO,KAAK0O,EAAOd,QAAS,GAAI5G,GAASoI,KAIhExH,EAAAjB,UAAE0I,YAAW,SAACpN,EAAKqN,EAAUC,GAC3B,MAASzQ,MAAKkK,OAAOC,IAAK,cAAehH,IAAAA,EAAKqN,SAAAA,EAAUC,gBAAAA,KAG1D3H,EAAAjB,UAAE6I,aAAY,SAACvN,EAAKmD,EAAQf,GAC1B,MAASvF,MAAKkK,OAAOC,IAAK,eAAgBhH,IAAAA,EAAKmD,OAAAA,EAAQf,MAAAA,KAGzDuD,EAAAjB,UAAE8I,iBAAgB,WAChB,MAAS3Q,MAAKkK,OAAOC,IAAK,sBAG5BrB,EAAAjB,UAAEjI,SAAQ,SAACuI,MAACwD,GAAExD,EAAAwD,GAAEa,EAAIrE,EAAAqE,KACVoD,EAAS5P,KAAKoJ,WAAWuC,EACjC,KAAOiE,EAAQ,KAAM,IAAI9M,OAAM,0BAA4B6I,EAC3DiE,GAAShQ,SAASG,MAAM,KAAMyM,IAGhC1D,EAAAjB,UAAE4G,kBAAiB,SAAC7O,EAAUgQ,GAK5B,MAJAA,GAAWA,MACXA,EAAShQ,SAAWA,EACpBgQ,EAASjE,GAAK,QAAO3L,KAAKgJ,WAC1BhJ,KAAOoJ,WAAWwG,EAAOjE,IAAMiE,EACtBA,EAAOjE,IAGlB7C,EAAAjB,UAAEuI,iBAAgB,SAACzE,GACjB3L,KAAOoJ,WAAWuC,GAAI/L,SAAWd,GAGnCgK,EAAAjB,UAAEwI,oBAAmB,SAAC1E,SACX3L,MAAKoJ,WAAWuC,IAG3B7C,EAAAjB,UAAEoI,yBAAwB,SAACrQ,EAAUgR,aACnC,IAAOhR,EAASkQ,cAEhB,IADA,GAAMtO,GAAI,EACDA,EAAI5B,EAASkQ,cAAcpO,QAAQ,CAC1C,GAAQiK,GAAK/L,EAASkQ,cAActO,GAC5BoO,EAAS5P,EAAKoJ,WAAWuC,EACjC,IAAOiE,EAAP,CAIA,GAAMgB,EAAUhB,GAEd,MADAhQ,GAAWkQ,cAAc9N,OAAOR,EAAG,GAC1BmK,CAEXnK,IAAO,MAPL5B,GAAWkQ,cAAc9N,OAAOR,EAAG,II5YzCd,IAAMmQ,KACN3J,QAAOC,OAAO0J,EAGd,IAAarN,GAAO,SACNsN,EAAM7L,EAAM8L,GACxB/Q,KAAOgR,MAAQF,EACf9Q,KAAOsI,MAAQrD,EAAK/F,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,IAClD6R,IACJ/Q,KAAOiR,aAAeF,EACtB7J,OAASC,OAAO4J,uEAIpBpI,GAAEuI,KAAQlN,IAAA,WAAI,MAAOhE,OACrB2I,EAAE3J,IAAOgF,IAAA,WAEP,MADOhE,MAAK6I,OAAM7I,KAAK6I,KAAOxJ,EAAYW,KAAKsI,MAAMpJ,QAAQ,OAAQ,MAC5Dc,KAAK6I,MAEhBF,EAAE1D,KAAQjB,IAAA,WAAI,MAAOhE,MAAKsI,OAC1BK,EAAEwI,YAAenN,IAAA,WAAI,MAAsB,MAAfhE,KAAKsI,MAAgB,GAAKtI,KAAKsI,OAC3DK,EAAEyI,OAAUpN,IAAA,WACV,MAAS,IAAIqN,GAAUrR,KAAKgR,MAAOhR,KAAKsI,MAAMpJ,QAAQ,YAAY,IAAKc,KAAKiR,eAG9EtI,EAAEoI,YAAe/M,IAAA,WACf,MAAShE,MAAKiR,cAAgBJ,GAGhCrN,EAAAqE,UAAEyJ,MAAK,WACL,IAAOrR,UAAUyB,OAAQ,MAAO1B,KAEhC,KAAgB,GADRuB,MACQC,EAAA,EAAAC,EAAIxB,UAASuB,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAC7B,GADWxC,GAAGyC,EAAAD,EACZ,IAAYkH,SAAR1J,GAA6B,OAARA,EAAc,MACzCuC,GAAWU,KAAKlD,EAAUC,IAE5B,MAAS,IAAIqS,GACXrR,KAAOgR,MAAUhR,KAAgB,YAAA,IAAIuB,EAASW,KAAK,KACnDlC,KAAOiR,eAIXzN,EAAAqE,UAAE0J,SAAQ,iCACR,KAAOtR,UAAUyB,OAAQ,MAAO1B,KAEhC,KAAO2B,GADC6P,MACGhQ,EAAI,EAAGA,EAAIvB,UAAUyB,OAAQF,IAAK,CAC3C,GAAQiQ,GAAMxR,EAAUuB,EACxB,IAAMK,EAAE6P,QAAQD,GAAM,CAIpB,IAAgB,GAHRE,MACAC,EAAa5R,EAAgB,YAAA,IAAIwR,EAAYtP,KAAK,KAClD2P,EAAOhQ,EAAEnC,MAAMO,EAAWuB,EAAI,GACtB0O,EAAA,EAAAzO,EAAIgQ,EAAGvB,EAAAzO,EAAAC,OAAAwO,GAAA,EAAE,CACvB,GADWlR,GAAGyC,EAAAyO,GACN4B,EACN,GAAMT,GAAUrR,EAAKgR,MAAOY,EAAU,IAAI7S,EAAUC,GAAQgB,EAAKiR,cAC3Dc,EAAaD,EAAOP,SAASxR,MAAM+R,EAAQD,EAC7CE,KAAYJ,EAAQ3S,GAAO+S,GAEnC,GAAMlQ,EAAEmQ,QAAQL,GAAU,MAC1B,OAASA,GAET,GAAcjJ,SAAR+I,GAA6B,OAARA,EAAc,MACzCD,GAAcvP,KAAKlD,EAAU0S,IAGjC,MAAS,IAAIJ,GACXrR,KAAOgR,MAAUhR,KAAgB,YAAA,IAAIwR,EAAYtP,KAAK,KAAQlC,KAAKiR,eAGvEzN,EAAAqE,UAAEoK,KAAI,SAACrS,GACL,MAASI,MAAKgR,MAAMkB,MAAMD,KAAKjS,KAAMJ,IAGvC4D,EAAAqE,UAAEJ,MAAK,SAACrF,GACN,MAASD,GAAgBC,GAASqF,MAAMzH,KAAKiF,OAG/CzB,EAAAqE,UAAEsK,QAAO,SAACC,GACR,MAAQA,aAAgB5O,KACfxD,KAAKgR,QAAUoB,EAAKpB,OAAShR,KAAKf,aAAemT,EAAKnT,aAGjEuE,EAAAqE,UAAEwK,UAAS,SAACH,GACV,MAASlS,MAAKgR,MAAMkB,QAAUA,yCAKhC,IAAaI,GAAK,SAAA9O,GAAgB,QAAA8O,GACpBxB,EAAM7L,EAAMgI,EAAM8D,GAC5BwB,EAAKrR,KAAClB,KAAA8Q,EAAM7L,EAAM8L,GAClB/Q,KAAKwS,MAAQxS,KAAKyS,qBAAqBxF,EACvCvM,IAAMgS,GAAa7Q,EAAE7B,KAAKwS,OACvBnN,IAAI,SAACE,EAAOvG,GAAK,MAAGA,GAAM,IAAI2T,mBAAmBC,KAAKC,UAAUtN,MAChED,SACApD,KAAK,IACRlC,MAAK8S,QAAa9S,KAAU,MAAA,IAAI0S,EAChCxL,OAAOC,OAAOnH,mIAIhB+S,GAAAC,MAAShP,IAAA,WACP,MAAOhE,MAAKgR,MAAMiC,aAAajT,OAGjC+S,EAAAG,YAAelP,IAAA,WACb,MAAOhE,MAAKwS,OAGdF,EAAAzK,UAAAsL,SAAQ,SAACpC,GACP,MAAO,IAAIuB,GACTtS,KAAKgR,MAAOhR,KAAKsI,MAAOtI,KAAKwS,MAAO3Q,EAAEuR,UAAWpT,KAAKiR,aAAcF,KAGxEuB,EAAAzK,UAAA4K,qBAAoB,SAACxF,GACnB,IAAKA,EAAKoG,GAAI,KAAM,IAAIvQ,OAAM,4BAA8B8P,KAAKC,UAAU5F,GAC3E,KAAK,MAAQA,KAAS,QAAUA,KAAS,MAAQA,IAAQ,EACvD,KAAM,IAAInK,OACR,oEAAsE8P,KAAKC,UAAU5F,GAEzF,KAAK,SAAWA,KAAS,QAAUA,IAAQ,EACzC,KAAM,IAAInK,OACR,gEAAkE8P,KAAKC,UAAU5F,GAErF,KAAKpL,EAAEyR,MAAM,KAAM,OAAQ,KAAM,QAAS,QAAS,SAAAC,GAAO,MAAGA,KAAUtG,KACrE,KAAM,IAAInK,OACR,sFACA8P,KAAKC,UAAU5F,GAGnB,IADAA,EAAOpL,EAAE2R,MAAMvG,GACC,SAAZA,EAAKoG,IAA6B,WAAZpG,EAAKoG,GAAiB,CAC9C,KAAMpG,EAAKoG,aAAchC,IACvB,KAAM,IAAIvO,OAAM,yCAA2CmK,EAAKoG,GAElE1R,IAAI8R,GAAYxG,EAAKoG,GAAGpU,UACxB,KAAK4C,EAAEqD,WAAWuO,EAAWzT,KAAKsI,OAChC,KAAM,IAAIxF,OACR,8DAAgEmK,EAAKoG,GAGzE,IADAI,EAAYA,EAAU/T,MAAMM,KAAKsI,MAAM5G,QAAQxC,QAAQ,OAAQ,IAC3DuU,EAAUpQ,QAAQ,QAAS,EAC7B,KAAM,IAAIP,OACR,oEAAsEmK,EAAKoG,GAE/EpG,GAAKoG,GAAKI,EAAUvU,QAAQ,QAAS,IAGvC,MADAgI,QAAOC,OAAO8F,GACPA,GAITqF,EAAAzK,UAAA5I,SAAQ,WACN,MAAOe,MAAK8S,mDAhEWtP,GAsEd6N,EAAS,SAAA7N,GAAgB,QAAA6N,GAGxBP,EAAM7L,EAAM8L,GACtBwB,EAAKrR,KAAClB,KAAA8Q,EAAM7L,EAAM8L,GAClB7J,OAAOC,OAAOnH,6HAGhB0T,GAAAV,MAAShP,IAAA,WAAI,MAAOhE,MAAKgR,MAAM2C,iBAAiB3T,OAChD0T,EAAAnO,MAASvB,IAAA,WAAI,MAAOhE,MAAKgR,MAAM4C,UAAU5T,KAAKiF,OAC9CoM,EAAAxJ,UAAA5I,SAAQ,WAAI,MAAOe,MAAKsI,OAExB+I,EAAAxJ,UAAAsL,SAAQ,SAACpC,GACP,MAAO,IAAIM,GAAUrR,KAAKgR,MAAOhR,KAAKsI,MAAOzG,EAAEuR,UAAWpT,KAAKiR,aAAcF,KAG/EM,EAAAxJ,UAAAgM,MAAK,SAAC5G,GACJ,MAAO,IAAIqF,GAAMtS,KAAKgR,MAAOhR,KAAKsI,MAAO2E,IAG3CoE,EAAAxJ,UAAAuH,IAAG,SAAC7J,GACF,MAAOvF,MAAKgR,MAAM1B,OAAOtP,KAAM,OAAK8T,KAAGA,EAAC9T,KAAKiF,MAAKM,EAAOuO,WAG3DzC,EAAAxJ,UAAAyH,OAAM,SAACvK,GACL,MAAO/E,MAAKgR,MAAM1B,OAAOtP,KAAM,SAAU+E,IAG3CsM,EAAAxJ,UAAAkM,SAAQ,SAACxO,GACP,MAAOvF,MAAKgR,MAAM1B,OAAOtP,KAAM,YAAU8T,KAAGA,EAAC9T,KAAKiF,MAAKM,EAAOuO,WAGhEzC,EAAAxJ,UAAAmM,OAAM,SAACC,GACL,MAAOjU,MAAKgR,MAAMgD,OAAOhU,KAAMiU,8CAjCJzQ,GH3JV0Q,EAAU,SACjBC,EAAO7P,EAAawM,EAAMxK,EAAQ/C,aAC9C2D,QAASC,OAAO7C,GAChBtE,KAAOoU,OAASD,EAChBnU,KAAOqU,aAAe/P,EACtBtE,KAAOgR,MAAQF,EACf9Q,KAAOsU,QAAUhO,EACjBtG,KAAOuU,MAAQhR,MACfvD,KAAOwU,kBACPxU,KAAOyU,uBACPzU,KAAO0U,gBACP1U,KAAO2U,kBAAoBjM,OAC3B1I,KAAO4U,KAAO,GAAIC,IAAKzI,KAAMvK,EAAE4B,UAAUa,EAAazC,EAAEmF,SAAS0B,WACjE1I,KAAO8U,QAAU9U,KAAK8U,QACtB5N,OAAS6N,KAAK/U,MAEdA,KAAOgV,uBAEPnT,EAAImD,KAAKV,EAAa,SAACC,EAAYvF,GAC3B6C,EAAE2C,WAAWD,GACjBsH,EAAOoJ,wBAAwBjW,EAAKuF,GAEpCsH,EAAOqJ,SAASlW,EAAKuF,KAInByB,EAAQF,QAAUqO,GAASA,EAAMgB,KAAOhB,EAAMiB,KAClDjB,EAAQgB,IAAI,WAAY,WAAOnV,EAAK8U,+BAIxCnM,GAAEqK,MAAShP,IAAA,qBACT,OAASnC,GAAE6L,MAAM1N,KAAKyU,oBAAqB,SAAClQ,EAAYvF,GACtD,QAAOuF,IACDA,YAAsBf,GAAee,EAAWyO,MAC7ChT,EAAKwU,eAAexV,GAAKgU,UAItCrK,EAAE0M,GAAMrR,IAAA,WACN,MAAShE,MAAKuU,OAGhBL,EAAArM,UAAEiN,QAAO,qBACP9U,MAAOsV,yBACPzT,EAAImD,KAAKhF,KAAK2U,kBAAmB,SAAAY,GAAYA,MAC7C1T,EAAImD,KAAKhF,KAAKqU,aAAc,SAAC9P,EAAYvF,GAASgB,EAAKwV,YAAYxW,KACnEgB,KAAO4U,KAAKa,YAGdvB,EAAArM,UAAEmN,qBAAoB,qBACpB,IAAOhV,KAAKoU,OAAZ,CACA,IAAO1T,GAAM1B,KAAOgB,MAAKqU,aACvB,GAAMrV,IAAOgB,GAAKoU,OAChB,KAAQ,IAAItR,OAAM,kDAAkD9D,EAGxEkI,QAASwO,iBAAiB1V,KAAKoU,OAAQvS,EAAE4B,UAAUzD,KAAKqU,aAAc,SAAC9P,EAAYvF,GAAK,OACtF2W,cAAgB,EAAMC,YAAY,EAAM5R,IAAK,WAAG,MAAGhE,GAAK4U,KAAK5V,UAIjEkV,EAAArM,UAAEyN,uBAAsB,qBACftV,MAAKoU,QACZvS,EAAImD,KAAKhF,KAAKqU,aAAc,SAAC9P,EAAYvF,SAC9BgB,GAAKoU,OAAOpV,MAIzBkV,EAAArM,UAAEoN,wBAAuB,SAACjW,EAAKwM,GAC7B,GAAQqK,GAAS7V,KAAK8V,mBAAmBjP,KAAK7G,KAAMwL,GAC5C8D,EAAStP,KAAK+V,0BAA0BlP,KAAK7G,KAAMhB,EAAKwM,EAGhExL,MAAO4U,KAAKhO,OAAOiP,EAAQvG,GAAS0G,WAAYhQ,EAAQF,OAAQmQ,MAAM,IAChEjQ,EAAQF,SACL9F,KAAK2U,oBAAmB3U,KAAK2U,sBACpC3U,KAAO2U,kBAAkB1S,KAAK+D,EAAQO,MAAMsP,EAAQvG,GAAQ,MAIhE4E,EAAArM,UAAEiO,mBAAkB,SAACtK,GACnB,MAASlI,GAAYkI,EAAGtK,KAAKlB,KAAKoU,UAGpCF,EAAArM,UAAEkO,0BAAyB,SAAC/W,EAAKuG,GAC/B,GAAQ2Q,GAAgBrU,EAAE2C,WAAWe,GAASA,EAAMvF,KAAKoU,QAAU7O,EAC3D4Q,EAAgBnW,KAAKyU,oBAAoBzV,EACjD,MAAMmX,IAAkBD,GACpBA,YAA2B1S,IAAU0S,EAAc/D,QAAQgE,IAD/D,CAEA,IAAOD,EAEL,WADAlW,MAAOwV,YAAYxW,EAGfkX,aAAyB1S,KAAW3B,EAAEuU,IAAIpW,KAAKwU,eAAgBxV,IACnEgB,KAAOwV,YAAYxW,GACnBgB,KAAOkV,SAASlW,EAAKkX,IAErBlW,KAAOwU,eAAexV,GAAKqX,mBAAmBH,GAEhDlW,KAAOyU,oBAAoBzV,GAAOkX,IAGpChC,EAAArM,UAAEwO,mBAAkB,SAAC/R,aACnBzC,GAAImD,KAAKV,EAAa,SAACC,EAAYvF,GACjC6M,EAAOkK,0BAA0B/W,EAAKuF,KAExC1C,EAAImD,KAAKhF,KAAKqU,aAAc,SAAC9P,EAAYvF,GAChC6C,EAAEuU,IAAI9R,EAAatF,IAAMgB,EAAK+V,0BAA0B/W,KAEjEgB,KAAOqU,aAAe/P,GAGxB4P,EAAArM,UAAEqN,SAAQ,SAAClW,EAAKuF,aAEd,IADAvE,KAAOyU,oBAAoBzV,GAAOuF,EAC3BA,EACP,GAAMA,YAAsB8M,GAAW,CACrCrR,KAAOuU,MAAMvV,GAAOuF,CACpB,IAAQ+R,GAAWtW,KAAKoU,OAASpU,KAAKuW,gBAAgB1P,KAAK7G,KAAMhB,GAAO,IACxEgB,MAAO0U,aAAa1V,GAAOgB,KAAKgR,MAAMwF,iBAAiBjS,EAAY+R,EAAUtW,KAAKsU,aAC3E,IAAI/P,YAAsB+N,GAAO,CACxCtS,KAAOuU,MAAMvV,GAAOuF,CACpB,IAAQ+R,GAAWtW,KAAKoU,OAASpU,KAAKyW,kBAAkB5P,KAAK7G,KAAMhB,GAAO,IAC1EgB,MAAO0U,aAAa1V,GAAOgB,KAAKgR,MAAM0F,aAAanS,EAAY+R,EAAUtW,KAAKsU,aACvE,CACP,GAAQqC,MAAeC,IACvB5W,MAAOuU,MAAMvV,GAAO4X,CACpB,IAAQC,GAAe7W,KAAKwU,eAAexV,GACzC,GAAMkV,GAAUyC,EAAUpS,EAAYvE,KAAKgR,MAAOhR,KAAKsU,QAASsC,EAClE,IAAM5W,KAAKoU,OAIT,GAAQmB,GAAUvV,KAAK0U,aAAa1V,GAAOgB,KAAKgR,MAAMkB,MAAM3L,MAC1D,WAAK,MAAGsQ,GAAa7D,OACrB,SAAE8D,GACOA,IACPvB,UACSvV,GAAK0U,aAAa1V,GAC3B6V,EAAMzF,IAAIpP,EAAK4U,KAAKmC,MAAO/X,EAAK2X,GAChC3Q,EAAUG,cAOpB+N,EAAArM,UAAE2N,YAAW,SAACxW,SACHgB,MAAKuU,MAAMvV,GACdgB,KAAKoU,QAAQpU,KAAKuW,gBAAgBvX,EAAK0J,QACvC7G,EAAEuU,IAAIpW,KAAKwU,eAAgBxV,KAC/BgB,KAAOwU,eAAexV,GAAK8V,gBAClB9U,MAAKwU,eAAexV,IAEzBgB,KAAK0U,aAAa1V,IAAMgB,KAAK0U,aAAa1V,WACvCgB,MAAK0U,aAAa1V,SAClBgB,MAAKyU,oBAAoBzV,IAGpCkV,EAAArM,UAAE0O,gBAAe,SAACvX,EAAKuG,GACfvF,KAAK4U,KAAK5V,KAASuG,IACvBsP,EAAMzF,IAAIpP,KAAK4U,KAAKmC,MAAO/X,EAAKuG,GAChCS,EAAUG,WAId+N,EAAArM,UAAE4O,kBAAiB,SAACzX,EAAKgY,cACjBC,GAAU,CACTjX,MAAK4U,KAAK5V,KACf6V,EAAMzF,IAAIpP,KAAK4U,KAAKmC,MAAO/X,MAC3BiY,GAAY,EAEd,IAAQN,GAAW3W,KAAK4U,KAAK5V,EAC7B,KAAO0B,GAAMwW,KAAYP,GAChBA,EAAS3T,eAAekU,KACxBrV,EAAEsV,SAASH,EAAWE,KAC3BrC,EAAMuC,OAAOT,EAAUO,GACvBD,GAAY,GAIhB,KAAoB,GADd5S,GACc7C,EAAA,EAAAC,EAAIzB,KAAKyU,oBAAoBzV,GAAKiG,KAAKoS,MAAM,KAAI7V,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACrE,GADWI,GAAOH,EAAAD,EAChB6C,GAASzC,EAAUyC,EAAOzC,GAAW5B,EAAKgR,MAAMsG,KAEpD,IAAqB,GAAApH,GAAA,EAAAC,EAAI6G,EAAS9G,EAAAC,EAAAzO,OAAAwO,GAAA,EAAE,CAClC,GADWgH,GAAQ/G,EAAAD,EACbyG,GAAS3T,eAAekU,KAC9BrC,EAAMzF,IAAIuH,EAAUO,EAAU7S,EAAO6S,IACrCD,GAAY,GAERA,GAASjR,EAAQG,gDIhMzBzF,IAAM6W,IACJ,OAAQ,QAAS,OAAQ,MAAO,SAAU,SAAU,UAAW,OAAQ,OAGnEC,KAGAC,EAAW,SACHC,EAAWC,EAAO/X,GAC9BI,KAAO4X,WAAaF,EACpB1X,KAAO6X,OAASF,EAChB3X,KAAO8X,UAAYlY,EACnBI,KAAO+X,QAAS,EAGlBN,GAAA5P,UAAEmQ,SAAQ,qBACRhY,MAAOM,SACPN,KAAO+X,QAAS,CAChB,IAAQE,GAAUC,KAAKC,MAAQnY,KAAK4X,WAAWQ,eAC/CpY,MAAOqY,WAAavK,WAAW9N,KAAK6X,OAASI,EAAS,WACpDpM,EAAOkM,QAAS,EAChBlM,EAAOiM,UAAU9X,EAAK4X,eAI1BH,EAAA5P,UAAEvH,OAAM,WACAN,KAAK+X,QAAQ/X,KAAK8X,UAAU9X,KAAK4X,YACjC5X,KAAKqY,YAAYC,aAAatY,KAAKqY,YAK3C,IAAME,GAAU,SACFC,EAAMlS,EAAQmS,GAC1BzY,KAAO0Y,MAAQF,EACfxY,KAAOsU,QAAUhO,EACjBtG,KAAO2Y,QAAUF,EACjBzY,KAAO4Y,QAAS,EAChB5Y,KAAO6Y,UAAW,EAClB7Y,KAAO8Y,QAAS,EAChB9Y,KAAO+Y,OAAS,EAChB/Y,KAAOoY,gBAAkBF,KAAKC,MAC9BnY,KAAOgZ,+FAGTrQ,GAAE6P,KAAQxU,IAAA,WAAI,MAAOhE,MAAK0Y,OAC1B/P,EAAErC,OAAUtC,IAAA,WAAI,MAAOhE,MAAKsU,SAC5B3L,EAAE8P,OAAUzU,IAAA,WAAI,MAAOhE,MAAK2Y,SAC5BhQ,EAAEqK,MAAShP,IAAA,WAAI,MAAOhE,MAAK4Y,QAC3BjQ,EAAEsQ,QAAWjV,IAAA,WAAI,MAAOhE,MAAK6Y,UAC7BlQ,EAAEuQ,MAASlV,IAAA,WAAI,MAAOhE,MAAK8Y,QAC3BnQ,EAAEwQ,MAASnV,IAAA,WAAI,MAAOhE,MAAK+Y,QAC3BpQ,EAAEtH,MAAS2C,IAAA,WAAI,MAAOhE,MAAKoZ,QAE3Bb,EAAA1Q,UAAEwR,OAAM,SAAC1B,EAAO/X,GACd,GAAQgQ,GAAS,GAAI6H,GAAWzX,KAAM2X,EAAO/X,EAC7CI,MAAOgZ,aAAa/W,KAAK2N,GACzBA,EAASoI,YAGXO,EAAA1Q,UAAEyR,YAAW,SAAC/T,GACZvF,KAAO6Y,SAAWtT,GAGpBgT,EAAA1Q,UAAE0R,UAAS,SAAChU,GACVvF,KAAO8Y,OAASvT,GAGlBgT,EAAA1Q,UAAE2R,WAAU,WACVxZ,KAAO4Y,QAAS,EAChB5Y,KAAO+Y,OAAS,EAChBlX,EAAImD,KAAKhF,KAAKgZ,aAAc,SAAApJ,GAAO,MAAGA,GAAOtP,YAG/CiY,EAAA1Q,UAAE4R,YAAW,WACXzZ,KAAO4Y,QAAS,EAChB5Y,KAAOoY,gBAAkBF,KAAKC,MAC9BtW,EAAImD,KAAKhF,KAAKgZ,aAAc,SAAApJ,GAAO,MAAGA,GAAOoI,cAG/CO,EAAA1Q,UAAE6R,gBAAe,WACf1Z,KAAO+Y,gDAKT,IAAqBY,GAAW,SAClBC,GACZ5Z,KAAO6Z,QAAUD,EACjB5Z,KAAOoJ,cACPlC,OAASC,OAAOnH,MAGlB2Z,GAAA9R,UAAEiS,UAAS,SAACC,EAAcC,GACxB,IAAOnY,EAAEsV,SAASI,EAAgBwC,GAChC,KAAQ,IAAIjX,OAAM,qCAAuCiX,EAE3D,IAAQE,GACNpY,EAAIqY,WAAWrY,EAAEa,KAAKsX,IAAa,WAAY,UAAW,UAAW,aACvE,IAAMC,EAAgBvY,OACpB,KAAQ,IAAIoB,OAAM,qCAAuCmX,EAAgB/X,KAAK,MAEhF,IAAQiY,IACNC,SAAYpa,KAAKqa,aAAa,WAAYN,EAAcC,EAAUI,UAClEE,QAAWta,KAAKqa,aAAa,UAAWN,EAAcC,EAAUM,SAChEC,QAAWva,KAAKqa,aAAa,UAAWN,EAAcC,EAAUO,SAChEC,UAAaxa,KAAKqa,aAAa,YAAaN,EAAcC,EAAUQ,WAEtE,OAASxa,MAAKya,iBAAiB5T,KAAK7G,KAAM+Z,EAAcI,IAG1DR,EAAA9R,UAAEwS,aAAY,SAACK,EAAOX,EAAcna,GAClC,GAAOA,EAAP,CACA,GAAQZ,GAAMgB,KAAK2a,iBAAiBD,EAAOX,GACnCa,EAAkBjb,EAAoBC,EAE9C,QADGI,KAAKoJ,WAAWpK,KAASgB,KAAKoJ,WAAWpK,QAAYiD,KAAK2Y,GACpDA,IAGXjB,EAAA9R,UAAEgT,gBAAe,SAACH,EAAOX,EAAca,GACrC,GAAOA,EAAP,CACA,GAAQ5b,GAAMgB,KAAK2a,iBAAiBD,EAAOX,EACrC/Z,MAAKoJ,WAAWpK,IAAM6C,EAAEiZ,KAAK9a,KAAKoJ,WAAWpK,GAAM4b,KAG3DjB,EAAA9R,UAAE4S,iBAAgB,SAACV,EAAcI,aAC/BtY,GAAImD,KAAKmV,EAAkB,SAACS,EAAiBF,GAC3C7O,EAAOgP,gBAAgBH,EAAOX,EAAca,MAIhDjB,EAAA9R,UAAEkT,cAAa,SAACL,EAAOM,EAAe1U,GACpC,SAAY6F,OACVnM,KAAOoJ,WAAWpJ,KAAK2a,iBAAiBD,EAAOpU,KAAYkR,EAC3DxX,KAAOoJ,WAAWpJ,KAAK2a,iBAAiBD,EAAOM,KAAmBxD,EAClExX,KAAOoJ,WAAWpJ,KAAK2a,iBAAiBD,EAAO,SAAWlD,IAI9DmC,EAAA9R,UAAE8S,iBAAgB,SAACD,EAAOX,GACxB,MAASW,GAAQ,IAAIX,GAGvBJ,EAAA9R,UAAEoT,QAAO,SAACD,EAAe1U,EAAQmS,EAAQyC,aACvCA,GAAavb,EAAoBub,EACjC,IAAQxD,GAAY1X,KAAKmb,gBAAgBH,EAAe1U,EAAQmS,EAChE,OAASzY,MAAKob,MAAM1D,GAAW9W,KAAK,WAClC,GAAQya,GAAqB,WAC3B,MAASH,KAAWpa,MAAM,SAAAZ,GAAE,MAAGF,GAAKsb,YAAY5D,EAAWxX,GAAGU,KAAKya,KAErE,OAASA,OACNza,KAAK,SAAAQ,GAAO,MAAGpB,GAAKub,IAAI7D,GAAW9W,KAAK,WAAG,MAAGQ,QAGrDuY,EAAA9R,UAAEsT,gBAAe,SAACH,EAAe1U,EAAQmS,GACvC,MAAS,IAAIF,GAAUyC,EAAe1U,EAAQmS,IAGhDkB,EAAA9R,UAAEuT,MAAK,SAAC1D,aACN,OAAS7X,SAAQ2N,IAAI3L,EAAEwD,IACrBrF,KAAO+a,cAAc,WAAYrD,EAAUc,KAAMd,EAAUpR,QAC3D,SAAE8T,GAAS,MAAGA,GAAS1C,MACpB9W,KAAK,WACD8W,EAAUwB,OAAOxB,EAAU4B,aAAY,IAC3C,SAAApZ,GAAE,MAAGF,GAAKub,IAAI7D,EAAWxX,MAGhCyZ,EAAA9R,UAAE2T,UAAS,SAAC9D,GACVA,EAAY8B,cAGdG,EAAA9R,UAAE4T,WAAU,SAAC/D,GACXA,EAAY+B,eAGdE,EAAA9R,UAAE6T,MAAK,SAAChE,EAAWrW,GAGjB,MAFAqW,GAAYgC,kBACZhC,EAAY0B,OAAS/X,EACZxB,QAAQ2N,IAAI3L,EAAEwD,IACrBrF,KAAO+a,cAAc,UAAWrD,EAAUc,KAAMd,EAAUpR,QAC1D,SAAEiU,GAAQ,MAAGA,GAAQ7C,EAAWrW,MAC7BT,KAAK,SAAA+a,GACR,GAAQC,GAAW/Z,EAAEyR,KAAKqI,EAE1B,OADMC,UAAiBlE,GAAU0B,OACxBwC,KAIbjC,EAAA9R,UAAEyT,YAAW,SAAC5D,EAAWrW,aACvB,OAASrB,MAAK0b,MAAMhE,EAAWrW,GAAOT,KAAK,SAAAQ,GACzC,IAAOA,EAAQ,MAAOpB,GAAKub,IAAI7D,EAAWrW,IACvC,SAAAnB,GAAE,MAAGF,GAAKub,IAAI7D,EAAWxX,MAGhCyZ,EAAA9R,UAAE0T,IAAG,SAAC7D,EAAWrW,aACf,KAAMqW,EAAUwB,MAIhB,MAHAxB,GAAY4B,aAAY,GACxB5B,EAAY6B,WAAU,GAChBlY,IAAOqW,EAAU0B,OAAS/X,GACvBxB,QAAQ2N,IAAI3L,EAAEwD,IACrBrF,KAAO+a,cAAc,UAAWrD,EAAUc,KAAMd,EAAUpR,QAC1D,SAAEgU,GAAQ,MAAGA,GAAQ5C,MAClB9W,KACH,WAAK,MAAGZ,GAAK6b,UAAUnE,IACvB,SAAExX,GAEA,MADAwX,GAAY0B,OAASlZ,EACZF,EAAK6b,UAAUnE,MAK9BiC,EAAA9R,UAAEgU,UAAS,SAACnE,GAEV,GADA1X,KAAOwb,UAAU9D,GACXA,EAAUrW,MAAO,CACrB,GAAQya,GAAqB9b,KAAK+a,cAAc,YAAarD,EAAUc,KAAMd,EAAUpR,OACvF,OAAStG,MAAK6Z,QAAQnN,WAAWgL,EAAUrW,OAAOT,KAAK,WAMrD,MALMkb,IACJhO,WAAa,WACXjM,EAAImD,KAAK8W,EAAoB,SAAAtB,GAAU,MAAGA,GAAU9C,MACjD,GAEE7X,QAAQM,OAAOuX,EAAUrW,UC/NxCX,IAAMqb,GAAW,mEAEIC,EAAa,WAEhChc,KAAOic,mBAAqB,EAC5Bjc,KAAOkc,qBAGTF,GAAAnU,UAAEsU,kBAAiB,SAAChE,aAClBA,GAAQA,GAAOD,KAAKC,KAGpB,KAAOxW,GAFCya,GAAQ,GAAI3P,OAAM,IACpB4P,EAASlE,EACJ3W,EAAI,EAAGA,GAAK,EAAGA,IACxB4a,EAAQ5a,GAAKua,EAASha,OAAgB,GAATsa,GAC7BA,EAAWC,KAAKC,MAAMF,EAAS,GAEjC,IAAMlE,IAAQnY,KAAKic,mBAAoB,CAErC,IADA,GAAMza,GAAI,GACDA,GAAK,GAAmC,KAA9BxB,KAAKkc,kBAAkB1a,IACxCqK,EAAOqQ,kBAAkB1a,GAAK,EAC9B0O,GAAO,CAET,IAAM1O,KAAM,EACV,KAAQ,IAAIsB,OAAM,yEAEpB9C,MAAOkc,kBAAkB1a,IAAM,MACxB,CACPxB,KAAOic,mBAAqB9D,CAC5B,KAAOxW,GAAIH,GAAI,EAAGA,EAAI,GAAIA,IAExBqK,EAAOqQ,kBAAkB1a,GAAK8a,KAAKC,MAAMD,KAAKE,UAAYhb,EAAI,GAAK,KAGvE,IAAOG,GAAIH,GAAI,EAAGA,EAAI,GAAIA,IACxB4a,EAAQ5a,EAAI,GAAKua,EAAS/b,EAAKkc,kBAAkB1a,GAEnD,OAAS4a,GAAMla,KAAK,ICnCtB,IAAqBua,GAAS,SAChBpO,EAASuL,GACrB5Z,KAAO0c,SAAWrO,EAClBrO,KAAO6Z,QAAUD,EACjB5Z,KAAO4U,KAAO,GAAIC,IAAKzI,MAAOuQ,OAC5BC,UAAalU,OAAWmU,WAAY,EAAGC,KAAMpU,OAAWqU,OAAQrU,OAChEsU,cAAe,SAACC,cACNje,EAAM,MAAQie,CACtB,KAAOjd,KAAKgD,eAAehE,GAAM,CAC/B,GAAQsQ,GAAS,WACfzD,EAAO7M,GAAOkZ,KAAKC,MAAQnY,EAAK6c,WAChCK,EAAuB/W,SAEzBmJ,KACAlF,YAAc,WAAG,MAAGkF,IAAQ2N,GAE9B,MAASjd,MAAKhB,QAIZke,EAAqBpX,QACzB9F,KAAO4U,KAAKhO,OAAO,QAASsW,EAAqB/W,QAAS8P,MAAM,IAGlE2D,EAAS/K,OAAOR,EAASrO,KAAKmd,kBAAmBnd,MAEjDA,KAAOod,qBAAqB,mBAAoB,cAChDpd,KAAOod,qBAAqB,YAAa,aACzClW,OAASC,OAAOnH,kBAGlB2I,GAAE2O,KAAQtT,IAAA,WACR,MAAShE,MAAK4U,KAAKmC,MAAM4F,OAG3BF,EAAA5U,UAAEiN,QAAO,WACP9U,KAAO6Z,QAAQ9K,QAAQ/O,KAAK0c,SAAU1c,KAAKmd,kBAAmBnd,MAC9DA,KAAO4U,KAAKa,YAGdgH,EAAA5U,UAAEsV,kBAAiB,SAACL,GAClB9c,KAAOsX,KAAKwF,KAAOA,EACnB9c,KAAOsX,KAAKyF,OAASD,GAAQA,EAAKxP,KAGpCmP,EAAA5U,UAAEuV,qBAAoB,SAACC,EAAUC,cACvBC,EAAiBvd,KAAa,SAAA,UAAUqd,CAChDrd,MAAO6Z,QAAQtK,GAAGgO,EAAaA,EAAa,KAAM,QAAS,SAAAC,GACzD3R,EAAOyL,KAAKgG,GAAaE,EAAKjY,+CC9ClC,IAAMkY,GAAa,SACLC,EAAS7J,GACrB7T,KAAO2d,SAAWD,EAClB1d,KAAO4d,OAAS/J,EAChB7T,KAAO6d,cACP7d,KAAO8d,SACP9d,KAAO+d,KAAO/d,KAAK2d,SAASjB,SAAW7I,EAAM5O,KAC7CjF,KAAOge,UAAYnK,EAAM5O,KAAKoS,MAAM,KACpCrX,KAAOie,YAAa,EACpBje,KAAOgT,OAAQ,EAGjByK,GAAA5V,UAAEqW,OAAM,SAACxG,EAAWyG,GAClBne,KAAOoe,UACPpe,KAAO6d,WAAW5b,MAAMyV,UAAAA,EAAWyG,aAAAA,IAC7BA,GAAcA,EAAane,KAAK8d,QAGxCL,EAAA5V,UAAEwW,OAAM,SAAC3G,GACP,GAAQtU,GAAIvB,EAAEyc,UAAUte,KAAK6d,YAAanG,UAAAA,GAE1C,OADMtU,IAAK,GAAGpD,KAAK6d,WAAW7b,OAAOoB,EAAG,GAC/BpD,KAAK6d,WAAWnc,QAG3B+b,EAAA5V,UAAEuW,QAAO,WACDpe,KAAKie,aACXje,KAAO2d,SAAS9D,QAAQtK,GACtBvP,KAAO4d,OAAO3e,WAAYe,KAAK+d,KAAM/d,KAAK4d,OAAO1K,YAAa,QAC9DlT,KAAOue,gBAAiBve,KAAKwe,aAAa3X,KAAK7G,KAAK4d,OAAO3Y,MAAOjF,MAAOye,MAAM,IACjFze,KAAOie,YAAa,IAGtBR,EAAA5V,UAAEiN,QAAO,qBACP9U,MAAO2d,SAAS9D,QAAQ9J,IACtB/P,KAAO4d,OAAO3e,WAAYe,KAAK+d,KAAM/d,KAAK4d,OAAO1K,YAAa,QAASlT,KAAKue,gBAC5Eve,MACFA,KAAOie,YAAa,EACpBje,KAAOgT,OAAQ,EACfkK,EAAuB/W,QACvB,KAAgB,GAAA3E,GAAA,EAAAC,EAAIzB,KAAK8d,MAAKtc,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAC9B,GADWxC,GAAGyC,EAAAD,EACZxB,GAAK2d,SAASe,kBAAkB1e,EAAKge,UAAU7R,OAAOnN,MAI5Dye,EAAA5V,UAAE0W,gBAAe,SAACf,aAGhB,IAAOxd,KAAK6d,WAAWnc,QAAW1B,KAAKie,WAAvC,CACA,GAAQU,GAAc3e,KAAK4e,YAAYpB,EAEvC,IADAxd,KAAO2d,SAASkB,eAAerB,IACxBxd,KAAKgT,MAAO,CACjBhT,KAAOgT,OAAQ,EACfkK,EAAuB/W,QACvB,KAAqB,GAAA3E,GAAA,EAAAC,EAAIzB,KAAK6d,WAAUrc,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACxC,GADWoN,GAAQnN,EAAAD,EACjBxB,GAAK2d,SAASmB,YAAYtD,UAAU5M,EAAS8I,YAGnD,GAAMiH,EACJ,IAAqB,GAAAzO,GAAA,EAAAC,EAAInQ,KAAK6d,WAAU3N,EAAAC,EAAAzO,OAAAwO,GAAA,EAAE,CACxC,GADWtB,GAAQuB,EAAAD,EACbtB,GAASuP,cAAcvP,EAASuP,aAAaQ,MAKzDlB,EAAA5V,UAAE+W,YAAW,SAACpB,MACNmB,SACN,IAAMnB,EAAKvY,OAASjF,KAAK4d,OAAO3Y,KAG9B,GAFA0Z,EAAgB9c,EAAEa,KAAK8a,EAAKjY,OAC5BoZ,EAAcI,OACRld,EAAEsQ,QAAQnS,KAAK8d,MAAOa,GAC1BA,EAAgB,SACT,CACP,IAAgB,GAAAnd,GAAA,EAAAC,EAAII,EAAEqY,WAAWyE,EAAa3e,KAAK8d,OAAMtc,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACzD,GADWxC,GAAGyC,EAAAD,EACZxB,GAAK2d,SAASqB,gBAAgBhf,EAAKge,UAAU7R,OAAOnN,IAExD,IAAgB,GAAAkR,GAAA,EAAAC,EAAItO,EAAEqY,WAAWla,KAAK8d,MAAOa,GAAYzO,EAAAC,EAAAzO,OAAAwO,GAAA,EAAE,CACzD,GADWlR,GAAGmR,EAAAD,EACZlQ,GAAK2d,SAASe,kBAAkB1e,EAAKge,UAAU7R,OAAOnN,IAE1DgB,KAAO8d,MAAQa,MAEV,IAAInB,EAAKvY,KAAK/F,QAAQ,WAAW,MAAQc,KAAK4d,OAAO3Y,KAAM,CAClE,GAAQga,GAASpd,EAAEsV,SAASnX,KAAK8d,MAAON,EAAKxe,IACvCwe,GAAKjY,MACF0Z,IACLjf,KAAO2d,SAASqB,gBAAgBhf,KAAKge,UAAU7R,OAAOqR,EAAKxe,MAC3DgB,KAAO8d,MAAM7b,KAAKub,EAAKxe,KACvBgB,KAAO8d,MAAMiB,OACbJ,EAAgB3e,KAAK8d,OAGjBmB,IACJjf,KAAO2d,SAASe,kBAAkB1e,KAAKge,UAAU7R,OAAOqR,EAAKxe,MAC7D6C,EAAIiZ,KAAK9a,KAAK8d,MAAON,EAAKxe,KAC1BgB,KAAO8d,MAAMiB,OACbJ,EAAgB3e,KAAK8d,OAI3B,MAASa,IAGXlB,EAAA5V,UAAE2W,aAAY,SAACnd,aACNrB,MAAK6d,WAAWnc,QAAW1B,KAAKie,aACvCje,KAAOie,YAAa,EACpBpe,QAAU2N,IAAI3L,EAAEwD,IAAIrF,KAAK6d,WAAY,SAAAjP,GAEnC,MADA/C,GAAO8R,SAASmB,YAAYrD,WAAW7M,EAAS8I,WACvC1X,EAAK2d,SAASmB,YAAYpD,MAAM9M,EAAS8I,UAAWrW,GAAOP,MAAM,SAAAZ,GAExE,MADA0O,GAAW8I,UAAUlC,YAAYtV,IACxB,OAEPU,KAAK,SAAA+a,GACT,GAAM9Z,EAAEyR,KAAKqI,GACL3b,EAAK6d,WAAWnc,QAAQ1B,EAAKoe,cAEnC,KAAqB,GAAA5c,GAAA,EAAAC,EAAIzB,EAAK6d,WAAUrc,EAAAC,EAAAC,OAAAF,GAAA,EAAjC,CAAAd,GAAMkO,GAAQnN,EAAAD,EAAqBoN,GAAS8I,UAAUlC,YAAYnU,OAO/E,IAAM6d,GAAK,SACGxB,EAASzY,GACrBjF,KAAO2d,SAAWD,EAClB1d,KAAOiF,KAAOA,EACdjF,KAAOmD,IAAMnD,KAAK2d,SAASjB,SAAWzX,EACtCjF,KAAOmf,cACPnf,KAAOof,WAAa,EACpBpf,KAAOqf,WAAY,EACnBrf,KAAOgT,OAAQ,EACfhT,KAAOuR,mCAGT5I,GAAE7C,OAAU9B,IAAA,WACV,MAAShE,MAAKsf,OAAStf,KAAKof,YAG9BzW,EAAE2W,MAAStb,IAAA,WACT,MAAShE,MAAKmf,WAAWzd,QAG3Bwd,EAAArX,UAAE0X,OAAM,SAACC,aACP,KAAOA,GAAQxf,KAAKsf,MAAO,CACzB,GAAMtf,KAAKqf,UAAW,MACtBxd,GAAImD,KAAKhF,KAAKmf,WAAY,SAAAM,GAAOzf,EAAK2d,SAASmB,YAAYrD,WAAWgE,KACtEzf,KAAO2d,SAAS9D,QAAQtK,GACtBvP,KAAOmD,IAAKnD,KAAKmD,IAAK,KAAM,QAASnD,KAAKue,gBAAiBve,KAAKwe,aAAa3X,KAAK7G,MAClFA,MAASye,MAAM,IACjBze,KAAOqf,WAAY,MAEnBxd,GAAImD,KAAKhF,KAAKuR,SAAU,SAAAD,GAAUA,EAAMiO,YAI5CL,EAAArX,UAAE6X,SAAQ,SAACF,IACFA,GAAQxf,KAAKqf,WAClBrf,KAAO2d,SAAS9D,QAAQ9J,IAAI/P,KAAKmD,IAAKnD,KAAKmD,IAAK,KAAM,QAASnD,KAAKue,gBAAiBve,MACrFA,KAAOqf,WAAY,EACnBrf,KAAO2f,mBAAmB,SAAAC,GAClBA,EAAK5M,QACT4M,EAAO5M,OAAQ,EACfkK,EAAuB/W,aAI3BtE,EAAImD,KAAKhF,KAAKuR,SAAU,SAAAD,GAAUA,EAAMoO,cAI5CR,EAAArX,UAAE0W,gBAAe,SAACf,aACTxd,MAAKqf,WAAcrf,KAAK2d,SAASkC,eAAerC,EAAKvY,QAC5DjF,KAAO2d,SAASkB,eAAerB,GACxBxd,KAAKgT,OAASwK,EAAKvY,OAASjF,KAAKiF,OACtCjF,KAAOgT,OAAQ,EACfkK,EAAuB/W,SACvBnG,KAAO0f,UAAS,GAChB1f,KAAO2f,mBAAmB,SAAAC,GACxB,IAAe,GAAApe,GAAA,EAAAC,EAAIzB,EAAKmf,WAAU3d,EAAAC,EAAAC,OAAAF,GAAA,EAA3B,CAAAd,GAAM+e,GAAEhe,EAAAD,EAAqBxB,GAAK2d,SAASmB,YAAYtD,UAAUiE,SAK9EP,EAAArX,UAAE2W,aAAY,SAACnd,aACb,IAAOrB,KAAKsf,OAAUtf,KAAKqf,UAS3B,MARArf,MAAOqf,WAAY,EACnBrf,KAAO2f,mBAAmB,SAAAC,GAClBA,EAAK5M,QACT4M,EAAO5M,OAAQ,EACfkK,EAAuB/W,SAEzB,KAAe,GAAA3E,GAAA,EAAAC,EAAIzB,EAAKmf,WAAU3d,EAAAC,EAAAC,OAAAF,GAAA,EAA3B,CAAAd,GAAM+e,GAAEhe,EAAAD,EAAqBxB,GAAK2d,SAASmB,YAAYrD,WAAWgE,MAElE5f,QAAQ2N,IAAI3L,EAAEwD,IAAIrF,KAAKmf,WAAY,SAAAM,GAC1C,MAASzf,GAAK2d,SAASmB,YAAYpD,MAAM+D,EAAIpe,GAAOP,MAAM,SAAAZ,GAExD,MADAuf,GAAKjK,YAAYtV,IACR,OAEPU,KAAK,SAAA+a,GACT,GAAM9Z,EAAEyR,KAAKqI,GACL3b,EAAKsf,OAAOtf,EAAKuf,aAEvB,KAAe,GAAA/d,GAAA,EAAAC,EAAIzB,EAAKmf,WAAU3d,EAAAC,EAAAC,OAAAF,GAAA,EAA3B,CAAAd,GAAM+e,GAAEhe,EAAAD,EAAqBie,GAAGjK,YAAYnU,OAMzD6d,EAAArX,UAAE8X,mBAAkB,SAACG,GACnBA,EAAW9f,MACX6B,EAAImD,KAAKhF,KAAKuR,SAAU,SAAAD,GAAM,MAAGA,GAAMqO,mBAAmBG,MAG5DZ,EAAArX,UAAEkY,8BAA6B,SAACC;AAM9B,MALOA,KAAOA,MACdA,EAAQhgB,KAAKiF,MAAQjF,KAAK8F,OACnB9F,KAAK8F,QACVjE,EAAImD,KAAKhF,KAAKuR,SAAU,SAAAD,GAAUA,EAAMyO,8BAA8BC,KAE/DA,yCAKX,IAAqBC,GAAQ,SACf5R,EAASuL,EAAQsG,EAAYC,EAAeC,GACxDpgB,KAAO0c,SAAWrO,EAClBrO,KAAO6Z,QAAUD,EACjB5Z,KAAO8e,YAAcoB,EACrBlgB,KAAO6e,eAAiBsB,EACxBngB,KAAOqgB,WAAaD,EACpBpgB,KAAO4U,KAAO,GAAIC,IAAKzI,MAAOkL,KAAM,GAAI4H,GAAKlf,KAAM,KAAMsgB,oBACzDpZ,OAASC,OAAOnH,sCAGlB+S,IAAEwN,MAASvc,IAAA,WAAI,MAAOhE,MAAK4U,KAAK0C,MAChCvE,GAAEyN,eAAkBxc,IAAA,WAAI,MAAOhE,MAAK4U,KAAK0L,eAEzCL,EAAApY,UAAEiN,QAAO,WACPjT,EAAImD,KAAKhF,KAAKwgB,eAAgB,SAAAC,GAAiBA,EAAa3L,YAC5D9U,KAAOugB,MAAMb,WACb1f,KAAO4U,KAAKa,YAGdwK,EAAApY,UAAE6Y,OAAM,SAACzb,EAAMyS,GACb,MAAS1X,MAAKgf,gBAAgB/Z,EAAKoS,MAAM,KAAMK,IAGjDuI,EAAApY,UAAEmX,gBAAe,SAACzd,EAAUmW,GAI1B,IAAoB,GAHdkI,UACAe,GAAcjJ,EACd1E,GAAQ,EACMxR,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,GACZ8P,EAAQ1P,EAAUge,EAAKrO,UAAYqO,EAAKrO,SAAS3P,GAAW5B,EAAKugB,KAChEjP,KACLA,EAAU,GAAI4N,GAAKlf,GAAuB,MAAd4f,EAAK3a,KAAe,GAAK2a,EAAK3a,MAAI,IAAIrD,GAClEiT,EAAMzF,IAAIwQ,EAAKrO,SAAU3P,EAAS0P,IAEpCqP,EAAeA,GAAcrP,EAAM+N,UACnCrM,EAAUA,GAAS1B,EAAM0B,MACzB4M,EAAStO,EAELoG,EACJkI,EAAOT,WAAWld,KAAKyV,GAEvBkI,EAAOR,aAEHuB,EACEjJ,GAAa1E,GAAOhT,KAAK8e,YAAYtD,UAAU9D,GAErDkI,EAAOL,UAIXU,EAAApY,UAAE+Y,SAAQ,SAAC3b,EAAMyS,GACf,MAAS1X,MAAK0e,kBAAkBzZ,EAAKoS,MAAM,KAAMK,IAGnDuI,EAAApY,UAAE6W,kBAAiB,SAACnd,EAAUmW,GAG5B,IAAoB,GADdkI,UADEiB,KAEY3Q,EAAA,EAAAzO,EAAIF,EAAQ2O,EAAAzO,EAAAC,OAAAwO,GAAA,EAAE,CAChC,GADWtO,GAAOH,EAAAyO,EAElB,IADE0P,EAAOhe,EAAUge,EAAKrO,UAAYqO,EAAKrO,SAAS3P,GAAW5B,EAAKugB,OAC3DX,EAAM,KACbiB,GAAY5e,KAAK2d,GAEnB,IAAOA,KAAUlI,EAAYkI,EAAKN,MAAQM,EAAKR,YAC7C,KAAQ,IAAItc,OAAM,qBAAqBvB,EAASW,KAAK,KAgBvD,IAdMwV,EACJ7V,EAAIiZ,KAAK8E,EAAKT,WAAYzH,GAE1BkI,EAAOR,aAEH1H,IAAckI,EAAKN,QAMvBM,EAAOL,SACDK,EAAKP,WAAWO,EAAKF,aAEtBE,EAAK9Z,OAAQ,CAClB,IAAOnE,GAAIH,GAAIqf,EAAUnf,OAAS,EAAGF,EAAI,IACvCoe,EAASiB,EAAUrf,GACboe,IAAS5f,EAAKugB,QAASX,EAAK9Z,QAAWjE,EAAEmQ,QAAQ4N,EAAKrO,WAFlB/P,IAG1CqT,EAAMuC,OAAOyJ,EAAUrf,EAAI,GAAG+P,SAAUhQ,EAASC,GAEnDxB,MAAOqgB,WAAW9e,EAASW,KAAK,KAAMlC,KAAK8gB,2BAA2Bvf,MAI1E0e,EAAApY,UAAEkZ,UAAS,SAAClN,EAAO6D,EAAWyG,GAC5B,GAAMsC,GAAezgB,KAAKwgB,eAAe3M,EAAM5U,WACxCwhB,KACLA,EAAiB,GAAIhD,GAAazd,KAAM6T,GACxCgB,EAAMzF,IAAIpP,KAAKwgB,eAAgB3M,EAAM5U,WAAYwhB,IAEnDA,EAAevC,OAAOxG,EAAWyG,IAGnC8B,EAAApY,UAAEmZ,YAAW,SAACnN,EAAO6D,GACnB,GAAQ+I,GAAezgB,KAAKwgB,eAAe3M,EAAM5U,WAC3CwhB,KAAiBA,EAAapC,OAAO3G,KACzC+I,EAAe3L,UACfD,EAAMuC,OAAOpX,KAAKwgB,eAAgB3M,EAAM5U,cAK5CghB,EAAApY,UAAEgY,eAAc,SAAC5a,GAGf,IAAoB,GADd2a,UADEre,EAAW0D,EAAKoS,MAAM,KAEV7V,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADEoe,EAAOhe,EAAUge,EAAKrO,UAAYqO,EAAKrO,SAAS3P,GAAW5B,EAAKugB,OAC3DX,EAAM,OAAO,CACpB,IAAMA,EAAK9Z,OAAQ,OAAO,EAE5B,OAAS,GAGXma,EAAApY,UAAEiZ,2BAA0B,SAACG,GAG3B,IAAoB,GADdrB,UADEre,EAAWM,EAAEC,SAASmf,GAAkBA,EAAe5J,MAAM,KAAO4J,EAExDzf,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADEoe,EAAOhe,EAAUge,EAAKrO,UAAYqO,EAAKrO,SAAS3P,GAAW5B,EAAKugB,OAC3DX,EAAM,MAEf,MAASA,IAAQA,EAAKG,iCAGxBE,EAAApY,UAAEqZ,eAAc,SAACjc,GAGf,IAAoB,GADd2a,UADEre,EAAW0D,EAAKoS,MAAM,KAEV7V,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADEoe,EAAOhe,EAAUge,EAAKrO,UAAYqO,EAAKrO,SAAS3P,GAAW5B,EAAKugB,OAC3DX,EAAM,OAAO,CACpB,IAAMA,EAAK5M,MAAO,OAAO,EAE3B,OAAS,GAGXiN,EAAApY,UAAEoL,aAAY,SAACY,GACb,GAAQ4M,GAAezgB,KAAKwgB,eAAe3M,EAAM5U,WACjD,OAASwhB,IAAgBA,EAAazN,kDN9VpCmO,8HOlBJ,WACE,GAAIC,GAAgBC,EAAQC,CAEA,oBAAhBC,cAA+C,OAAhBA,aAAyBA,YAAYpJ,IAC9E3R,EAAAgb,QAAiB,WACf,MAAOD,aAAYpJ,OAEQ,mBAAZsJ,UAAuC,OAAZA,SAAqBA,QAAQJ,QACzE7a,EAAAgb,QAAiB,WACf,OAAQJ,IAAmBE,GAAY,KAEzCD,EAASI,QAAQJ,OACjBD,EAAiB,WACf,GAAIM,EAEJ,OADAA,GAAKL,IACU,IAARK,EAAG,GAAWA,EAAG,IAE1BJ,EAAWF,KACFlJ,KAAKC,KACd3R,EAAAgb,QAAiB,WACf,MAAOtJ,MAAKC,MAAQmJ,GAEtBA,EAAWpJ,KAAKC,QAEhB3R,EAAAgb,QAAiB,WACf,OAAO,GAAItJ,OAAOyJ,UAAYL,GAEhCA,GAAW,GAAIpJ,OAAOyJ,aAGvBzgB,KAAKlB,MPxBF4hB,IACJhd,QAAQ,EAAMid,SAAS,EAAMC,MAAM,EAAMC,OAAO,EAAM7Q,MAAM,EAC5DrN,aAAa,EAAMme,gBAAgB,EAAMC,cAAc,EACvDC,eAAe,EACfC,QAAQ,GAGJC,MAQAC,GAAM,oMAAA1Z,IACVkZ,QAAW7d,IAAA,WAAI,MAAOmd,IAAyBU,QAAQtc,OACzDoD,GAAEoZ,MAAS/d,IAAA,WAAI,MAAOmd,IAAyBY,MAAMxc,OACrDoD,GAAE/D,OAAUZ,IAAA,WAEV,MADAkD,QAASob,eAAetiB,KAAM,UAAWuF,MAAOvF,KAAK6hB,QAAQjd,SACpD5E,KAAK4E,QAEhB+D,GAAEuI,KAAQlN,IAAA,WAER,MADAkD,QAASob,eAAetiB,KAAM,QAASuF,MAAO,GAAI8L,GAAUrR,KAAK4E,OAAOoM,MAAOhR,KAAK+hB,SAC3E/hB,KAAKkR,MAEhBvI,GAAE4Z,MAASve,IAAA,WAAI,MAAOhE,MAAKkR,MAC3BvI,GAAEmZ,KAAQ9d,IAAA,WAGR,MAFAkD,QAASob,eACPtiB,KAAQ,QAASuF,MAAOlG,EAAYW,KAAK+hB,MAAMriB,MAAMM,KAAK+hB,MAAMS,YAAY,KAAO,MAC5ExiB,KAAK8hB,MAEhBnZ,GAAEoO,MAAS/S,IAAA,WAAI,MAAOhE,OACtB2I,GAAE8Z,OAAUze,IAAA,WAAI,MAAOnC,GAAEmQ,QAAQhS,KAAK+W,QACtCpO,GAAE+Z,MAAS1e,IAAA,WAAI,MAAOnC,GAAEa,KAAK1C,KAAK+W,QAClCpO,GAAEga,QAAW3e,IAAA,WAAI,MAAOnC,GAAEkD,OAAO/E,KAAK+W,QACtCpO,GAAEia,MAAS5e,IAAA,WAAI,MAAOhE,MAAK4E,OAAOie,MAClCla,GAAEgU,MAAS3Y,IAAA,WAAI,MAAOhE,MAAK4E,OAAO0S,MAClC3O,GAAEma,KAAQ9e,IAAA,WAAI,MAAOhE,MAAK4E,OAAOuT,KACjCxP,GAAEoa,OAAU/e,IAAA,WAAI,MAAOhE,MAAKkR,KAAK8B,OACjCrK,GAAEqa,YAAehf,IAAA,WAAI,OAAO,GAE5Bqe,GAAAxa,UAAEob,WAAU,SAACC,EAAYlJ,cACfmJ,EAAcnjB,KAAK4E,OAAOkV,UAAUoJ,EAAYlJ,GAChDoJ,EAAgC,WACtCD,IACAthB,EAAIiZ,KAAK9a,EAAKiiB,aAAcmB,GAG9B,OADApjB,MAAOiiB,aAAahgB,KAAKmhB,GAChBA,GAGXf,GAAAxa,UAAEwb,SAAQ,SAAClP,EAAO7P,aACTA,KACLA,EAAgB6P,EAChBA,EAAUzL,OAEZ,IAAQ4a,GAAYtjB,KAAK4E,OAAO2e,QAAQpP,EAAO/P,EAAgBpE,KAAMsE,IAC7Dkf,EAAkBF,EAAUxO,QAC5BA,EAAU,WAEhB,MADAjT,GAAIiZ,KAAK9a,EAAKiiB,aAAcnN,GACnB0O,EAAgBtiB,KAAKoiB,GAIhC,OAFAtjB,MAAOiiB,aAAahgB,KAAK6S,GACzBwO,EAAYxO,QAAUA,EACbwO,GAGXjB,GAAAxa,UAAE4b,MAAK,SAAChL,EAAQ7Y,cACNS,EAAUE,EAChBP,KAAO4E,OAAOqN,KAAKwG,EAAQ7Y,GAAW,WAAOiC,EAAEiZ,KAAK9a,EAAKiiB,aAAc5hB,EAAQC,SAGjF,OADAN,MAAOiiB,aAAahgB,KAAK5B,EAAQC,QACxBD,GAGXgiB,GAAAxa,UAAEjB,OAAM,SAAC8c,EAAWC,EAAYzU,MACxB0U,UAEErO,EAAUvV,KAAK4E,OAAO2B,MAAM,WAElC,MADAsF,GAAOhI,cACE6f,EAAUxiB,KAAKlB,IACrB2jB,EAAW9c,KAAK7G,MAAOkP,EAO5B,OALA0U,GAA8B,WAC5BrO,IACA1T,EAAIiZ,KAAK9a,EAAKiiB,aAAc2B,IAE9B5jB,KAAOiiB,aAAahgB,KAAK2hB,GAChBA,GAGXvB,GAAAxa,UAAEgc,MAAK,SAACC,EAAY5U,cACV7O,EAAUL,KAAK4E,OAAOmf,KAAK,WAEjC,MADAlY,GAAOhI,cACEigB,EAAW5iB,KAAKlB,IACtBkP,EAGL,OAFA3O,GAAiBF,EAAS,WAAOwB,EAAEiZ,KAAK9a,EAAKiiB,aAAc5hB,EAAQC,UACnEN,KAAOiiB,aAAahgB,KAAK5B,EAAQC,QACxBD,GAGXgiB,GAAAxa,UAAEmc,KAAI,SAACze,GAAQ,MAAOvF,MAAKkR,KAAK9B,IAAI7J,IACpC8c,GAAAxa,UAAEoc,QAAO,SAAClf,GAAS,MAAO/E,MAAKkR,KAAK5B,OAAOvK,IAC3Csd,GAAAxa,UAAEqc,UAAS,SAACnf,GAAS,MAAO/E,MAAKkR,KAAK6C,SAAShP,IAC/Csd,GAAAxa,UAAEsc,QAAO,SAACjV,EAASoH,GAAW,MAAOtW,MAAKkR,KAAK8C,OAAO9E,EAASoH,IAE/D+L,GAAAxa,UAAEhE,YAAW,WAEL7D,KAAK6hB,SACN7hB,KAAK6hB,QAAQ7e,eAAe,SAAWhD,KAAK6hB,QAAQ9K,MAAQ/W,KAAK6hB,SAAS7hB,KAAK8hB,MAElF9hB,KAAO2c,OAKXhU,GAAEqZ,eAAkBhe,IAAA,WAGlB,MAFAkD,QAASob,eAAetiB,KAAM,kBAC5BuF,SAAa6e,UAAU,EAAOxO,YAAY,EAAOD,cAAc,IACxD3V,KAAKgiB,gBAGhBrZ,GAAEsZ,aAAgBje,IAAA,WAGhB,MAFAkD,QAASob,eAAetiB,KAAM,gBAC5BuF,SAAa6e,UAAU,EAAOxO,YAAY,EAAOD,cAAc,IACxD3V,KAAKiiB,sDAIhB,IAAMoC,IAAsB,SACd9X,GACZ1K,EAAIuR,OAAOpT,MAAOuM,KAAAA,EAAMpI,cAAe,EAAGmgB,WAAY,EAAGpgB,QAAS,KAI9DD,GAAa,SACL5C,GACZrB,KAAOqB,MAAQA,GAKIkjB,GAAQ,WAE3BvkB,KAAOwkB,OAASC,MAAOpC,IACvBnb,OAASC,OAAOnH,oCAGlBukB,IAAA1c,UAAEwC,KAAI,SAACqa,EAASC,aACR9iB,GAAE+iB,cAAcF,KACpB7iB,EAAImD,KAAK0f,EAAS,SAACD,EAAOxf,GAClBwf,EAAMI,cACZJ,EAAQK,aAAeL,EAAMK,iBAC7BL,EAAQK,aAAa7iB,KAAKgD,MAE5Byf,EAAY7iB,EAAEkD,OAAO2f,GACrB7iB,EAAImD,KAAK0f,EAAS,SAAAD,IACTA,EAAMI,aAAeJ,EAAMK,eAChCL,EAAQI,YAAcJ,EAAMK,mBACnBL,GAAMK,iBAIrBJ,EAAY7iB,EAAEkjB,KAAKL,GACnB7iB,EAAImD,KAAK0f,EAAS,SAAAD,GAAM,MAAGzkB,GAAKglB,YAAYP,EAAOE,KACnD3kB,KAAOilB,cAAcjlB,KAAKwkB,QAG5BD,GAAA1c,UAAEiN,QAAO,aAGTyP,GAAA1c,UAAEqd,UAAS,SAACjgB,EAAMkgB,EAAUvU,GAG1B,IAAoB,GADdgP,UADEre,EAAW0D,EAAKoS,MAAM,KAEV7V,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,GACZ8P,EAAQ1P,EACZge,EAAOrO,WAAaqO,EAAKrO,SAAS3P,IAAYge,EAAKrO,SAAS6T,GAAKplB,EAAKwkB,KACxE,KAAOlT,EAAO,CACZ,IAAO6T,EAAU,MACjBvF,GAAOrO,SAAWqO,EAAKrO,aACvBD,EAAUsO,EAAKrO,SAAS3P,IAAY6iB,MAAOpC,IAG7C,GADAzC,EAAStO,EACHV,GAAaA,EAAUgP,GAAO,MAEtC,MAASA,IAGX2E,GAAA1c,UAAEwd,WAAU,SAACzU,EAAWgP,aAEtB,IADOA,IAAMA,EAAO5f,KAAKwkB,OACnB5T,EAAUgP,GAAO,MAAOA,EAC9B,KAAqB,GAAApe,GAAA,EAAAC,EAAII,EAAEa,KAAKkd,EAAKrO,UAAS/P,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAC9C,GADW0V,GAAQzV,EAAAD,GACXJ,EAASpB,EAAKqlB,WAAWzU,EAAWgP,EAAKrO,SAAS2F,GAC1D,IAAM9V,EAAQ,MAAOA,KAIzBmjB,GAAA1c,UAAEod,cAAa,SAACrF,aACd/d,GAAImD,KAAK4a,EAAKrO,SAAU,SAAAD,GACtBzF,EAAOoZ,cAAc3T,IACfA,EAAMgU,OAAShU,EAAMiU,oBAAkB3F,EAAK2F,kBAAmB,MAIzEhB,GAAA1c,UAAE2d,cAAa,SAACf,GAGd,IAFA,GAAMgB,GACAC,EAAQjB,EAAM5c,UACX6d,GAASA,EAAMC,cAAgBze,QAAQ,CAC9C,IAAiB,GAAA1F,GAAA,EAAAC,EAAIyF,OAAO0e,oBAAoBF,GAAMlkB,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACtD,GADW+K,GAAI9K,EAAAD,GACP+C,EAAa2C,OAAO2e,yBAAyBH,EAAOnZ,EAC5D,IAAyB,MAAnBA,EAAKxK,OAAO,GAAY,CAC5B,GAAMF,EAAEsQ,QAAQ5N,EAAY2C,OAAO2e,yBAAyBxD,GAAMxa,UAAW0E,IAC3E,QAEF,MAAQ,IAAIzJ,OAAM,kDAAkD2hB,EAAU,KAAA,IAAIlY,GAEpF,GAAMhI,EAAW6K,IACf,KAAQ,IAAItM,OAAM,+CAA+C2hB,EAAU,KAAA,IAAIlY,IAE3EhI,EAAWP,KAASyhB,GAAsBA,EAAmBlZ,MAC9DkZ,IAAuBA,OAA0BlZ,IAClDA,KAAEA,EAAMuZ,SAAaJ,EAAMC,YAAgB,KAAA,IAAIpZ,EAAQvI,IAAKO,EAAWP,MAI7E0hB,EAAUxe,OAAO6e,eAAeL,GAElC,IAAiB,GAAAxV,GAAA,EAAAC,EAAIjJ,OAAO0e,oBAAoBvD,GAAMxa,WAAUqI,EAAAC,EAAAzO,OAAAwO,GAAA,EAAE,CAChE,GADW3D,GAAI4D,EAAAD,EACA,iBAAT3D,GAA0BkY,EAAM5c,UAAU7E,eAAeuJ,IAC/DrF,OAASob,eACPmC,EAAQ5c,UAAW0E,EAAMrF,OAAO2e,yBAAyBxD,GAAMxa,UAAW0E,IAE9E,MAASkZ,IAGXlB,GAAA1c,UAAEmd,YAAW,SAACP,EAAOE,cACXc,EAAqBzlB,KAAKwlB,cAAcf,GAC1CuB,EAASvB,EAAMI,WACrB,KAAOmB,EAAQ,KAAM,IAAIljB,OAAM,SAAS2hB,EAAU,KAAA,uCAC3C5iB,GAAE6P,QAAQsU,KAASA,GAAUA,IACpCnkB,EAAImD,KAAKghB,EAAQ,SAAAC,GAEf,GADMpkB,EAAEC,SAASmkB,KAAQA,GAAShhB,KAAMghB,KACjCtB,GAAiC,MAAfsB,EAAMhhB,KAC7B,KAAQ,IAAInC,OAAM,sDAGpB,KAAqB,GADbT,GAAUF,EAAgB8jB,EAAMhhB,MACnBzD,EAAA,EAAAC,EAAIY,EAAQgF,UAAS7F,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAC1C,GADW0kB,GAAQzkB,EAAAD,EACjB,IAAiB,MAAb0kB,GAA2C,MAAvBA,EAASnkB,OAAO,GACxC,KAAQ,IAAIe,OAAM,0BAA0BojB,EAE9C,IAA6B,MAAvBA,EAASnkB,OAAO,KAClBF,EAAIuU,IAAIiM,GAAMxa,UAAWqe,IAAatE,GAA8BsE,IAEtE,KAAQ,IAAIpjB,OAAM,6DAA6DojB,GAGnF,GAAQC,GAAaF,EAAMhhB,KAAKwC,MAAM,eAAc,EACpD,IAA+B,MAAzB0e,EAAWpkB,OAAO,IACtB,GAAMkkB,EAAMG,YACV,KAAQ,IAAItjB,OACR,SAAS2hB,EAAU,KAAA,wBAAwB0B,EAAU,gCAGpDtkB,GAAEuU,IAAI6P,EAAO,iBAAgBA,EAAMG,eAE5C,IAAQC,GAAcrmB,EAAKklB,UAAUe,EAAMhhB,KAAK/F,QAAQ,YAAY,MAAM,EAC1E,IAAMmnB,EAAYhkB,QAChB,KAAQ,IAAIS,OACR,+BAA+BmjB,EAAU,KAAA,KAAKI,EAAY5B,MAAU,KAAA,KAAKA,EAAU,KAEzF5iB,GAAIuR,OAAOiT,GACT5B,MAAEA,EAAOpiB,QAAAA,EAASojB,mBAAAA,EAAoBU,WAAAA,EAAYC,YAAaH,EAAMG,YACrEd,MAASW,EAAMX,WAWrBf,GAAA1c,UAAEye,aAAY,SAACrhB,EAAMshB,cACbN,EAAQjmB,KAAKklB,UAAUjgB,KAAUwf,MAAOpC,GAC9C,IAAM4D,EAAM5jB,QAAS,CACnB,GAAQoF,GAAQwe,EAAM5jB,QAAQoF,MAAMxC,EACpC,KAAOvE,GAAMwlB,KAAYze,GACvB8e,EAAaL,IAAa3gB,MAAOkC,EAAMye,IAI3C/E,GAA6BoF,CAC7B,IAAQliB,GAAS,GAAI4hB,GAAMxB,KAU3B,OATAtD,IAA6B,KAEvB8E,EAAMO,aAAYD,EAAWxP,OAASxR,MAAO2B,OAAOuf,OAAO,QAC3DR,EAAMR,oBACV5jB,EAAImD,KAAKihB,EAAMR,mBAAoB,SAAA9hB,GACjC4iB,EAAa5iB,EAAK4I,MAAQvM,EAAK0mB,iCAAiCriB,EAAQV,KAInEU,GAGXkgB,GAAA1c,UAAE6e,iCAAgC,SAACriB,EAAQV,GAClCye,GAAsBze,EAAKmiB,WAChC5e,OAASob,eAAeF,GAAuBze,EAAKmiB,UAClDvgB,MAAS,GAAI8e,IAAsB1gB,EAAKmiB,UAAW1B,UAAU,EAAOxO,YAAY,EAChFD,cAAgB,GAGpB,IAEMpQ,GAFE3B,EAAQwe,GAAsBze,EAAKmiB,UAGrCa,GAAe,CAerB,OAbAtiB,GAAS2d,eAAe/f,KAAK,SAAA2kB,GAC3BviB,EAAS4d,aAAahgB,KACpB2kB,EAAMhgB,OAAOlD,EAAamD,KAAKxC,EAAQV,EAAMC,GAAQ,SAAAsJ,GACnD,IAAMrL,EAAEsQ,QAAQ5M,EAAO2H,EAAUzI,KAEjCb,EAAQ0gB,YAAc,EACtBqC,GAAiB,EACjBtiB,EAASV,EAAK4I,MAAQW,EACtByZ,GAAiB,EACXzZ,YAAoBjJ,KAAc,KAAMiJ,GAAS7L,QACnD2U,WAAW,QAInBJ,YAAc,EAAMD,cAAc,EAClC3R,IAAO,WACL,GAAMuB,YAAiBtB,IAAc,KAAMsB,GAAMlE,KACjD,OAASkE,IAEX6J,IAAO,SAASlC,GACd,IAAOyZ,EAAc,KAAM,IAAI7jB,OAAM,uCAAuCa,EAAS,KACrF4B,GAAU2H,KAKhBqX,GAAA1c,UAAEgf,cAAa,SAACxiB,GACd,GAAMxC,EAAEuU,IAAI/R,EAAQ,gBAElB,IAAe,GAAA7C,GAAA,EAAAC,EAAII,EAAE2R,MAAMnP,EAAO4d,cAAazgB,EAAAC,EAAAC,OAAAF,GAAA,EAAxC,CAAAd,GAAM8K,GAAE/J,EAAAD,EAAkCgK,OAIrD+Y,GAAA1c,UAAEif,cAAa,SAAC7hB,GACd,GAAQghB,GAAQjmB,KAAKklB,UAAUjgB,EAC/B,OAASghB,IAASA,EAAMG,aAG1B7B,GAAA1c,UAAEkf,QAAO,SAAC9hB,GACR,GAAQghB,GAAQjmB,KAAKklB,UAAUjgB,GAAM,EAAO,SAAAghB,GAAM,MAAGA,GAAMX,OAC3D,KAAOW,EAAO,OAAO,CACrB,IAAMA,EAAMX,MAAO,OAAO,CAC1B,IAAMW,EAAMV,iBAAkB,KAAM,IAAIziB,OAAM,wCAAwCmC,EACtF,QAAS,GAGXsf,GAAA1c,UAAEmf,wBAAuB,SAAC/hB,EAAM6a,GAC9B,GAAQmG,GAAQjmB,KAAKklB,UAAUjgB,EAC/BpD,GAAImD,KAAKihB,GAASA,EAAM1U,SAAU,SAAAD,GAC1BA,EAAM8U,aAAatG,EAASxO,EAAM6U,WAAY7U,EAAM8U,gBAI9D7B,GAAA1c,UAAEof,eAAc,SAAC5iB,EAAQY,EAAMiiB,cACrBC,GAAOD,CACTC,KAAKD,KACX,KACE,IAAgB,GAAA1lB,GAAA,EAAAC,EAAIyF,OAAO0e,oBAAoBvhB,GAAO7C,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACtD,GADWxC,GAAGyC,EAAAD,EACZ,KAAIogB,GAA8B5iB,GAAlC,CAEF,GAAQinB,GAAQjmB,EAAKqlB,WAAW,SAAAY,GAAM,MAAGA,GAAMxB,QAAUpgB,EAAOshB,aAEhE,MAAMM,GAASA,EAAM5jB,SAAWR,EAAEulB,SAASnB,EAAM5jB,QAAQgF,UAAWrI,IAApE,CACA,IAAQyN,MAAMiF,QAAQrN,KAAY,MAAMqD,KAAK1I,IAAgB,WAARA,EAAoB,CACvE,GAAQuF,GAAa2C,OAAO2e,yBAAyBxhB,EAAQrF,EAC7D,IAAM,SAAWuF,KAAeA,EAAWP,IACzC,KAAQ,IAAIlB,OACR,YAAYmC,EAAI,4DAA4DjG,EAElF,IAAMqF,EAAOO,QAAUL,EAAWqR,WAChC,IAEE,KADAvR,GAASrF,GAAOqF,EAAOrF,GACf,GAAI8D,OACR,uBAAuBmC,EAAI,6CAA6CjG,GAC1E,MAAOkB,GACT,GAAsB,uBAAhBA,EAAEmnB,UAAoC,KAAMnnB,IAIxD,GAAQqF,GAAQlB,EAAOrF,IACjB6C,EAAEylB,SAAS/hB,IAAWA,EAAM2c,gBAAiBhb,OAAOqgB,aAAahiB,IAC/DA,YAAiBiiB,YACvBjiB,EAAQ2c,eAAgB,EACxBgF,EAAiBjlB,KAAKsD,GACtBsG,EAAOob,eAAe1hB,EAAOjE,EAAS2D,EAAMlG,EAAUC,IAAOkoB,OAGhE,QACD,GAAMC,EACJ,IAAiB,GAAAjX,GAAA,EAAAC,EAAI+W,EAAchX,EAAAC,EAAAzO,OAAAwO,GAAA,EAA5B,CAAAxP,GAAMuN,GAAIkC,EAAAD,SAA2BjC,GAAKiU,iBAKvDuF,GAAErF,sBAAgCpe,IAAA,WAChC,MAASoe,mCC5ZX,IAAMsF,IAAY,SACJziB,EAAM6L,GAClB9Q,KAAOsI,MAAQrD,EACfjF,KAAOgR,MAAQF,4CAGjBnI,IAAEgf,aAAgB3jB,IAAA,WAAI,MAAOhE,MAAKgR,MAAM4C,UAAU5T,KAAKsI,QACvDK,GAAEif,QAAW5jB,IAAA,WAAI,MAAOhE,MAAK6nB,UAC7Blf,GAAE5D,OAAUf,IAAA,WAAI,MAAOhE,MAAK8nB,SAE5BJ,GAAA7f,UAAEkgB,YAAW,SAACxiB,GACZ,GAAMvF,KAAK6nB,SAAU,KAAM,IAAI/kB,OAAM,qCAAuC9C,KAAK6nB,SACjF7nB,MAAO6nB,SAAWtiB,GAGpBmiB,GAAA7f,UAAEmgB,MAAK,WACLhoB,KAAO+nB,YAAY,UAGrBL,GAAA7f,UAAEvH,OAAM,WACNN,KAAO+nB,YAAY,WAGrBL,GAAA7f,UAAEuH,IAAG,SAAC7J,GACJ,GAAgBmD,SAAVnD,EAAqB,KAAM,IAAIzC,OAAM,8BAC3C9C,MAAO+nB,YAAY,OACnB/nB,KAAO8nB,SAAWG,GAAI1iB,IAGxBmiB,GAAA7f,UAAEyH,OAAM,SAACvK,GACP,GAAiB2D,SAAX3D,EAAsB,KAAM,IAAIjC,OAAM,8BAC5C,OAAMjB,GAAEmQ,QAAQjN,GAAgB/E,KAAKM,UACrCN,KAAO+nB,YAAY,eACnB/nB,KAAO8nB,QAAU/iB,6CAKnB,IAAqBmjB,IAAK,SACZhW,EAAO7D,EAASuL,EAAQsG,GACpClgB,KAAOmoB,OAASjW,EAChBlS,KAAO0c,SAAWrO,EAClBrO,KAAO6Z,QAAUD,EACjB5Z,KAAO8e,YAAcoB,EACrBlgB,KAAOooB,8BAA+B,EACtCpoB,KAAOqoB,aAAe,EACtBroB,KAAOsoB,gBACPtoB,KAAOuoB,qBAAuB,KAC9BvoB,KAAOwoB,cAAe,EACtBxoB,KAAOyoB,SAAW,GAAIlE,IACtBvkB,KAAO2d,SAAW,GAAIsC,GACpB5R,EAAWuL,EAAQsG,EAAYlgB,KAAK0oB,mBAAmB7hB,KAAK7G,MAAOA,KAAK2oB,OAAO9hB,KAAK7G,OACtFA,KAAO4U,KAAO,GAAIC,IAAKzI,MAAOuQ,MAAOjU,UACrCxB,OAAS6N,KAAK/U,MACRkd,EAAqBpX,QACzB9F,KAAO4U,KAAKhO,OAAO,QAAS,WAAOsW,EAAqB/W,WAAa8P,MAAM,wDAO/ElD,IAAEuE,KAAQtT,IAAA,WAMR,MALOhE,MAAK4U,KAAKmC,MAAM4F,QACrB3c,KAAO4U,KAAKmC,MAAM4F,MAAQ3c,KAAK4oB,cAAc,IAAK,IAClD5oB,KAAO6oB,WAAW7oB,KAAK4U,KAAKmC,MAAM4F,OAClC3c,KAAO8oB,sBAAsB9oB,KAAK4U,KAAKmC,MAAM4F,QAEtC3c,KAAK4U,KAAKmC,MAAM4F,OAG3B5J,GAAEb,MAASlO,IAAA,WACT,MAAShE,MAAKmoB,QAGhBD,GAAArgB,UAAEwC,KAAI,SAACqa,GACL,GAAM1kB,KAAKwoB,aACT,KAAQ,IAAI1lB,OAAM,0DAEpB9C,MAAOwoB,cAAe,EACtBxoB,KAAOyoB,SAASpe,KAAKqa,GAAU1kB,KAAK4U,KAAKmC,MAAM4F,OAC/C3c,KAAO+oB,mBAAmB/oB,KAAKsX,KAAM,MAGvC4Q,GAAArgB,UAAEiN,QAAO,WACP9U,KAAO2d,SAAS7I,UACV9U,KAAKyoB,UAAUzoB,KAAKyoB,SAAS3T,UACnC9U,KAAO4U,KAAKa,YAGdyS,GAAArgB,UAAE2O,iBAAgB,SAACrO,EAAK6gB,EAAe1iB,aACrCtG,MAAOipB,aAAa9gB,EACpB,IACMoN,GADEmC,EAAY1X,KAAK8e,YAAY3D,gBAAgB,OAAQ7U,EAAQ6B,EAErE,IAAM6gB,EAAe,CACnB,GAAQznB,GAAWM,EAAEsG,EAAIlD,MAAMoS,MAAM,KAAKhS,IAAI,SAAAzD,GAAQ,MAAGvC,GAAYuC,KAAU2D,OAC/EgQ,GAAYvV,KAAK4U,KAAKhO,OACpB5G,KAAO4T,UAAU/M,KAAK7G,KAAMuB,GAAWynB,GAAgBhT,WAAW,IAStE,MAPA0B,GAAYlC,YAAcxV,KAAKkpB,qBAAqBriB,KAAK7G,KAAMmI,EAAKuP,EAAWnC,GAC/EvV,KAAO8e,YAAY1D,MAAM1D,GAAW9W,KAAK,WACjC8W,EAAUuB,UAAYvB,EAAUyR,gBACpCtd,EAAO8R,SAAS+C,OAAOvY,EAAIlD,KAAMyS,GACjCA,EAAY0R,UAAW,KAEtBtoB,MAAM,SAAAZ,MACFwX,EAAUlC,aAGrB0S,GAAArgB,UAAEqhB,qBAAoB,SAAC/gB,EAAKuP,EAAWnC,EAASlU,GACxCqW,EAAUyR,gBAChBzR,EAAYyR,eAAgB,EACtB5T,GAASA,IACTmC,EAAU0R,WACdppB,KAAO2d,SAASiD,SAASzY,EAAIlD,KAAMyS,GACnCA,EAAY0R,UAAW,GAEzBppB,KAAO8e,YAAYvD,IAAI7D,EAAWrW,GAAOP,MAAM,SAAAZ,QAGjDgoB,GAAArgB,UAAE8L,iBAAgB,SAACxL,GAEjB,MADAnI,MAAOipB,aAAa9gB,GACXnI,KAAK2d,SAASuD,eAAe/Y,EAAIlD,OAG5CijB,GAAArgB,UAAE6O,aAAY,SAAC7C,EAAOsK,EAAc7X,aAClCtG,MAAOipB,aAAapV,EACpB,IAAQ6D,GAAY1X,KAAK8e,YAAY3D,gBAAgB,OAAQ7U,EAAQuN,EAQrE,OAPA6D,GAAYlC,YAAcxV,KAAKqpB,iBAAiBxiB,KAAK7G,KAAM6T,EAAO6D,GAClE1X,KAAO8e,YAAY1D,MAAM1D,GAAW9W,KAAK,WACjC8W,EAAUuB,UAAYvB,EAAUyR,gBACpCtd,EAAO8R,SAASoD,UAAUlN,EAAO6D,EAAWyG,GAC5CzG,EAAY0R,UAAW,KAEtBtoB,MAAM,SAAAZ,MACFwX,EAAUlC,aAGrB0S,GAAArgB,UAAEwhB,iBAAgB,SAACxV,EAAO6D,EAAWrW,GAC7BqW,EAAUyR,gBAChBzR,EAAYyR,eAAgB,EACtBzR,EAAU0R,WACdppB,KAAO2d,SAASqD,YAAYnN,EAAO6D,GACnCA,EAAY0R,UAAW,GAEzBppB,KAAO8e,YAAYvD,IAAI7D,EAAWrW,GAAOP,MAAM,SAAAZ,QAGjDgoB,GAAArgB,UAAEoL,aAAY,SAACY,GACb,MAAS7T,MAAK2d,SAAS1K,aAAaY,IAGtCqU,GAAArgB,UAAEohB,aAAY,SAACrZ,GACb,IAAOA,EAAOyC,UAAUrS,KAAKmoB,QAC3B,KAAQ,IAAIrlB,OAAM,gDAItBolB,GAAArgB,UAAEyH,OAAM,SAACnH,EAAK7B,EAAQvB,aACpBA,GAAWlD,EAAE2R,MAAMzO,EACnB,IAAMukB,GAAYznB,EAAEW,KAAKuC,EACzB,KAAOukB,EAAW,MAAOzpB,SAAQC,SAKjC,IAJiB,WAAXwG,GAAkC,aAAXA,GAC3BzB,EAA6CsD,EAAIlD,KAAMF,GAEzD/E,KAAOupB,iBAAiBxkB,EAAmB,aAAXuB,GACf,aAAXA,EAAuB,MAAOzG,SAAQC,SAC5C,KAAiB,GAAA0B,GAAA,EAAAC,EAAII,EAAEa,KAAKqC,GAAOvD,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACnC,GADWyD,GAAIxD,EAAAD,EACTxB,GAAKyoB,SAAS1B,QAAQ9hB,UAAcF,GAAOE,GAGnD,GADAqkB,EAAcznB,EAAEW,KAAKuC,IACdukB,EAAW,MAAOzpB,SAAQC,SACjC,IAAQqD,GAAMnD,KAAK0c,SAAW1c,KAAKwpB,yBAAyBzkB,EAC5D,OAAS/E,MAAK8e,YAAY7D,QAAQ,QAAS3U,EAAQ6B,EAAK,WACtD,MAAoB,KAAdmhB,EACKtpB,EAAK6Z,QAAQzK,IAAIjM,EAAK4B,EAAO,IAAK/E,EAAKqoB,cAEvCroB,EAAK6Z,QAAQvK,OAAOnM,EAAK4B,EAAQ/E,EAAKqoB,iBAKrDH,GAAArgB,UAAEmM,OAAM,SAAC7L,EAAK8L,cACNkF,EAAQ,EAENsQ,EAAqB,WAC3B,GAAMtQ,KAAW,GAAI,MAAOtZ,SAAQM,OAAO,GAAI2C,OAAM,YACrD,IAAQ4mB,GAAM,GAAIhC,GAClB,KACEzT,EAAiByV,GACf,MAAOxpB,GACT,MAASL,SAAQM,OAAOD,GAE1B,GAAQ6E,GAASlD,EAAE2R,MAAMkW,EAAI3kB,QACrByL,EAAW9K,EAAe1F,EAAK4T,UAAUzL,EAAIlD,MACrD,QAAUykB,EAAI9B,SACZ,IAAO,QAAS,MAChB,KAAO,SACL,KACF,KAAO,MACL,GAAM5nB,EAAKyoB,SAAS1B,QAAQ5e,EAAIlD,MAC9B,KAAQ,IAAInC,OAAM,4BAA4BqF,EAAQ,KAExD0D,GAAO0d,kBAAgBzV,KAAEA,EAAC3L,EAAIlD,MAAKF,EAAS,IAAG+O,SAC/C,MACF,KAAO,SACLjP,EAA6CsD,EAAIlD,KAAMF,GACvDlD,EAAIkD,GAAQrC,OAAOsC,KAAK,SAAAC,GACtB,GAAMjF,EAAKyoB,SAAS1B,QAAQ9hB,GAAO,KAAM,IAAInC,OAAM,4BAA4BmC,KAEjF4G,EAAO0d,iBAAiBxkB,GACxBU,EAAkB0C,EAAIlD,KAAMF,EAC5B,MACF,SACE,KAAQ,IAAIjC,OAAM,iCAAmC4mB,EAAI9B,SAAW,SAExE,MAAS5nB,GAAK6Z,QAAQtJ,YACpB1E,EAAO6Q,SAAWvU,EAAIlD,KAAMuL,EAAUzL,GACpCnE,KAAK,SAAA+oB,GACP,MAAOA,GACED,EADgBD,MAK7B,OAASzpB,MAAKmoB,OAAOlW,KAAK9J,EAAK,WAC7B,MAASnI,GAAK8e,YAAY7D,QAAQ,QAAS,SAAU9S,EAAKshB,MAI9DvB,GAAArgB,UAAE0hB,iBAAgB,SAACxkB,EAAQgP,aAGzB/T,MAAOqoB,eACProB,KAAOuoB,qBAAuBvoB,KAAKmoB,OAAOhQ,IAC1CtW,EAAImD,KAAKD,EAAQ,SAACQ,EAAON,GACvB,GAAQqgB,GAAQtlB,EAAKyoB,SAAS1B,QAAQ9hB,GAC9B2kB,EACNtE,GAAWrgB,GAAQjF,EAAK2d,SAASmD,2BAA2B7b,EAC9D,KAAMpD,EAAEmQ,QAAQ4X,GAEhB,IAA2B,GADnBC,IAAmB,MAAT5kB,EAAe,EAAIA,EAAKvD,QAAU,EACzBF,EAAA,EAAAC,EAAImoB,EAAsBpoB,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACrD,GADWsoB,GAAcroB,EAAAD,GACjBoQ,EAAUkY,EAAepqB,MAAMmqB,GACjCE,EAAWxkB,CACjB,IAAMqM,EAEJ,IAAoB,GADZrQ,GAAWqQ,EAAQyF,MAAM,KACbnH,EAAA,EAAAC,EAAI5O,EAAQ2O,EAAAC,EAAAzO,OAAAwO,GAAA,EAAE,CAChC,GADWtO,GAAOuO,EAAAD,EAElB,IADE6Z,EAAWA,EAAS1qB,EAAYuC,IACf8G,SAAbqhB,EAAwB,MAGlC,GAAmBrhB,SAAbqhB,GAAuC,OAAbA,EAC9Ble,EAAO8c,OAAO/W,OACP,CACP,GAAQ5S,GAAMK,EAAYwC,EAAEmoB,KAAKF,EAAezS,MAAM,MACtDxL,GAAOoe,YACLH,EAAkB9qB,EAAK+qB,EAAU/pB,EAAKkqB,mBAAmBJ,IAAiB,EAC1E/V,GAGGA,GAAauR,IAClBzZ,EAAOyc,aAAawB,GAAkB9pB,EAAKqoB,kBAMnDH,GAAArgB,UAAE2hB,yBAAwB,SAACzkB,GACzB,GAAMolB,EACNtoB,GAAImD,KAAKD,EAAQ,SAACQ,EAAON,GACvB,GAAQ1D,GAAoB,MAAT0D,GAAgB,IAAMA,EAAKoS,MAAM,IACpD,IAAM8S,EAAgB,CAGpB,IAFA,GAAMC,GAAqB,EACnBC,EAAW/N,KAAKgO,IAAIH,EAAezoB,OAAQH,EAASG,QACnD0oB,EAAqBC,GACvBF,EAAiBC,KAAwB7oB,EAAS6oB,IACvDA,GAGF,IADAD,EAAmBA,EAAezqB,MAAM,EAAG0qB,IACpCD,EAAezoB,OAAQ,OAAO,MAErCyoB,GAAmB5oB,GAGvB,IAAQgpB,GAAuC,IAA1BJ,EAAezoB,OAAe,IAAMyoB,EAAejoB,KAAK,IAK7E,OAJAL,GAAImD,KAAKnD,EAAEa,KAAKqC,GAAS,SAAA/F,GACvB+F,EAAS/F,EAAIU,MAAM6qB,EAAW7oB,OAAS,IAAMqD,EAAO/F,SAC3C+F,GAAO/F,KAETurB,GASXrC,GAAArgB,UAAE+gB,cAAa,SAAC3jB,EAAMjG,EAAKoS,GAClBpR,KAAKwoB,cAAyB,MAATvjB,GAAcjF,KAAKqK,MAC/C,IAAMkc,IAEJ1E,SAAYtc,MAAO6L,EAAQuE,cAAc,EAAMC,YAAY,GAC3DmM,OAAUxc,MAAON,GAEJ,OAATA,IAAcshB,EAAW3hB,QAAUW,MAAOvF,KAAKmoB,QAErD,IAAQ9jB,GAASrE,KAAKyoB,SAASnC,aAAarhB,EAAMshB,EAElD,OADArf,QAASwO,iBAAiBrR,EAAQkiB,GACzBliB,GAKX6jB,GAAArgB,UAAEghB,WAAU,SAACxkB,GACX,IAAiB,GAAA7C,GAAA,EAAAC,EAAIyF,OAAO0e,oBAAoBvhB,GAAO7C,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACvD,GADW+K,GAAI9K,EAAAD,GACP+C,EAAa2C,OAAO2e,yBAAyBxhB,EAAQkI,EACvDhI,GAAWoR,cAAgBpR,EAAWqR,aAC1CrR,EAAaqR,YAAa,EACX,YAATrJ,IAAoBhI,EAAWoR,cAAe,GACpDzO,OAASob,eAAeje,EAAQkI,EAAMhI,MAO5C2jB,GAAArgB,UAAEihB,sBAAqB,SAACzkB,aACtB,IAAMA,EAAOrB,eAAe,kBAAmB,CAC7C,IAAe,GAAAxB,GAAA,EAAAC,EAAI4C,EAAO2d,eAAcxgB,EAAAC,EAAAC,OAAAF,GAAA,EAAjC,CAAAd,GAAM8K,GAAE/J,EAAAD,EAA2BgK,GAAGxL,EAAK4U,YACzCvQ,GAAO2d,iBAIpBkG,GAAArgB,UAAE2iB,eAAc,SAACnmB,aACf,IAAQA,GAAUA,EAAOO,OAAzB,CACA5E,KAAOyoB,SAAS5B,cAAcxiB,EAC9B,KAAO3D,GAAM1B,KAAOqF,GACX6C,OAAOlE,eAAeqB,EAAQrF,IACrC6M,EAAO2e,eAAenmB,EAAOrF,MAIjCkpB,GAAArgB,UAAE6gB,mBAAkB,SAAClL,aAInB,IAHA3b,EAAImD,KAAKnD,EAAEa,KAAK1C,KAAKsoB,cAAe,SAACjZ,EAAapK,GAC1CuY,EAAKnO,aAAeA,SAAoBrP,GAAKsoB,aAAarjB,KAE5DuY,EAAKnV,OAAQ,CACjB,GAAQ+I,GAASpR,KAAKkqB,mBAAmB1M,EAAKvY,MAAM,EAC9CmM,IAAQpR,KAAKiqB,YAAYzM,EAAKvY,KAAMuY,EAAKxe,IAAKwe,EAAKjY,MAAO6L,GAAQ,GAAM,OAE9EpR,MAAO2oB,OAAOnL,EAAKvY,KAAM,MAAM,IAInCijB,GAAArgB,UAAEqiB,mBAAkB,SAACjlB,EAAMwlB,MACnBpmB,UACE9C,EAAWM,EAAEoD,GAAMoS,MAAM,KAAKqT,YAAYnlB,OAWlD,OAVA1D,GAAImD,KAAKzD,EAAU,SAACK,EAASJ,GAC3B,GAAQ0V,GAAW7X,EAAYuC,GACzB0P,EAAQ4F,EAAW7S,EAAO6S,GAAYlX,EAAKsX,IACjD,KAAOhG,EAAO,CACZ,GAAQqZ,GAAeppB,EAAS7B,MAAM,EAAG8B,EAAI,GAAGU,KAAK,IACrD,IAAMuoB,GAAezqB,EAAKsoB,aAAaqC,GAAgB,KAAM,MAC7DrZ,GAAUtR,EAAKiqB,YAAYU,EAAczT,KAAc7S,GAEzDA,EAAWiN,IAEJjN,GAGX6jB,GAAArgB,UAAEoiB,YAAW,SAAChlB,EAAMjG,EAAKuG,EAAO6L,EAAQqZ,EAAa1W,aACnD,IAAgB,OAAVxO,GAA4BmD,SAAVnD,EACtB,KAAQ,IAAIzC,OAAM,sCAAsCmC,EAAI,KAAKM,EAEnE,KAAMklB,IAAezqB,KAAKsoB,aAAarjB,GAAvC,CAEA,GADMM,IAAU0B,IAAkB1B,EAAQvF,KAAKuoB,wBACxC1mB,EAAE6P,QAAQnM,IAAY1D,EAAEylB,SAAS/hB,IAAUA,EAAMogB,cAAgBze,QAEtE,WADAlH,MAAO4qB,qBAAqBxZ,EAAQpS,EAAKuG,EAG3C,IAAMslB,IAAgB,EAChBxmB,EAAS+M,EAAOpS,EAiCtB,OAhCO6C,GAAEylB,SAASjjB,KAIhBrE,KAAO4qB,qBAAqBxZ,EAAQpS,EAAK,MACzCqF,EAAWrE,KAAK4oB,cAAc3jB,EAAMjG,EAAKoS,GACzCpR,KAAO4qB,qBAAqBxZ,EAAQpS,EAAKqF,GACzCrE,KAAO6oB,WAAWxkB,GAClBwmB,GAAkB,GAEd9W,EACJ7M,OAASob,eAAeje,EAAQ,eAAgBL,IAAKnC,EAAEmF,UAAS,GAAO2O,cAAc,IAC1EtR,EAAO2e,mBACT3e,GAAO2e,YAElBnhB,EAAImD,KAAKO,EAAO,SAAC0I,EAAM6c,GACrBjf,EAAOoe,YACL3oB,EAAW2D,EAAM6lB,GAAkBzrB,EAAYyrB,GAAkB7c,EAAM5J,EAAQomB,EAC/E1W,KAGE8W,GACJ7qB,KAAO8oB,sBAAsBzkB,GAC7BrE,KAAO+oB,mBAAmB1kB,EAAQY,IAElCpD,EAAImD,KAAKX,EAAQ,SAAC4J,EAAMiJ,GACtB,GAAQ4T,GAAkB/rB,EAAUmY,EAC7B3R,GAAMvC,eAAe8nB,IAC1Bjf,EAAO8c,OAAOrnB,EAAS2D,EAAM6lB,GAAkB,KAAML,KAIlDpmB,IAGX6jB,GAAArgB,UAAEkhB,mBAAkB,SAAC1kB,EAAQY,aAC3BjF,MAAOyoB,SAASzB,wBAAwB/hB,EAAM,SAACkhB,EAAYC,GACzD,GAAQpnB,GAAMK,EAAY8mB,EACnB9hB,GAAOrB,eAAehE,IAC3B6M,EAAOoe,YAAY3oB,EAAS2D,EAAMkhB,GAAannB,EAAKonB,EAAa/hB,MAKvE6jB,GAAArgB,UAAE8gB,OAAM,SAAC1jB,EAAM8lB,EAAuBN,GACpCM,EAA0BA,KAC1B,IAAQ1mB,GAASrE,KAAK4T,UAAU3O,EACfyD,UAAXrE,IACAomB,GAAezqB,KAAKgrB,sBAAsB/lB,EAAM8lB,IAC9ClpB,EAAEmQ,QAAQ+Y,IAA0B/qB,KAAKirB,gBAAgBhmB,EAAMZ,KACnExC,EAAIylB,SAASjjB,IAGfrE,KAAOkrB,kBAAkB7mB,EAAQ0mB,KAIrC7C,GAAArgB,UAAEmjB,sBAAqB,SAAC/lB,EAAM8lB,aAC5B,KAAOrqB,GAAMyqB,KAAkBnrB,MAAKsoB,aAClC,GAAOtoB,EAAKsoB,aAAatlB,eAAemoB,GAAxC,CACA,GAAMlmB,IAASkmB,GAAqC,MAAnBA,GAC7BtpB,EAAIqD,WAAWD,EAAMkmB,EAAiB,KAAM,OAAO,CACvD,IAAe,MAATlmB,GAAgBpD,EAAEqD,WAAWimB,EAAgBlmB,EAAO,KAExD,IAAOtD,GADCJ,GAAW4pB,EAAe9T,MAAM,KAC7B7V,EAAID,EAASG,OAAQF,EAAI,EAAGA,IAAK,CAC1C,GAAQoQ,GAAUrQ,EAAS7B,MAAM,EAAG8B,GAAGU,KAAK,KACpC4D,EAAStE,IAAMD,EAASG,MAChC,IAAMqpB,EAAsBnZ,IAAYmZ,EAAsBnZ,KAAa9L,EAAQ,KAEnF,IADAilB,EAAwBnZ,GAAW9L,EAC7B8L,IAAY3M,EAAM,SAMhCijB,GAAArgB,UAAEojB,gBAAe,SAACG,EAAYC,GAU5B,eAPMC,GAAU,EACVjnB,EAASgnB,EAKPE,EAAiB1pB,EAAEupB,GAAY/T,MAAM,KAAKhS,IAAIhG,GAAakG,QAC1DlB,GAAUA,IAAWrE,KAAKsX,MAAM,CACvC,GAAQlG,GACN/M,EAASwd,SAAWxd,IAAWgnB,GAAgBrrB,EAAK4T,UAAU2X,EAAe7rB,MAAM,GAAG,GACxF,KAAOM,EAAKyoB,SAAS3B,cAAcziB,EAAO0d,OAASqJ,GAAa,CAC9D,GAAQI,GAAeF,EAAU,MAAQD,EAClCrrB,GAAKyrB,mBAAmBpnB,EAAQmnB,KACrCF,GAAY,EACZzf,EAAO6f,wBACLta,EAAU/M,EAAOyd,MAAQzd,IAAWgnB,GAAgBxpB,EAAEmoB,KAAKuB,KAGjElnB,EAAW+M,EAEb,MAASka,IAGXpD,GAAArgB,UAAE4jB,mBAAkB,SAACpnB,EAAQmnB,aAC3B,SAAMA,IAAgB3pB,EAAEulB,SAASoE,EAAcnnB,QACzCxC,EAAEyR,KAAKjP,EAAQ,SAAAkB,GAAM,OAAIA,EAAMX,UAC5B/C,EAAEyR,KAAKjP,EAAQ,SAAAkB,GAAM,MAAGvF,GAAKyrB,mBAAmBlmB,EAAOimB,OAGlEtD,GAAArgB,UAAEqjB,kBAAiB,SAAC7mB,EAAQ0mB,aAC1B,IAAMA,EAAsB1mB,EAAO0d,OAAQ,OAAO,CAC5C1d,GAAO2e,mBAAoB3e,GAAO2e,WACxC,IAAM2I,IAAyB,CAiB/B,OAhBA9pB,GAAImD,KAAKX,EAAQ,SAACkB,EAAOvG,GACvB,GACM4sB,GADAC,GAAe,CAErB,IAAMd,EAAsBzpB,EAAS+C,EAAO0d,MAAOhjB,EAAUC,KAC3D6sB,GAAiB,EACjBD,GAAgB,MACT,IAAIrmB,EAAMX,OAAQ,CACzB,GAAQwhB,GAAcpmB,EAAKyoB,SAAS3B,cAAcvhB,EAAMwc,QAClDqE,GAAevkB,EAAEuU,IAAI2U,EAAuBxlB,EAAMwc,UACtD6J,EAAgB5rB,EAAKkrB,kBAAkB3lB,EAAOwlB,GAC9Cc,GAAkBzF,IAAgBwF,GAGhCC,GAAc7rB,EAAK0rB,wBAAwBrnB,EAAQrF,GACzD2sB,EAA2BA,GAA0BC,IAE9CD,GAGXzD,GAAArgB,UAAE+L,UAAS,SAACqN,GAIV,IAAoB,GAHd5c,UACE9C,EAAWM,EAAEC,SAASmf,GAC5Bpf,EAAIof,GAAgB5J,MAAM,KAAKhS,IAAIhG,GAAakG,QAAU0b,EACxCzf,EAAA,EAAAC,EAAIF,EAAQC,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CAChC,GADWI,GAAOH,EAAAD,EAElB,IADE6C,EAASzC,EAAUyC,EAAOzC,GAAW5B,EAAKsX,KAC3B5O,SAAXrE,EAAsB,OAE9B,MAASA,IAGX6jB,GAAArgB,UAAEikB,+BAA8B,SAACznB,EAAQrF,GACvC,GAAMuF,GAAa2C,OAAO2e,yBAAyBxhB,EAAQrF,EAC3D,IAAMuF,EAAY,CAChB,IAAOA,EAAWqR,WAChB,KAAQ,IAAI9S,OACV,wEACKuB,EAAY,MAAA,KAAKrF,EAE1B,KAAOuF,EAAWP,MAAQO,EAAW6K,IACnC,KAAQ,IAAItM,OAAM,uBAAuBuB,EAAY,MAAA,KAAKrF,OAErD,IAAIA,IAAOqF,GAClB,KAAQ,IAAIvB,OACR,2DAA2DuB,EAAY,MAAA,KAAKrF,EAElF,OAASuF,IAGX2jB,GAAArgB,UAAE+iB,qBAAoB,SAACvmB,EAAQrF,EAAKuG,GAC5BlB,EAAOrB,eAAe,WAAUqB,EAASA,EAAO0S,MACtD,IAAMxS,GAAavE,KAAK8rB,+BAA+BznB,EAAQrF,EACzDuF,IACJvE,KAAOooB,8BAA+B,EACtC/jB,EAASrF,GAAOuG,EAChBvF,KAAOooB,8BAA+B,IAEtCvT,EAAMzF,IAAI/K,EAAQrF,EAAKuG,GACvBhB,EAAe2C,OAAO2e,yBAAyBxhB,EAAQrF,GACvDkI,OAASob,eAAeje,EAAQrF,GAC9BgF,IAAOO,EAAWP,IAAKoL,IAAKpP,KAAK+rB,2BAA2BllB,KAAK7G,KAAMuE,EAAYvF,GACnF2W,cAAgB,EAAMC,YAAY,MAKxCsS,GAAArgB,UAAEkkB,2BAA0B,SAACxnB,EAAYvF,EAAKkO,GAC5C,IAAOlN,KAAKooB,6BAA8B,CACxC,GAAQloB,GAAI,GAAI4C,OAAM,6CAA6C9D,EAEnE,MADAkB,GAAImnB,UAAY,qBACRnnB,EAEVqE,EAAa6K,IAAIlO,KAAKlB,KAAMkN,IAG9Bgb,GAAArgB,UAAE6jB,wBAAuB,SAACrnB,EAAQrF,GAC1BqF,EAAOrB,eAAe,WAAUqB,EAASA,EAAO0S,OAEtD/W,KAAO8rB,+BAA+BznB,EAAQrF,GAC9CgB,KAAOwqB,eAAenmB,EAAOrF,IAC7B6V,EAAMuC,OAAO/S,EAAQrF,IAGvBkpB,GAAArgB,UAAEof,eAAc,SAAC5iB,EAAQY,GACvBjF,KAAOyoB,SAASxB,eAAe5iB,EAAQY,IAGzCwiB,GAAErF,sBAAgCpe,IAAA,WAChC,MAASugB,IAAQnC,8FO7jBnBzgB,IAAIiY,IAAQoS,GACNC,MAEAC,GAAU,MAGKnlB,GAAM,SAQbsH,GAEZ,IAAOuL,GACL,KAAQ,IAAI9W,OAAM,oEAEpB9C,MAAO0c,SAAWrO,EAAQnP,QAAQ,MAAO,IACzCc,KAAOmsB,cAAgB,GAAInQ,GAC3Bhc,KAAO8e,YAAc,GAAInF,GAAWC,IACpC5Z,KAAO4U,KAAO,GAAIC,GAElB+E,GAASxL,YAAYpO,KAAK0c,UAC1B1c,KAAOosB,UAAY,GAAI3P,GAASzc,KAAK0c,SAAU9C,IAC/C5Z,KAAOgR,MAAQ,GAAIkX,IAAKloB,KAAMA,KAAK0c,SAAU9C,GAAQ5Z,KAAK8e,aAE1D5X,OAASC,OAAOnH,wIAGlB2I,IAAEka,KAAQ7e,IAAA,WAAI,MAAOhE,MAAKosB,UAAU9U,MACpC3O,GAAE2O,KAAQtT,IAAA,WAAI,MAAOhE,MAAKgR,MAAMsG,MAYhCvQ,GAAAc,UAAEoe,MAAK,SAACvB,GACN1kB,KAAOgR,MAAM3G,KAAKqa,IAGpB3d,GAAAc,UAAEiN,QAAO,WACP9U,KAAO4U,KAAKa,WACZzV,KAAOgR,MAAM8D,UACb9U,KAAOosB,UAAUtX,WAGnBnM,GAAEwP,IAAOnU,IAAA,WAAI,MAAOkU,MAAKC,MAAQnY,KAAK6iB,KAAKhG,YAC3C9V,GAAAc,UAAEwkB,OAAM,WAAI,MAAOrsB,MAAKmsB,cAAchQ,kBAAkBnc,KAAKmY,MAE7DpR,GAAAc,UAAEykB,aAAY,SAAC/e,aACb,OAASvN,MAAK8e,YAAY7D,QAAQ,OAAQ,eAAgB,GAAI5J,GAAUrR,KAAKgR,MAAO,KAAM,WACxF,MAAS4I,IAAO5K,oBAAoBhP,EAAK0c,SAAUnP,GAAQgf,YAAY,OAI3ExlB,GAAAc,UAAE2kB,eAAc,qBACd,OAASxsB,MAAK8e,YAAY7D,QACxB,OAAU,iBAAkB,GAAI5J,GAAUrR,KAAKgR,MAAO,KAAM,WAC1D,MAAS4I,IAAOzK,OAAOnP,EAAK0c,aAKlC3V,GAAAc,UAAEiS,UAAS,SAACoJ,EAAYlJ,GACtB,MAASha,MAAK8e,YAAYhF,UAAUoJ,EAAYlJ,IAIlDjT,GAAAc,UAAE0b,QAAO,SAACpP,EAAO7P,GAMf,MALOA,KACLA,EAAgB6P,EAChBA,EAAUzL,QAENpE,YAAuBd,KAAQc,GAAezC,EAAGyC,IAC9C,GAAI4P,GAAUC,EAAO7P,EAAatE,KAAKgR,MAAO,YAIzDjK,GAAAc,UAAEoK,KAAI,SAACwG,EAAQ7Y,aACbA,GAAaD,EAAoBC,EACjC,IAAM6sB,GAASnsB,EACPD,EAAU,GAAIR,SAAQ,SAACC,EAASK,GACtC,GACMusB,GADEvY,KAGFmP,EAAY,GAAIpP,GAAUC,GAAQ/S,OAAQqX,GAASzY,EAAKgR,MAAO,QAE/DmS,EAAcnjB,EAAK8Z,UAAU,QAASU,UAAW,SAAAiF,GACrD,QAAWhY,GAAMlD,GACf,GAAOA,EACP,MAAMA,aAAsBf,GAAeic,EAAGhH,OAAOtG,QAAQ5N,GACpD1C,EAAEyR,KAAK/O,EAAY,SAAAgB,GAAM,MAAGkC,GAAMlC,KAEvCkC,EAAM6b,EAAUjO,MACpBlV,EAASsf,EAAGpe,OACZorB,QAIElX,EAAUvV,EAAKuG,MAAM,WAAG,MAAG+c,GAAUtQ,OAAO,SAAAA,GACzCA,IACPuC,IACAA,EAAY,KACZmX,EAAoBnsB,EAClBX,EAAWuU,EAAM/S,QAAS,WAAOsrB,EAAkB,KAAMD,MACvD7rB,KAAK,SAAAQ,GAAWtB,EAAQsB,IAAW,SAAAC,GAAUlB,EAAOkB,OAG1DorB,GAAY,WACJlX,IAAUA,IAAWA,EAAU,MAC/B4N,IAAcA,IAAeA,EAAc,MAC3CG,IAAYA,EAAUxO,UAAWwO,EAAY,MAC7CoJ,GAAmBA,EAAgBpsB,QAAQosB,EAAgBpsB,UAGnEA,EAAW,WACTH,EAAS,GAAI2C,OAAM,aACnB2pB,MAGJ,OAASrsB,GAAcC,EAASC,IAGlCyG,GAAAc,UAAEtB,MAAK,SAACmd,EAAWC,EAAYzU,GAC7B,GAAMyd,GAAe,EAEbpX,EAAUvV,KAAK4U,KAAKhO,OAAO8c,EAAW,SAACxW,EAAUsD,GACvDmc,IACuB,IAAjBA,EAEJ9sB,QAAUC,UAAUc,KAAK,WACjB+rB,EAAe,GAAKjJ,MAAgBxW,IAC1CyW,EAAazW,EAAUsD,GACvB0M,EAAuB/W,aAGzBwd,EAAazW,EAAUsD,GACvB0M,EAAuB/W,YAErB6P,WAAW,EAAMC,KAAM/G,GAAWA,EAAQ+G,MAEhD,OAASV,IAGXxO,GAAAc,UAAEkc,KAAI,SAACD,EAAY5U,MACXud,GAASG,SACTvsB,EAAU,GAAIR,SAAQ,SAACC,EAASK,GACpC,GAAMoV,GAAUvV,EAAKuG,MAAMud,EAAY,SAAAve,GAC9BA,GAEPsP,EAAMgY,SAAS,WACbtnB,EAAUue,IACHve,IACPzF,EAAUyF,GACVknB,QAGE5qB,GAAEuU,IAAIlH,EAAS,aACnB0d,EAAkB9e,WAAW,WAC3B8e,EAAkB,KAClBzsB,EAAS,GAAI2C,OAAMoM,EAAQ4d,gBAAkB,YAC7CL,KACGvd,EAAQ6d,UAEfN,EAAY,WACJlX,IAAUA,IAAWA,EAAU,MAC/BqX,IAAgBtU,aAAasU,GAAgBA,EAAgB,MACnEzsB,EAAS,GAAI2C,OAAM,eAKvB,OAFAzC,GAAYD,EAAcG,EAAeF,EAASosB,IAC5Cvd,GAAWA,EAAQiF,OAAOjF,EAAQiF,MAAMgB,IAAI,WAAY,WAAO9U,EAAQC,WACpED,GAGX0G,GAAAc,UAAEmlB,+BAA8B,WAC9BhtB,KAAOgR,MAAMiW,eAAejnB,KAAKgR,MAAMsG,KAAM,MAG/CmQ,GAAErF,sBAAgCpe,IAAA,WAAI,MAAOhE,MAAKgR,MAAMoR,uBAExDrb,GAAEkmB,cAAoB,SAAClkB,GACrB,GAAM6Q,GAAQ,KAAM,IAAI9W,OAAM,2BAC9B,IAAMjB,EAAEC,SAASiH,GAAY,CAC3B,GAAQmkB,GAASnnB,OAAOonB,cAAgBpnB,OAAOmnB,MAC/C,KAAOA,EAAQ,KAAM,IAAIpqB,OAAM,yCAC/BiG,GAAc,GAAImkB,GAAOnkB,GAI3B,MAFA6Q,IAAW,GAAI9Q,GAAOC,GAChBijB,IAASpS,GAAOrO,cAAcygB,IAC3BpS,GAAOvP,KAAKtB,GAAWnI,KAC9B,SAAGuH,MAACilB,GAAoBjlB,EAAAilB,qBAAEC,EAAkBllB,EAAAklB,kBAC1CnmB,QAASob,eAAevb,GAAO,wBAAyBxB,MAAO8nB,GAC/D,KAAiB,GAAA7rB,GAAA,EAAAC,EAAI2rB,EAAoB5rB,EAAAC,EAAAC,OAAAF,GAAA,EAAE,CACzC,GADW+K,GAAI9K,EAAAD,EACbuF,IAAMumB,OAAO/gB,GAAQqN,GAAOtN,oBAAoBC,OAM1Dkb,GAAE6F,OAAiBtpB,IAAA,WAAI,MAAOioB,KAC9BllB,GAAEwmB,UAAgB,SAACC,GACjBzmB,GAAQumB,OAAOE,GAAgB5T,GAAOtN,oBAAoBkhB,IAG5DzmB,GAAE4J,iBAAuB,WAAI,MAAOiJ,IAAOjJ,oBAC3C5J,GAAEiE,QAAc,WAAI,MAAO4O,IAAO5O,WAClCjE,GAAEoE,4BAAkC,SAACC,EAAyBC,EAAuBC,GACnF,MAASsO,IAAOzO,4BACdC,EAA2BC,EAAuBC,IAGtDvE,GAAE0mB,sBAA4B,SAACvnB,GAC7BgX,EAAuBjX,eAAeC,IAGxCa,GAAEhI,UAAgB,QAAAA,GAACC,GAAM,MAAOD,GAAUC,IAC1C+H,GAAE1H,YAAkB,QAAAA,GAAC8mB,GAAa,MAAO9mB,GAAY8mB,IAErDpf,GAAEwE,cAAoB,SAACC,GACrBwgB,GAAYxgB,EACNoO,IAAQA,GAAOrO,cAAcC,IAIrC7C,GAAE1B,iBAAoBjD,IAAA,WAAI,MAAO+C,IAAME,kBACvC0B,GAAEujB,QAAWloB,IAAA,WAAI,MAAO+C,IAAMmlB,SAC9BvjB,GAAE+kB,qBAAwB1pB,IAAA,WAAI,MAAO+C,IAAM2mB,8FAG3CxmB,OAAOwO,iBAAiB3O,IACtBE,kBAAmB1B,MAAO0B,GAC1BilB,SAAU3mB,MAAO2mB,MAGnBhP,EAAqBpW,aAAaC","file":"firetruss.umd.min.js","sourcesContent":["/* globals window */\n\nimport _ from 'lodash';\n\n\nlet digestRequested;\nlet bareDigest = function() {\n  digestRequested = true;\n};\n\n\nconst angularProxy = {\n  active: typeof window !== 'undefined' && window.angular,\n  debounceDigest(wait) {\n    if (wait) {\n      angularProxy.digest = _.debounce(bareDigest, wait);\n    } else {\n      angularProxy.digest = bareDigest;\n    }\n  }\n};\n['digest', 'watch', 'defineModule'].forEach(method => {angularProxy[method] = noop;});\n\nif (angularProxy.active) {\n  angularProxy.digest = bareDigest;\n  angularProxy.watch = function() {throw new Error('Angular watch proxy not yet initialized');};\n  window.angular.module('firetruss', []).run(['$rootScope', function($rootScope) {\n    angularProxy.digest = function () {\n      if (digestRequested) return;\n      digestRequested = true;\n      $rootScope.$evalAsync(function() {digestRequested = false;});\n    };\n    if (digestRequested) angularProxy.digest();\n    angularProxy.watch = $rootScope.$watch.bind($rootScope);\n  }]);\n  angularProxy.defineModule = function(Truss) {\n    window.angular.module('firetruss').constant('Truss', Truss);\n  };\n}\n\nfunction noop() {}\n\nexport default angularProxy;\n","import _ from 'lodash';\n\n\nexport const SERVER_TIMESTAMP = Object.freeze({'.sv': 'timestamp'});\n\nexport function escapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/[\\\\\\.\\$\\#\\[\\]\\/]/g, function(char) {\n    return '\\\\' + char.charCodeAt(0).toString(16);\n  });\n}\n\nexport function unescapeKey(key) {\n  if (!key) return key;\n  return key.toString().replace(/\\\\[0-9a-f]{2}/gi, function(code) {\n    return String.fromCharCode(parseInt(code.slice(1), 16));\n  });\n}\n\nexport function wrapPromiseCallback(callback) {\n  return function() {\n    try {\n      return Promise.resolve(callback.apply(this, arguments));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport function promiseCancel(promise, cancel) {\n  promise = promiseFinally(promise, () => {cancel = null;});\n  promise.cancel = () => {\n    if (!cancel) return;\n    cancel();\n    cancel = null;\n  };\n  propagatePromiseProperty(promise, 'cancel');\n  return promise;\n}\n\nfunction propagatePromiseProperty(promise, propertyName) {\n  const originalThen = promise.then, originalCatch = promise.catch;\n  promise.then = (onResolved, onRejected) => {\n    const derivedPromise = originalThen.call(promise, onResolved, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  promise.catch = onRejected => {\n    const derivedPromise = originalCatch.call(promise, onRejected);\n    derivedPromise[propertyName] = promise[propertyName];\n    propagatePromiseProperty(derivedPromise, propertyName);\n    return derivedPromise;\n  };\n  return promise;\n}\n\nexport function promiseFinally(promise, onFinally) {\n  if (!onFinally) return promise;\n  onFinally = wrapPromiseCallback(onFinally);\n  return promise.then(result => {\n    return onFinally().then(() => result);\n  }, error => {\n    return onFinally().then(() => Promise.reject(error));\n  });\n}\n\nexport function joinPath() {\n  const segments = [];\n  for (let segment of arguments) {\n    if (!_.isString(segment)) segment = '' + segment;\n    if (segment.charAt(0) === '/') segments.splice(0, segments.length);\n    segments.push(segment);\n  }\n  if (segments[0] === '/') segments[0] = '';\n  return segments.join('/');\n}\n\n\nconst pathMatchers = {};\nconst maxNumPathMatchers = 1000;\n\n\nclass PathMatcher {\n  constructor(pattern) {\n    this.variables = [];\n    const prefixMatch = _.endsWith(pattern, '/$*');\n    if (prefixMatch) pattern = pattern.slice(0, -3);\n    const pathTemplate = pattern.replace(/\\/\\$[^\\/]*/g, match => {\n      if (match.length > 1) this.variables.push(match.slice(1));\n      return '\\u0001';\n    });\n    Object.freeze(this.variables);\n    if (/[$-.?[-^{|}]/.test(pathTemplate)) {\n      throw new Error('Path pattern has unescaped keys: ' + pattern);\n    }\n    this._regex = new RegExp(\n      '^' + pathTemplate.replace(/\\u0001/g, '/([^/]+)') + (prefixMatch ? '($|/)' : '$'));\n  }\n\n  match(path) {\n    this._regex.lastIndex = 0;\n    const match = this._regex.exec(path);\n    if (!match) return;\n    const bindings = {};\n    for (let i = 0; i < this.variables.length; i++) {\n      bindings[this.variables[i]] = unescapeKey(match[i + 1]);\n    }\n    return bindings;\n  }\n\n  test(path) {\n    return this._regex.test(path);\n  }\n\n  toString() {\n    return this._regex.toString();\n  }\n}\n\n\nexport function makePathMatcher(pattern) {\n  let matcher = pathMatchers[pattern];\n  if (!matcher) {\n    matcher = new PathMatcher(pattern);\n    // Minimal pseudo-LRU behavior, since we don't expect to actually fill up the cache.\n    if (_.size(pathMatchers) === maxNumPathMatchers) delete pathMatchers[_.keys(pathMatchers)[0]];\n    pathMatchers[pattern] = matcher;\n  }\n  return matcher;\n}\n","import {unescapeKey} from './utils.js';\nimport _ from 'lodash';\n\n// jshint browser:true\n\nconst MIN_WORKER_VERSION = '0.4.0';\n\n\nclass Snapshot {\n  constructor({path, value, valueError, exists}) {\n    this._path = path;\n    this._value = value;\n    this._valueError = errorFromJson(valueError);\n    this._exists = value === undefined ? exists || false : value !== null;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get value() {\n    this._checkValue();\n    return this._value;\n  }\n\n  get key() {\n    if (this._key === undefined) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n\n  _checkValue() {\n    if (this._valueError) throw this._valueError;\n    if (this._value === undefined) throw new Error('Value omitted from snapshot');\n  }\n}\n\n\nexport default class Bridge {\n  constructor(webWorker) {\n    this._idCounter = 0;\n    this._deferreds = {};\n    this._suspended = false;\n    this._servers = {};\n    this._callbacks = {};\n    this._log = _.noop;\n    this._simulatedTokenGenerator = null;\n    this._maxSimulationDuration = 5000;\n    this._simulatedCallFilter = null;\n    this._inboundMessages = [];\n    this._outboundMessages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    this._port = webWorker.port || webWorker;\n    this._shared = !!webWorker.port;\n    this._port.onmessage = this._receive.bind(this);\n    window.addEventListener('unload', () => {this._send({msg: 'destroy'});});\n    setInterval(() => {this._send({msg: 'ping'});}, 60 * 1000);\n  }\n\n  init(webWorker) {\n    const items = [];\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      if (!storage) return;\n      for (let i = 0; i < storage.length; i++) {\n        const key = storage.key(i);\n        items.push({key, value: storage.getItem(key)});\n      }\n    } catch (e) {\n      // Some browsers don't like us accessing local storage -- nothing we can do.\n    }\n    return this._send({msg: 'init', storage: items}).then(response => {\n      const workerVersion = response.version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n      if (workerVersion) {\n        const minVersion = MIN_WORKER_VERSION.match(/^(\\d+)\\.(\\d+)\\.(\\d+)(-.*)?$/);\n        // Major version must match precisely, minor and patch must be greater than or equal.\n        const sufficient = workerVersion[1] === minVersion[1] && (\n          workerVersion[2] > minVersion[2] ||\n          workerVersion[2] === minVersion[2] && workerVersion[3] >= minVersion[3]\n        );\n        if (!sufficient) return Promise.reject(new Error(\n          `Incompatible Firetruss worker version: ${response.version} ` +\n          `(${MIN_WORKER_VERSION} or better required)`\n        ));\n      }\n      return response;\n    });\n  }\n\n  suspend(suspended) {\n    if (suspended === undefined) suspended = true;\n    if (this._suspended === suspended) return;\n    this._suspended = suspended;\n    if (!suspended) {\n      this._receiveMessages(this._inboundMessages);\n      this._inboundMessages = [];\n      if (this._outboundMessages.length) Promise.resolve().then(this._flushMessageQueue);\n    }\n  }\n\n  debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    this._simulatedTokenGenerator = simulatedTokenGenerator;\n    if (maxSimulationDuration !== undefined) this._maxSimulationDuration = maxSimulationDuration;\n    this._simulatedCallFilter = callFilter || function() {return true;};\n  }\n\n  enableLogging(fn) {\n    if (fn) {\n      if (fn === true) fn = console.log.bind(console);\n      this._log = fn;\n    } else {\n      this._log = _.noop;\n    }\n  }\n\n  _send(message) {\n    message.id = ++this._idCounter;\n    let promise;\n    if (message.oneWay) {\n      promise = Promise.resolve();\n    } else {\n      promise = new Promise((resolve, reject) => {\n        this._deferreds[message.id] = {resolve, reject};\n      });\n      const deferred = this._deferreds[message.id];\n      deferred.promise = promise;\n      promise.sent = new Promise(resolve => {\n        deferred.resolveSent = resolve;\n      });\n      deferred.params = message;\n    }\n    if (!this._outboundMessages.length && !this._suspended) {\n      Promise.resolve().then(this._flushMessageQueue);\n    }\n    this._log('send:', message);\n    this._outboundMessages.push(message);\n    return promise;\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._outboundMessages);\n    this._outboundMessages = [];\n  }\n\n  _receive(event) {\n    if (this._suspended) {\n      this._inboundMessages = this._inboundMessages.concat(event.data);\n    } else {\n      this._receiveMessages(event.data);\n    }\n  }\n\n  _receiveMessages(messages) {\n    for (const message of messages) {\n      this._log('recv:', message);\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      fn.call(this, message);\n    }\n  }\n\n  bindExposedFunction(name) {\n    return (function() {\n      return this._send({msg: 'call', name, args: Array.prototype.slice.call(arguments)});\n    }).bind(this);\n  }\n\n  resolve(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received resolution to inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.resolve(message.result);\n  }\n\n  reject(message) {\n    const deferred = this._deferreds[message.id];\n    if (!deferred) throw new Error('Received rejection of inexistent Firebase call');\n    delete this._deferreds[message.id];\n    deferred.reject(errorFromJson(message.error, deferred.params));\n  }\n\n  probeError(error) {\n    const code = error.code || error.message;\n    if (error.params && code && code.toLowerCase() === 'permission_denied') {\n      return this._simulateCall(error.params).then(securityTrace => {\n        if (securityTrace) error.permissionDeniedDetails = securityTrace;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  _simulateCall(props) {\n    if (!(this._simulatedTokenGenerator && this._maxSimulationDuration > 0)) {\n      return Promise.resolve();\n    }\n    let simulatedCalls = [];\n    switch (props.msg) {\n      case 'set':\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.value]});\n        break;\n      case 'update':\n        simulatedCalls.push({method: 'update', url: props.url, args: [props.value]});\n        break;\n      case 'on':\n        simulatedCalls.push({method: 'once', url: props.url, spec: props.spec, args: ['value']});\n        break;\n      case 'transaction':\n        simulatedCalls.push({method: 'once', url: props.url, args: ['value']});\n        simulatedCalls.push({method: 'set', url: props.url, args: [props.newValue]});\n        break;\n    }\n    if (!simulatedCalls.length || !this._simulatedCallFilter(props.msg, props.url)) {\n      return Promise.resolve();\n    }\n    const auth = this.getAuth(getUrlRoot(props.url));\n    const simulationPromise = this._simulatedTokenGenerator(auth && auth.uid).then(token => {\n      return Promise.all(simulatedCalls.map(message => {\n        message.msg = 'simulate';\n        message.token = token;\n        return this._send(message);\n      }));\n    }).then(securityTraces => {\n      if (securityTraces.every(trace => trace === null)) {\n        return 'Unable to reproduce error in simulation';\n      }\n      return securityTraces.filter(trace => trace).join('\\n\\n');\n    }).catch(e => {\n      return 'Error running simulation: ' + e;\n    });\n    const timeoutPromise = new Promise(resolve => {\n      setTimeout(resolve.bind(null, 'Simulated call timed out'), this._maxSimulationDuration);\n    });\n    return Promise.race([simulationPromise, timeoutPromise]);\n  }\n\n  updateLocalStorage(items) {\n    try {\n      const storage = window.localStorage || window.sessionStorage;\n      for (const item in items) {\n        if (item.value === null) {\n          storage.removeItem(item.key);\n        } else {\n          storage.setItem(item.key, item.value);\n        }\n      }\n    } catch (e) {\n      // If we're denied access, there's nothing we can do.\n    }\n  }\n\n  trackServer(rootUrl) {\n    if (this._servers.hasOwnProperty(rootUrl)) return;\n    const server = this._servers[rootUrl] = {authListeners: []};\n    const authCallbackId = this._registerCallback(this._authCallback.bind(this, server));\n    this._send({msg: 'onAuth', url: rootUrl, callbackId: authCallbackId});\n  }\n\n  _authCallback(server, auth) {\n    server.auth = auth;\n    for (const listener of server.authListeners) listener(auth);\n  }\n\n  onAuth(rootUrl, callback, context) {\n    const listener = callback.bind(context);\n    listener.callback = callback;\n    listener.context = context;\n    this._servers[rootUrl].authListeners.push(listener);\n    listener(this.getAuth(rootUrl));\n  }\n\n  offAuth(rootUrl, callback, context) {\n    const authListeners = this._servers[rootUrl].authListeners;\n    for (let i = 0; i < authListeners.length; i++) {\n      const listener = authListeners[i];\n      if (listener.callback === callback && listener.context === context) {\n        authListeners.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getAuth(rootUrl) {\n    return this._servers[rootUrl].auth;\n  }\n\n  authWithCustomToken(url, authToken, options) {\n    return this._send({msg: 'authWithCustomToken', url, authToken, options});\n  }\n\n  unauth(url) {\n    return this._send({msg: 'unauth', url});\n  }\n\n  set(url, value, writeSerial) {return this._send({msg: 'set', url, value, writeSerial});}\n  update(url, value, writeSerial) {return this._send({msg: 'update', url, value, writeSerial});}\n\n  on(listenerKey, url, spec, eventType, snapshotCallback, cancelCallback, context, options) {\n    const handle = {\n      listenerKey, eventType, snapshotCallback, cancelCallback, context,\n      params: {msg: 'on', listenerKey, url, spec, eventType, options}\n    };\n    const callback = this._onCallback.bind(this, handle);\n    this._registerCallback(callback, handle);\n    // Keep multiple IDs to allow the same snapshotCallback to be reused.\n    snapshotCallback.__callbackIds = snapshotCallback.__callbackIds || [];\n    snapshotCallback.__callbackIds.push(handle.id);\n    this._send({\n      msg: 'on', listenerKey, url, spec, eventType, callbackId: handle.id, options\n    }).catch(error => {\n      callback(error);\n    });\n  }\n\n  off(listenerKey, url, spec, eventType, snapshotCallback, context) {\n    const idsToDeregister = [];\n    let callbackId;\n    if (snapshotCallback) {\n      callbackId = this._findAndRemoveCallbackId(\n        snapshotCallback,\n        handle =>\n          handle.listenerKey === listenerKey && handle.eventType === eventType &&\n          handle.context === context\n      );\n      if (!callbackId) return Promise.resolve();  // no-op, never registered or already deregistered\n      idsToDeregister.push(callbackId);\n    } else {\n      for (const id of Object.keys(this._callbacks)) {\n        const handle = this._callbacks[id];\n        if (handle.listenerKey === listenerKey && (!eventType || handle.eventType === eventType)) {\n          idsToDeregister.push(id);\n        }\n      }\n    }\n    // Nullify callbacks first, then deregister after off() is complete.  We don't want any\n    // callbacks in flight from the worker to be invoked while the off() is processing, but we don't\n    // want them to throw an exception either.\n    for (const id of idsToDeregister) this._nullifyCallback(id);\n    return this._send({msg: 'off', listenerKey, url, spec, eventType, callbackId}).then(() => {\n      for (const id of idsToDeregister) this._deregisterCallback(id);\n    });\n  }\n\n  _onCallback(handle, error, snapshotJson) {\n    if (error) {\n      this._deregisterCallback(handle.id);\n      const e = errorFromJson(error, handle.params);\n      if (handle.cancelCallback) {\n        handle.cancelCallback.call(handle.context, e);\n      } else {\n        console.error(e);\n      }\n    } else {\n      handle.snapshotCallback.call(handle.context, new Snapshot(snapshotJson));\n    }\n  }\n\n  transaction(url, oldValue, relativeUpdates) {\n    return this._send({msg: 'transaction', url, oldValue, relativeUpdates});\n  }\n\n  onDisconnect(url, method, value) {\n    return this._send({msg: 'onDisconnect', url, method, value});\n  }\n\n  bounceConnection() {\n    return this._send({msg: 'bounceConnection'});\n  }\n\n  callback({id, args}) {\n    const handle = this._callbacks[id];\n    if (!handle) throw new Error('Unregistered callback: ' + id);\n    handle.callback.apply(null, args);\n  }\n\n  _registerCallback(callback, handle) {\n    handle = handle || {};\n    handle.callback = callback;\n    handle.id = `cb${++this._idCounter}`;\n    this._callbacks[handle.id] = handle;\n    return handle.id;\n  }\n\n  _nullifyCallback(id) {\n    this._callbacks[id].callback = noop;\n  }\n\n  _deregisterCallback(id) {\n    delete this._callbacks[id];\n  }\n\n  _findAndRemoveCallbackId(callback, predicate) {\n    if (!callback.__callbackIds) return;\n    let i = 0;\n    while (i < callback.__callbackIds.length) {\n      const id = callback.__callbackIds[i];\n      const handle = this._callbacks[id];\n      if (!handle) {\n        callback.__callbackIds.splice(i, 1);\n        continue;\n      }\n      if (predicate(handle)) {\n        callback.__callbackIds.splice(i, 1);\n        return id;\n      }\n      i += 1;\n    }\n  }\n}\n\n\nfunction noop() {}\n\nfunction errorFromJson(json, params) {\n  if (!json || json instanceof Error) return json;\n  const error = new Error(json.message);\n  error.params = params;\n  for (const propertyName in json) {\n    if (propertyName === 'message' || !json.hasOwnProperty(propertyName)) continue;\n    try {\n      error[propertyName] = json[propertyName];\n    } catch (e) {\n      e.extra = {propertyName};\n      throw e;\n    }\n  }\n  return error;\n}\n\nfunction getUrlRoot(url) {\n  const k = url.indexOf('/', 8);\n  return k >= 8 ? url.slice(0, k) : url;\n}\n","import {Handle, Query, Reference} from './Reference.js';\nimport angular from './angularCompatibility.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nexport default class Connector {\n  constructor(scope, connections, tree, method, refs) {\n    Object.freeze(connections);\n    this._scope = scope;\n    this._connections = connections;\n    this._tree = tree;\n    this._method = method;\n    this._refs = refs || {};\n    this._subConnectors = {};\n    this._currentDescriptors = {};\n    this._disconnects = {};\n    this._angularUnwatches = undefined;\n    this._vue = new Vue({data: _.mapValues(connections, _.constant(undefined))});\n    this.destroy = this.destroy;  // allow instance-level overrides of destroy() method\n    Object.seal(this);\n\n    this._linkScopeProperties();\n\n    _.each(connections, (descriptor, key) => {\n      if (_.isFunction(descriptor)) {\n        this._bindComputedConnection(key, descriptor);\n      } else {\n        this._connect(key, descriptor);\n      }\n    });\n\n    if (angular.active && scope && scope.$on && scope.$id) {\n      scope.$on('$destroy', () => {this.destroy();});\n    }\n  }\n\n  get ready() {\n    return _.every(this._currentDescriptors, (descriptor, key) => {\n      if (!descriptor) return false;\n      if (descriptor instanceof Handle) return descriptor.ready;\n      return this._subConnectors[key].ready;\n    });\n  }\n\n  get at() {\n    return this._refs;\n  }\n\n  destroy() {\n    this._unlinkScopeProperties();\n    _.each(this._angularUnwatches, unwatch => {unwatch();});\n    _.each(this._connections, (descriptor, key) => {this._disconnect(key);});\n    this._vue.$destroy();\n  }\n\n  _linkScopeProperties() {\n    if (!this._scope) return;\n    for (const key in this._connections) {\n      if (key in this._scope) {\n        throw new Error(`Property already defined on connection target: ${key}`);\n      }\n    }\n    Object.defineProperties(this._scope, _.mapValues(this._connections, (descriptor, key) => ({\n      configurable: true, enumerable: true, get: () => this._vue[key]\n    })));\n  }\n\n  _unlinkScopeProperties() {\n    if (!this._scope) return;\n    _.each(this._connections, (descriptor, key) => {\n      delete this._scope[key];\n    });\n  }\n\n  _bindComputedConnection(key, fn) {\n    const getter = this._computeConnection.bind(this, fn);\n    const update = this._updateComputedConnection.bind(this, key, fn);\n    // Use this._vue.$watch instead of truss.watch here so that we can disable the immediate\n    // callback if we'll get one from Angular anyway.\n    this._vue.$watch(getter, update, {immediate: !angular.active, deep: true});\n    if (angular.active) {\n      if (!this._angularUnwatches) this._angularUnwatches = [];\n      this._angularUnwatches.push(angular.watch(getter, update, true));\n    }\n  }\n\n  _computeConnection(fn) {\n    return flattenRefs(fn.call(this._scope));\n  }\n\n  _updateComputedConnection(key, value) {\n    const newDescriptor = _.isFunction(value) ? value(this._scope) : value;\n    const oldDescriptor = this._currentDescriptors[key];\n    if (oldDescriptor === newDescriptor ||\n        newDescriptor instanceof Handle && newDescriptor.isEqual(oldDescriptor)) return;\n    if (!newDescriptor) {\n      this._disconnect(key);\n      return;\n    }\n    if (newDescriptor instanceof Handle || !_.has(this._subConnectors, key)) {\n      this._disconnect(key);\n      this._connect(key, newDescriptor);\n    } else {\n      this._subConnectors[key]._updateConnections(newDescriptor);\n    }\n    this._currentDescriptors[key] = newDescriptor;\n  }\n\n  _updateConnections(connections) {\n    _.each(connections, (descriptor, key) => {\n      this._updateComputedConnection(key, descriptor);\n    });\n    _.each(this._connections, (descriptor, key) => {\n      if (!_.has(connections, key)) this._updateComputedConnection(key);\n    });\n    this._connections = connections;\n  }\n\n  _connect(key, descriptor) {\n    this._currentDescriptors[key] = descriptor;\n    if (!descriptor) return;\n    if (descriptor instanceof Reference) {\n      this._refs[key] = descriptor;\n      const updateFn = this._scope ? this._updateScopeRef.bind(this, key) : null;\n      this._disconnects[key] = this._tree.connectReference(descriptor, updateFn, this._method);\n    } else if (descriptor instanceof Query) {\n      this._refs[key] = descriptor;\n      const updateFn = this._scope ? this._updateScopeQuery.bind(this, key) : null;\n      this._disconnects[key] = this._tree.connectQuery(descriptor, updateFn, this._method);\n    } else {\n      const subScope = {}, subRefs = {};\n      this._refs[key] = subRefs;\n      const subConnector = this._subConnectors[key] =\n        new Connector(subScope, descriptor, this._tree, this._method, subRefs);\n      if (this._scope) {\n        // Use a truss.watch here instead of this._vue.$watch so that the \"immediate\" execution\n        // actually takes place after we've captured the unwatch function, in case the subConnector\n        // is ready immediately.\n        const unwatch = this._disconnects[key] = this._tree.truss.watch(\n          () => subConnector.ready,\n          subReady => {\n            if (!subReady) return;\n            unwatch();\n            delete this._disconnects[key];\n            Vue.set(this._vue.$data, key, subScope);\n            angular.digest();\n          }\n        );\n      }\n    }\n  }\n\n  _disconnect(key) {\n    delete this._refs[key];\n    if (this._scope) this._updateScopeRef(key, undefined);\n    if (_.has(this._subConnectors, key)) {\n      this._subConnectors[key].destroy();\n      delete this._subConnectors[key];\n    }\n    if (this._disconnects[key]) this._disconnects[key]();\n    delete this._disconnects[key];\n    delete this._currentDescriptors[key];\n  }\n\n  _updateScopeRef(key, value) {\n    if (this._vue[key] !== value) {\n      Vue.set(this._vue.$data, key, value);\n      angular.digest();\n    }\n  }\n\n  _updateScopeQuery(key, childKeys) {\n    let changed = false;\n    if (!this._vue[key]) {\n      Vue.set(this._vue.$data, key, {});\n      changed = true;\n    }\n    const subScope = this._vue[key];\n    for (const childKey in subScope) {\n      if (!subScope.hasOwnProperty(childKey)) continue;\n      if (!_.contains(childKeys, childKey)) {\n        Vue.delete(subScope, childKey);\n        changed = true;\n      }\n    }\n    let object;\n    for (const segment of this._currentDescriptors[key].path.split('/')) {\n      object = segment ? object[segment] : this._tree.root;\n    }\n    for (const childKey of childKeys) {\n      if (subScope.hasOwnProperty(childKey)) continue;\n      Vue.set(subScope, childKey, object[childKey]);\n      changed = true;\n    }\n    if (changed) angular.digest();\n  }\n\n}\n\nfunction flattenRefs(refs) {\n  if (!refs) return;\n  if (refs instanceof Handle) return refs.toString();\n  return _.mapValues(refs, flattenRefs);\n}\n\n","import {Reference, Handle} from './Reference.js';\nimport {makePathMatcher, joinPath, escapeKey, unescapeKey, promiseFinally} from './utils.js';\n\nimport _ from 'lodash';\nimport performanceNow from 'performance-now';\n\n// These are defined separately for each object so they're not included in Value below.\nconst RESERVED_VALUE_PROPERTY_NAMES = {\n  $truss: true, $parent: true, $key: true, $path: true, $ref: true,\n  $$touchThis: true, $$initializers: true, $$finalizers: true,\n  $$$trussCheck: true,\n  __ob__: true\n};\n\nconst computedPropertyStats = {};\n\n// Holds properties that we're going to set on a model object that's being created right now as soon\n// as it's been created, but that we'd like to be accessible in the constructor.  The object\n// prototype's getters will pick those up until they get overridden in the instance.\nlet creatingObjectProperties;\n\n\nclass Value {\n  get $parent() {return creatingObjectProperties.$parent.value;}\n  get $path() {return creatingObjectProperties.$path.value;}\n  get $truss() {\n    Object.defineProperty(this, '$truss', {value: this.$parent.$truss});\n    return this.$truss;\n  }\n  get $ref() {\n    Object.defineProperty(this, '$ref', {value: new Reference(this.$truss._tree, this.$path)});\n    return this.$ref;\n  }\n  get $refs() {return this.$ref;}\n  get $key() {\n    Object.defineProperty(\n      this, '$key', {value: unescapeKey(this.$path.slice(this.$path.lastIndexOf('/') + 1))});\n    return this.$key;\n  }\n  get $data() {return this;}\n  get $empty() {return _.isEmpty(this.$data);}\n  get $keys() {return _.keys(this.$data);}\n  get $values() {return _.values(this.$data);}\n  get $meta() {return this.$truss.meta;}\n  get $root() {return this.$truss.root;}  // access indirectly to leave dependency trace\n  get $now() {return this.$truss.now;}\n  get $ready() {return this.$ref.ready;}\n  get $overridden() {return false;}\n\n  $intercept(actionType, callbacks) {\n    const unintercept = this.$truss.intercept(actionType, callbacks);\n    const uninterceptAndRemoveFinalizer = () => {\n      unintercept();\n      _.pull(this.$$finalizers, uninterceptAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(uninterceptAndRemoveFinalizer);\n    return uninterceptAndRemoveFinalizer;\n  }\n\n  $connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    const connector = this.$truss.connect(scope, wrapConnections(this, connections));\n    const originalDestroy = connector.destroy;\n    const destroy = () => {\n      _.pull(this.$$finalizers, destroy);\n      return originalDestroy.call(connector);\n    };\n    this.$$finalizers.push(destroy);\n    connector.destroy = destroy;\n    return connector;\n  }\n\n  $peek(target, callback) {\n    const promise = promiseFinally(\n      this.$truss.peek(target, callback), () => {_.pull(this.$$finalizers, promise.cancel);}\n    );\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $watch(subjectFn, callbackFn, options) {\n    let unwatchAndRemoveFinalizer;\n\n    const unwatch = this.$truss.watch(() => {\n      this.$$touchThis();\n      return subjectFn.call(this);\n    }, callbackFn.bind(this), options);\n\n    unwatchAndRemoveFinalizer = () => {\n      unwatch();\n      _.pull(this.$$finalizers, unwatchAndRemoveFinalizer);\n    };\n    this.$$finalizers.push(unwatchAndRemoveFinalizer);\n    return unwatchAndRemoveFinalizer;\n  }\n\n  $when(expression, options) {\n    const promise = this.$truss.when(() => {\n      this.$$touchThis();\n      return expression.call(this);\n    }, options);\n    promiseFinally(promise, () => {_.pull(this.$$finalizers, promise.cancel);});\n    this.$$finalizers.push(promise.cancel);\n    return promise;\n  }\n\n  $set(value) {return this.$ref.set(value);}\n  $update(values) {return this.$ref.update(values);}\n  $override(values) {return this.$ref.override(values);}\n  $commit(options, updateFn) {return this.$ref.commit(options, updateFn);}\n\n  $$touchThis() {\n    // jshint expr:true\n    if (this.$parent) {\n      (this.$parent.hasOwnProperty('$data') ? this.$parent.$data : this.$parent)[this.$key];\n    } else {\n      this.$root;\n    }\n    // jshint expr:false\n  }\n\n  get $$initializers() {\n    Object.defineProperty(this, '$$initializers', {\n      value: [], writable: false, enumerable: false, configurable: true});\n    return this.$$initializers;\n  }\n\n  get $$finalizers() {\n    Object.defineProperty(this, '$$finalizers', {\n      value: [], writable: false, enumerable: false, configurable: false});\n    return this.$$finalizers;\n  }\n}\n\nclass ComputedPropertyStats {\n  constructor(name) {\n    _.extend(this, {name, numRecomputes: 0, numUpdates: 0, runtime: 0});\n  }\n}\n\nclass ErrorWrapper {\n  constructor(error) {\n    this.error = error;\n  }\n}\n\n\nexport default class Modeler {\n  constructor() {\n    this._trie = {Class: Value};\n    Object.freeze(this);\n  }\n\n  init(classes, rootAcceptable) {\n    if (_.isPlainObject(classes)) {\n      _.each(classes, (Class, path) => {\n        if (Class.$trussMount) return;\n        Class.$$trussMount = Class.$$trussMount || [];\n        Class.$$trussMount.push(path);\n      });\n      classes = _.values(classes);\n      _.each(classes, Class => {\n        if (!Class.$trussMount && Class.$$trussMount) {\n          Class.$trussMount = Class.$$trussMount;\n          delete Class.$$trussMount;\n        }\n      });\n    }\n    classes = _.uniq(classes);\n    _.each(classes, Class => this._mountClass(Class, rootAcceptable));\n    this._decorateTrie(this._trie);\n  }\n\n  destroy() {\n  }\n\n  _getMount(path, scaffold, predicate) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      let child = segment ?\n        node.children && (node.children[segment] || node.children.$) : this._trie;\n      if (!child) {\n        if (!scaffold) return;\n        node.children = node.children || {};\n        child = node.children[segment] = {Class: Value};\n      }\n      node = child;\n      if (predicate && predicate(node)) break;\n    }\n    return node;\n  }\n\n  _findMount(predicate, node) {\n    if (!node) node = this._trie;\n    if (predicate(node)) return node;\n    for (const childKey of _.keys(node.children)) {\n      const result = this._findMount(predicate, node.children[childKey]);\n      if (result) return result;\n    }\n  }\n\n  _decorateTrie(node) {\n    _.each(node.children, child => {\n      this._decorateTrie(child);\n      if (child.local || child.localDescendants) node.localDescendants = true;\n    });\n  }\n\n  _augmentClass(Class) {\n    let computedProperties;\n    let proto = Class.prototype;\n    while (proto && proto.constructor !== Object) {\n      for (const name of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n        if (name.charAt(0) === '$') {\n          if (_.isEqual(descriptor, Object.getOwnPropertyDescriptor(Value.prototype, name))) {\n            continue;\n          }\n          throw new Error(`Property names starting with \"$\" are reserved: ${Class.name}.${name}`);\n        }\n        if (descriptor.set) {\n          throw new Error(`Computed properties must not have a setter: ${Class.name}.${name}`);\n        }\n        if (descriptor.get && !(computedProperties && computedProperties[name])) {\n          (computedProperties || (computedProperties = {}))[name] = {\n            name, fullName: `${proto.constructor.name}.${name}`, get: descriptor.get\n          };\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (const name of Object.getOwnPropertyNames(Value.prototype)) {\n      if (name === 'constructor' || Class.prototype.hasOwnProperty(name)) continue;\n      Object.defineProperty(\n        Class.prototype, name, Object.getOwnPropertyDescriptor(Value.prototype, name));\n    }\n    return computedProperties;\n  }\n\n  _mountClass(Class, rootAcceptable) {\n    const computedProperties = this._augmentClass(Class);\n    let mounts = Class.$trussMount;\n    if (!mounts) throw new Error(`Class ${Class.name} lacks a $trussMount static property`);\n    if (!_.isArray(mounts)) mounts = [mounts];\n    _.each(mounts, mount => {\n      if (_.isString(mount)) mount = {path: mount};\n      if (!rootAcceptable && mount.path === '/') {\n        throw new Error('Data root already accessed, too late to mount class');\n      }\n      const matcher = makePathMatcher(mount.path);\n      for (const variable of matcher.variables) {\n        if (variable === '$' || variable.charAt(1) === '$') {\n          throw new Error(`Invalid variable name: ${variable}`);\n        }\n        if (variable.charAt(0) === '$' && (\n            _.has(Value.prototype, variable) || RESERVED_VALUE_PROPERTY_NAMES[variable]\n        )) {\n          throw new Error(`Variable name conflicts with built-in property or method: ${variable}`);\n        }\n      }\n      const escapedKey = mount.path.match(/\\/([^/]*)$/)[1];\n      if (escapedKey.charAt(0) === '$') {\n        if (mount.placeholder) {\n          throw new Error(\n            `Class ${Class.name} mounted at wildcard ${escapedKey} cannot be a placeholder`);\n        }\n      } else {\n        if (!_.has(mount, 'placeholder')) mount.placeholder = {};\n      }\n      const targetMount = this._getMount(mount.path.replace(/\\$[^/]*/g, '$'), true);\n      if (targetMount.matcher) {\n        throw new Error(\n          `Multiple classes mounted at ${mount.path}: ${targetMount.Class.name}, ${Class.name}`);\n      }\n      _.extend(targetMount, {\n        Class, matcher, computedProperties, escapedKey, placeholder: mount.placeholder,\n        local: mount.local\n      });\n    });\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  createObject(path, properties) {\n    let mount = this._getMount(path) || {Class: Value};\n    if (mount.matcher) {\n      const match = mount.matcher.match(path);\n      for (const variable in match) {\n        properties[variable] = {value: match[variable]};\n      }\n    }\n\n    creatingObjectProperties = properties;\n    const object = new mount.Class();\n    creatingObjectProperties = null;\n\n    if (mount.keysUnsafe) properties.$data = {value: Object.create(null)};\n    if (mount.computedProperties) {\n      _.each(mount.computedProperties, prop => {\n        properties[prop.name] = this._buildComputedPropertyDescriptor(object, prop);\n      });\n    }\n\n    return object;\n  }\n\n  _buildComputedPropertyDescriptor(object, prop) {\n    if (!computedPropertyStats[prop.fullName]) {\n      Object.defineProperty(computedPropertyStats, prop.fullName, {\n        value: new ComputedPropertyStats(prop.fullName), writable: false, enumerable: true,\n        configurable: false\n      });\n    }\n    const stats = computedPropertyStats[prop.fullName];\n\n    let value;\n    let writeAllowed = false;\n\n    object.$$initializers.push(vue => {\n      object.$$finalizers.push(\n        vue.$watch(computeValue.bind(object, prop, stats), newValue => {\n          if (_.isEqual(value, newValue, isTrussValueEqual)) return;\n          // console.log('updating', prop.fullName, 'from', value, 'to', newValue);\n          stats.numUpdates += 1;\n          writeAllowed = true;\n          object[prop.name] = newValue;\n          writeAllowed = false;\n          if (newValue instanceof ErrorWrapper) throw newValue.error;\n        }, {immediate: true})  // use immediate:true since watcher will run computeValue anyway\n      );\n    });\n    return {\n      enumerable: true, configurable: true,\n      get: function() {\n        if (value instanceof ErrorWrapper) throw value.error;\n        return value;\n      },\n      set: function(newValue) {\n        if (!writeAllowed) throw new Error(`You cannot set a computed property: ${prop.name}`);\n        value = newValue;\n      }\n    };\n  }\n\n  destroyObject(object) {\n    if (_.has(object, '$$finalizers')) {\n      // Some destructors remove themselves from the array, so clone it before iterating.\n      for (const fn of _.clone(object.$$finalizers)) fn();\n    }\n  }\n\n  isPlaceholder(path) {\n    const mount = this._getMount(path);\n    return mount && mount.placeholder;\n  }\n\n  isLocal(path) {\n    const mount = this._getMount(path, false, mount => mount.local);\n    if (!mount) return false;\n    if (mount.local) return true;\n    if (mount.localDescendants) throw new Error(`Subtree mixes local and remote data: ${path}`);\n    return false;\n  }\n\n  forEachPlaceholderChild(path, iteratee) {\n    const mount = this._getMount(path);\n    _.each(mount && mount.children, child => {\n      if (child.placeholder) iteratee(child.escapedKey, child.placeholder);\n    });\n  }\n\n  checkVueObject(object, path, checkedObjects) {\n    const top = !checkedObjects;\n    if (top) checkedObjects = [];\n    try {\n      for (const key of Object.getOwnPropertyNames(object)) {\n        if (RESERVED_VALUE_PROPERTY_NAMES[key]) continue;\n        // jshint loopfunc:true\n        const mount = this._findMount(mount => mount.Class === object.constructor);\n        // jshint loopfunc:false\n        if (mount && mount.matcher && _.includes(mount.matcher.variables, key)) continue;\n        if (!(Array.isArray(object) && (/\\d+/.test(key) || key === 'length'))) {\n          const descriptor = Object.getOwnPropertyDescriptor(object, key);\n          if ('value' in descriptor || !descriptor.get) {\n            throw new Error(\n              `Value at ${path}, contained in a Firetruss object, has a rogue property: ${key}`);\n          }\n          if (object.$truss && descriptor.enumerable) {\n            try {\n              object[key] = object[key];\n              throw new Error(\n                `Firetruss object at ${path} has an enumerable non-Firebase property: ${key}`);\n            } catch (e) {\n              if (e.trussCode !== 'firebase_overwrite') throw e;\n            }\n          }\n        }\n        const value = object[key];\n        if (_.isObject(value) && !value.$$$trussCheck && Object.isExtensible(value) &&\n            !(value instanceof Function)) {\n          value.$$$trussCheck = true;\n          checkedObjects.push(value);\n          this.checkVueObject(value, joinPath(path, escapeKey(key)), checkedObjects);\n        }\n      }\n    } finally {\n      if (top) {\n        for (const item of checkedObjects) delete item.$$$trussCheck;\n      }\n    }\n  }\n\n  static get computedPropertyStats() {\n    return computedPropertyStats;\n  }\n}\n\n\nfunction computeValue(prop, stats) {\n  // jshint validthis: true\n  // Touch this object, since a failed access to a missing property doesn't get captured as a\n  // dependency.\n  this.$$touchThis();\n\n  const startTime = performanceNow();\n  try {\n    return prop.get.call(this);\n  } catch (e) {\n    return new ErrorWrapper(e);\n  } finally {\n    stats.runtime += performanceNow() - startTime;\n    stats.numRecomputes += 1;\n  }\n  // jshint validthis: false\n}\n\nfunction wrapConnections(object, connections) {\n  if (!connections || connections instanceof Handle) return connections;\n  return _.mapValues(connections, descriptor => {\n    if (descriptor instanceof Handle) return descriptor;\n    if (_.isFunction(descriptor)) {\n      return function() {\n        object.$$touchThis();\n        return wrapConnections(object, descriptor.call(this));\n      };\n    } else {\n      return wrapConnections(object, descriptor);\n    }\n  });\n}\n\nfunction isTrussValueEqual(a, b) {\n  if (a && a.$truss || b && b.$truss) return a === b;\n}\n","import angularCompatibility from './angularCompatibility.js';\nimport Coupler from './Coupler.js';\nimport Modeler from './Modeler.js';\nimport {escapeKey, unescapeKey, joinPath, SERVER_TIMESTAMP} from './utils.js';\n\nimport _ from 'lodash';\nimport Vue from 'vue';\n\n\nclass Transaction {\n  constructor(path, tree) {\n    this._path = path;\n    this._tree = tree;\n  }\n\n  get currentValue() {return this._tree.getObject(this._path);}\n  get outcome() {return this._outcome;}\n  get values() {return this._values;}\n\n  _setOutcome(value) {\n    if (this._outcome) throw new Error('Transaction already resolved with ' + this._outcome);\n    this._outcome = value;\n  }\n\n  abort() {\n    this._setOutcome('abort');\n  }\n\n  cancel() {\n    this._setOutcome('cancel');\n  }\n\n  set(value) {\n    if (value === undefined) throw new Error('Invalid argument: undefined');\n    this._setOutcome('set');\n    this._values = {'': value};\n  }\n\n  update(values) {\n    if (values === undefined) throw new Error('Invalid argument: undefined');\n    if (_.isEmpty(values)) return this.cancel();\n    this._setOutcome('update');\n    this._values = values;\n  }\n}\n\n\nexport default class Tree {\n  constructor(truss, rootUrl, bridge, dispatcher) {\n    this._truss = truss;\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._firebasePropertyEditAllowed = false;\n    this._writeSerial = 0;\n    this._localWrites = {};\n    this._localWriteTimestamp = null;\n    this._initialized = false;\n    this._modeler = new Modeler();\n    this._coupler = new Coupler(\n      rootUrl, bridge, dispatcher, this._integrateSnapshot.bind(this), this._prune.bind(this));\n    this._vue = new Vue({data: {$root: undefined}});\n    Object.seal(this);\n    if (angularCompatibility.active) {\n      this._vue.$watch('$data', () => {angularCompatibility.digest();}, {deep: true});\n    }\n    // Call this.init(classes) to complete initialization; we need two phases so that truss can bind\n    // the tree into its own accessors prior to defining computed functions, which may try to\n    // access the tree root via truss.\n  }\n\n  get root() {\n    if (!this._vue.$data.$root) {\n      this._vue.$data.$root = this._createObject('/', '');\n      this._fixObject(this._vue.$data.$root);\n      this._completeCreateObject(this._vue.$data.$root);\n    }\n    return this._vue.$data.$root;\n  }\n\n  get truss() {\n    return this._truss;\n  }\n\n  init(classes) {\n    if (this._initialized) {\n      throw new Error('Data objects already created, too late to mount classes');\n    }\n    this._initialized = true;\n    this._modeler.init(classes, !this._vue.$data.$root);\n    this._plantPlaceholders(this.root, '/');\n  }\n\n  destroy() {\n    this._coupler.destroy();\n    if (this._modeler) this._modeler.destroy();\n    this._vue.$destroy();\n  }\n\n  connectReference(ref, valueCallback, method) {\n    this._checkHandle(ref);\n    const operation = this._dispatcher.createOperation('read', method, ref);\n    let unwatch;\n    if (valueCallback) {\n      const segments = _(ref.path).split('/').map(segment => unescapeKey(segment)).value();\n      unwatch = this._vue.$watch(\n        this.getObject.bind(this, segments), valueCallback, {immediate: true});\n    }\n    operation._disconnect = this._disconnectReference.bind(this, ref, operation, unwatch);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.couple(ref.path, operation);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectReference(ref, operation, unwatch, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (unwatch) unwatch();\n    if (operation._coupled) {\n      this._coupler.decouple(ref.path, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isReferenceReady(ref) {\n    this._checkHandle(ref);\n    return this._coupler.isSubtreeReady(ref.path);\n  }\n\n  connectQuery(query, keysCallback, method) {\n    this._checkHandle(query);\n    const operation = this._dispatcher.createOperation('read', method, query);\n    operation._disconnect = this._disconnectQuery.bind(this, query, operation);\n    this._dispatcher.begin(operation).then(() => {\n      if (operation.running && !operation._disconnected) {\n        this._coupler.subscribe(query, operation, keysCallback);\n        operation._coupled = true;\n      }\n    }).catch(e => {});  // ignore exception, let onFailure handlers deal with it\n    return operation._disconnect;\n  }\n\n  _disconnectQuery(query, operation, error) {\n    if (operation._disconnected) return;\n    operation._disconnected = true;\n    if (operation._coupled) {\n      this._coupler.unsubscribe(query, operation);  // will call back to _prune if necessary\n      operation._coupled = false;\n    }\n    this._dispatcher.end(operation, error).catch(e => {});\n  }\n\n  isQueryReady(query) {\n    return this._coupler.isQueryReady(query);\n  }\n\n  _checkHandle(handle) {\n    if (!handle.belongsTo(this._truss)) {\n      throw new Error('Reference belongs to another Truss instance');\n    }\n  }\n\n  update(ref, method, values) {\n    values = _.clone(values);\n    let numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    if (method === 'update' || method === 'override') {\n      checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n    }\n    this._applyLocalWrite(values, method === 'override');\n    if (method === 'override') return Promise.resolve();\n    for (const path of _.keys(values)) {\n      if (this._modeler.isLocal(path)) delete values[path];\n    }\n    numValues = _.size(values);\n    if (!numValues) return Promise.resolve();\n    const url = this._rootUrl + this._extractCommonPathPrefix(values);\n    return this._dispatcher.execute('write', method, ref, () => {\n      if (numValues === 1) {\n        return this._bridge.set(url, values[''], this._writeSerial);\n      } else {\n        return this._bridge.update(url, values, this._writeSerial);\n      }\n    });\n  }\n\n  commit(ref, updateFunction) {\n    let tries = 0;\n\n    const attemptTransaction = () => {\n      if (tries++ >= 25) return Promise.reject(new Error('maxretry'));\n      const txn = new Transaction();\n      try {\n        updateFunction(txn);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      const values = _.clone(txn.values);\n      const oldValue = toFirebaseJson(this.getObject(ref.path));\n      switch (txn.outcome) {\n        case 'abort': return;\n        case 'cancel':\n          break;\n        case 'set':\n          if (this._modeler.isLocal(ref.path)) {\n            throw new Error(`Commit in local subtree: ${ref.path}`);\n          }\n          this._applyLocalWrite({[ref.path]: values['']});\n          break;\n        case 'update':\n          checkUpdateHasOnlyDescendantsWithNoOverlap(ref.path, values);\n          _(values).keys().each(path => {\n            if (this._modeler.isLocal(path)) throw new Error(`Commit in local subtree: ${path}`);\n          });\n          this._applyLocalWrite(values);\n          relativizePaths(ref.path, values);\n          break;\n        default:\n          throw new Error('Invalid transaction outcome: ' + (txn.outcome || 'none'));\n      }\n      return this._bridge.transaction(\n        this._rootUrl + ref.path, oldValue, values\n      ).then(committed => {\n        if (!committed) return attemptTransaction();\n        return txn;\n      });\n    };\n\n    return this._truss.peek(ref, () => {\n      return this._dispatcher.execute('write', 'commit', ref, attemptTransaction);\n    });\n  }\n\n  _applyLocalWrite(values, override) {\n    // TODO: correctly apply local writes that impact queries.  Currently, a local write will update\n    // any objects currently selected by a query, but won't add or remove results.\n    this._writeSerial++;\n    this._localWriteTimestamp = this._truss.now;\n    _.each(values, (value, path) => {\n      const local = this._modeler.isLocal(path);\n      const coupledDescendantPaths =\n        local ? [path] : this._coupler.findCoupledDescendantPaths(path);\n      if (_.isEmpty(coupledDescendantPaths)) return;\n      const offset = (path === '/' ? 0 : path.length) + 1;\n      for (const descendantPath of coupledDescendantPaths) {\n        const subPath = descendantPath.slice(offset);\n        let subValue = value;\n        if (subPath) {\n          const segments = subPath.split('/');\n          for (const segment of segments) {\n            subValue = subValue[unescapeKey(segment)];\n            if (subValue === undefined) break;\n          }\n        }\n        if (subValue === undefined || subValue === null) {\n          this._prune(subPath);\n        } else {\n          const key = unescapeKey(_.last(descendantPath.split('/')));\n          this._plantValue(\n            descendantPath, key, subValue, this._scaffoldAncestors(descendantPath), false,\n            override\n          );\n        }\n        if (!override && !local) {\n          this._localWrites[descendantPath] = this._writeSerial;\n        }\n      }\n    });\n  }\n\n  _extractCommonPathPrefix(values) {\n    let prefixSegments;\n    _.each(values, (value, path) => {\n      const segments = path === '/' ? [''] : path.split('/');\n      if (prefixSegments) {\n        let firstMismatchIndex = 0;\n        const maxIndex = Math.min(prefixSegments.length, segments.length);\n        while (firstMismatchIndex < maxIndex &&\n               prefixSegments[firstMismatchIndex] === segments[firstMismatchIndex]) {\n          firstMismatchIndex++;\n        }\n        prefixSegments = prefixSegments.slice(0, firstMismatchIndex);\n        if (!prefixSegments.length) return false;\n      } else {\n        prefixSegments = segments;\n      }\n    });\n    const pathPrefix = prefixSegments.length === 1 ? '/' : prefixSegments.join('/');\n    _.each(_.keys(values), key => {\n      values[key.slice(pathPrefix.length + 1)] = values[key];\n      delete values[key];\n    });\n    return pathPrefix;\n  }\n\n  /**\n   * Creates a Truss object and sets all its basic properties: path segment variables, user-defined\n   * properties, and computed properties.  The latter two will be enumerable so that Vue will pick\n   * them up and make the reactive, so you should call _completeCreateObject once it's done so and\n   * before any Firebase properties are added.\n   */\n  _createObject(path, key, parent) {\n    if (!this._initialized && path !== '/') this.init();\n    let properties = {\n      // We want Vue to wrap this; we'll make it non-enumerable in _completeCreateObject.\n      $parent: {value: parent, configurable: true, enumerable: true},\n      $path: {value: path}\n    };\n    if (path === '/') properties.$truss = {value: this._truss};\n\n    const object = this._modeler.createObject(path, properties);\n    Object.defineProperties(object, properties);\n    return object;\n  }\n\n  // To be called on the result of _createObject after it's been inserted into the _vue hierarchy\n  // and Vue has had a chance to initialize it.\n  _fixObject(object) {\n    for (const name of Object.getOwnPropertyNames(object)) {\n      const descriptor = Object.getOwnPropertyDescriptor(object, name);\n      if (descriptor.configurable && descriptor.enumerable) {\n        descriptor.enumerable = false;\n        if (name === '$parent') descriptor.configurable = false;\n        Object.defineProperty(object, name, descriptor);\n      }\n    }\n  }\n\n  // To be called on the result of _createObject after _fixObject, and after any additional Firebase\n  // properties have been set, to run initialiers.\n  _completeCreateObject(object) {\n    if (object.hasOwnProperty('$$initializers')) {\n      for (const fn of object.$$initializers) fn(this._vue);\n      delete object.$$initializers;\n    }\n  }\n\n  _destroyObject(object) {\n    if (!(object && object.$truss)) return;\n    this._modeler.destroyObject(object);\n    for (const key in object) {\n      if (!Object.hasOwnProperty(object, key)) continue;\n      this._destroyObject(object[key]);\n    }\n  }\n\n  _integrateSnapshot(snap) {\n    _.each(_.keys(this._localWrites), (writeSerial, path) => {\n      if (snap.writeSerial >= writeSerial) delete this._localWrites[path];\n    });\n    if (snap.exists) {\n      const parent = this._scaffoldAncestors(snap.path, true);\n      if (parent) this._plantValue(snap.path, snap.key, snap.value, parent, true, false);\n    } else {\n      this._prune(snap.path, null, true);\n    }\n  }\n\n  _scaffoldAncestors(path, remoteWrite) {\n    let object;\n    const segments = _(path).split('/').dropRight().value();\n    _.each(segments, (segment, i) => {\n      const childKey = unescapeKey(segment);\n      let child = childKey ? object[childKey] : this.root;\n      if (!child) {\n        const ancestorPath = segments.slice(0, i + 1).join('/');\n        if (remoteWrite && this._localWrites[ancestorPath || '/']) return;\n        child = this._plantValue(ancestorPath, childKey, {}, object);\n      }\n      object = child;\n    });\n    return object;\n  }\n\n  _plantValue(path, key, value, parent, remoteWrite, override) {\n    if (value === null || value === undefined) {\n      throw new Error(`Snapshot includes invalid value at ${path}: ${value}`);\n    }\n    if (remoteWrite && this._localWrites[path]) return;\n    if (value === SERVER_TIMESTAMP) value = this._localWriteTimestamp;\n    if (!_.isArray(value) && !(_.isObject(value) && value.constructor === Object)) {\n      this._setFirebaseProperty(parent, key, value);\n      return;\n    }\n    let objectCreated = false;\n    let object = parent[key];\n    if (!_.isObject(object)) {\n      // Need to pre-set the property, so that if the child object attempts to watch any of its own\n      // properties while being created the $$touchThis method has something to add a dependency on\n      // as the object's own properties won't be made reactive until *after* it's been created.\n      this._setFirebaseProperty(parent, key, null);\n      object = this._createObject(path, key, parent);\n      this._setFirebaseProperty(parent, key, object);\n      this._fixObject(object);\n      objectCreated = true;\n    }\n    if (override) {\n      Object.defineProperty(object, '$overridden', {get: _.constant(true), configurable: true});\n    } else if (object.$overridden) {\n      delete object.$overridden;\n    }\n    _.each(value, (item, escapedChildKey) => {\n      this._plantValue(\n        joinPath(path, escapedChildKey), unescapeKey(escapedChildKey), item, object, remoteWrite,\n        override\n      );\n    });\n    if (objectCreated) {\n      this._completeCreateObject(object);\n      this._plantPlaceholders(object, path);\n    } else {\n      _.each(object, (item, childKey) => {\n        const escapedChildKey = escapeKey(childKey);\n        if (!value.hasOwnProperty(escapedChildKey)) {\n          this._prune(joinPath(path, escapedChildKey), null, remoteWrite);\n        }\n      });\n    }\n    return object;\n  }\n\n  _plantPlaceholders(object, path) {\n    this._modeler.forEachPlaceholderChild(path, (escapedKey, placeholder) => {\n      const key = unescapeKey(escapedKey);\n      if (!object.hasOwnProperty(key)) {\n        this._plantValue(joinPath(path, escapedKey), key, placeholder, object);\n      }\n    });\n  }\n\n  _prune(path, lockedDescendantPaths, remoteWrite) {\n    lockedDescendantPaths = lockedDescendantPaths || {};\n    const object = this.getObject(path);\n    if (object === undefined) return;\n    if (remoteWrite && this._avoidLocalWritePaths(path, lockedDescendantPaths)) return;\n    if (!(_.isEmpty(lockedDescendantPaths) && this._pruneAncestors(path, object)) &&\n        _.isObject(object)) {\n      // The target object is a placeholder, and all ancestors are placeholders or otherwise needed\n      // as well, so we can't delete it.  Instead, dive into its descendants to delete what we can.\n      this._pruneDescendants(object, lockedDescendantPaths);\n    }\n  }\n\n  _avoidLocalWritePaths(path, lockedDescendantPaths) {\n    for (const localWritePath in this._localWrites) {\n      if (!this._localWrites.hasOwnProperty(localWritePath)) continue;\n      if (path === localWritePath || localWritePath === '/' ||\n          _.startsWith(path, localWritePath + '/')) return true;\n      if (path === '/' || _.startsWith(localWritePath, path + '/')) {\n        const segments = localWritePath.split('/');\n        for (let i = segments.length; i > 0; i--) {\n          const subPath = segments.slice(0, i).join('/');\n          const active = i === segments.length;\n          if (lockedDescendantPaths[subPath] || lockedDescendantPaths[subPath] === active) break;\n          lockedDescendantPaths[subPath] = active;\n          if (subPath === path) break;\n        }\n      }\n    }\n  }\n\n  _pruneAncestors(targetPath, targetObject) {\n    // Destroy the child (unless it's a placeholder that's still needed) and any ancestors that\n    // are no longer needed to keep this child rooted, and have no other reason to exist.\n    let deleted = false;\n    let object = targetObject;\n    // The target object may be a primitive, in which case it won't have $path, $parent and $key\n    // properties.  In that case, use the target path to figure those out instead.  Note that all\n    // ancestors of the target object will necessarily not be primitives and will have those\n    // properties.\n    const targetSegments = _(targetPath).split('/').map(unescapeKey).value();\n    while (object && object !== this.root) {\n      const parent =\n        object.$parent || object === targetObject && this.getObject(targetSegments.slice(0, -1));\n      if (!this._modeler.isPlaceholder(object.$path || targetPath)) {\n        const ghostObjects = deleted ? null : [targetObject];\n        if (!this._holdsConcreteData(object, ghostObjects)) {\n          deleted = true;\n          this._deleteFirebaseProperty(\n            parent, object.$key || object === targetObject && _.last(targetSegments));\n        }\n      }\n      object = parent;\n    }\n    return deleted;\n  }\n\n  _holdsConcreteData(object, ghostObjects) {\n    if (ghostObjects && _.includes(ghostObjects, object)) return false;\n    if (_.some(object, value => !value.$truss)) return true;\n    return _.some(object, value => this._holdsConcreteData(value, ghostObjects));\n  }\n\n  _pruneDescendants(object, lockedDescendantPaths) {\n    if (lockedDescendantPaths[object.$path]) return true;\n    if (object.$overridden) delete object.$overridden;\n    let coupledDescendantFound = false;\n    _.each(object, (value, key) => {\n      let shouldDelete = true;\n      let valueLocked;\n      if (lockedDescendantPaths[joinPath(object.$path, escapeKey(key))]) {\n        shouldDelete = false;\n        valueLocked = true;\n      } else if (value.$truss) {\n        const placeholder = this._modeler.isPlaceholder(value.$path);\n        if (placeholder || _.has(lockedDescendantPaths, value.$path)) {\n          valueLocked = this._pruneDescendants(value, lockedDescendantPaths);\n          shouldDelete = !placeholder && !valueLocked;\n        }\n      }\n      if (shouldDelete) this._deleteFirebaseProperty(object, key);\n      coupledDescendantFound = coupledDescendantFound || valueLocked;\n    });\n    return coupledDescendantFound;\n  }\n\n  getObject(pathOrSegments) {\n    let object;\n    const segments = _.isString(pathOrSegments) ?\n      _(pathOrSegments).split('/').map(unescapeKey).value() : pathOrSegments;\n    for (const segment of segments) {\n      object = segment ? object[segment] : this.root;\n      if (object === undefined) return;\n    }\n    return object;\n  }\n\n  _getFirebasePropertyDescriptor(object, key) {\n    let descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor) {\n      if (!descriptor.enumerable) {\n        throw new Error(\n          `Key conflict between Firebase and instance or computed properties at ` +\n          `${object.$path}: ${key}`);\n      }\n      if (!descriptor.get || !descriptor.set) {\n        throw new Error(`Unbound property at ${object.$path}: ${key}`);\n      }\n    } else if (key in object) {\n      throw new Error(\n        `Key conflict between Firebase and inherited property at ${object.$path}: ${key}`);\n    }\n    return descriptor;\n  }\n\n  _setFirebaseProperty(object, key, value) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    let descriptor = this._getFirebasePropertyDescriptor(object, key);\n    if (descriptor) {\n      this._firebasePropertyEditAllowed = true;\n      object[key] = value;\n      this._firebasePropertyEditAllowed = false;\n    } else {\n      Vue.set(object, key, value);\n      descriptor = Object.getOwnPropertyDescriptor(object, key);\n      Object.defineProperty(object, key, {\n        get: descriptor.get, set: this._overwriteFirebaseProperty.bind(this, descriptor, key),\n        configurable: true, enumerable: true\n      });\n    }\n  }\n\n  _overwriteFirebaseProperty(descriptor, key, newValue) {\n    if (!this._firebasePropertyEditAllowed) {\n      const e = new Error(`Firebase data cannot be mutated directly: ${key}`);\n      e.trussCode = 'firebase_overwrite';\n      throw e;\n    }\n    descriptor.set.call(this, newValue);\n  }\n\n  _deleteFirebaseProperty(object, key) {\n    if (object.hasOwnProperty('$data')) object = object.$data;\n    // Make sure it's actually a Firebase property.\n    this._getFirebasePropertyDescriptor(object, key);\n    this._destroyObject(object[key]);\n    Vue.delete(object, key);\n  }\n\n  checkVueObject(object, path) {\n    this._modeler.checkVueObject(object, path);\n  }\n\n  static get computedPropertyStats() {\n    return Modeler.computedPropertyStats;\n  }\n}\n\n\nexport function checkUpdateHasOnlyDescendantsWithNoOverlap(rootPath, values) {\n  // First, check all paths for correctness and absolutize them, since there could be a mix of\n  // absolute paths and relative keys.\n  _.each(_.keys(values), path => {\n    if (path.charAt(0) === '/') {\n      if (!(path === rootPath || rootPath === '/' ||\n            _.startsWith(path, rootPath + '/') && path.length > rootPath.length + 1)) {\n        throw new Error(`Update item is not a descendant of target ref: ${path}`);\n      }\n    } else {\n      if (path.indexOf('/') >= 0) {\n        throw new Error(`Update item deep path must be absolute, taken from a reference: ${path}`);\n      }\n      const absolutePath = joinPath(rootPath, escapeKey(path));\n      if (values.hasOwnProperty(absolutePath)) {\n        throw new Error(`Update items overlap: ${path} and ${absolutePath}`);\n      }\n      values[absolutePath] = values[path];\n      delete values[path];\n    }\n  });\n  // Then check for overlaps;\n  const allPaths = _(values).keys().map(path => joinPath(path, '')).sortBy('length').value();\n  _.each(values, (value, path) => {\n    for (const otherPath of allPaths) {\n      if (otherPath.length > path.length) break;\n      if (path !== otherPath && _.startsWith(path, otherPath)) {\n        throw new Error(`Update items overlap: ${otherPath} and ${path}`);\n      }\n    }\n  });\n}\n\nexport function relativizePaths(rootPath, values) {\n  _.each(_.keys(values), path => {\n    values[path.slice(rootPath === '/' ? 1 : rootPath.length + 1)] = values[path];\n    delete values[path];\n  });\n}\n\nexport function toFirebaseJson(object) {\n  if (typeof object === 'object') {\n    const result = {};\n    for (const key in object) {\n      if (!object.hasOwnProperty(key)) continue;\n      result[escapeKey(key)] = toFirebaseJson(object[key]);\n    }\n    return result;\n  } else {\n    return object;\n  }\n}\n\n","import {escapeKey, unescapeKey, makePathMatcher} from './utils.js';\n\nimport _ from 'lodash';\n\n\nconst EMPTY_ANNOTATIONS = {};\nObject.freeze(EMPTY_ANNOTATIONS);\n\n\nexport class Handle {\n  constructor(tree, path, annotations) {\n    this._tree = tree;\n    this._path = path.replace(/^\\/*/, '/').replace(/\\/$/, '');\n    if (annotations) {\n      this._annotations = annotations;\n      Object.freeze(annotations);\n    }\n  }\n\n  get $ref() {return this;}\n  get key() {\n    if (!this._key) this._key = unescapeKey(this._path.replace(/.*\\//, ''));\n    return this._key;\n  }\n  get path() {return this._path;}\n  get _pathPrefix() {return this._path === '/' ? '' : this._path;}\n  get parent() {\n    return new Reference(this._tree, this._path.replace(/\\/[^/]*$/, ''), this._annotations);\n  }\n\n  get annotations() {\n    return this._annotations || EMPTY_ANNOTATIONS;\n  }\n\n  child() {\n    if (!arguments.length) return this;\n    const segments = [];\n    for (const key of arguments) {\n      if (key === undefined || key === null) return;\n      segments.push(escapeKey(key));\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${segments.join('/')}`,\n      this._annotations\n    );\n  }\n\n  children() {\n    if (!arguments.length) return this;\n    const escapedKeys = [];\n    for (let i = 0; i < arguments.length; i++) {\n      const arg = arguments[i];\n      if (_.isArray(arg)) {\n        const mapping = {};\n        const subPath = `${this._pathPrefix}/${escapedKeys.join('/')}`;\n        const rest = _.slice(arguments, i + 1);\n        for (const key of arg) {\n          const subRef =\n            new Reference(this._tree, `${subPath}/${escapeKey(key)}`, this._annotations);\n          const subMapping = subRef.children.apply(subRef, rest);\n          if (subMapping) mapping[key] = subMapping;\n        }\n        if (_.isEmpty(mapping)) return;\n        return mapping;\n      } else {\n        if (arg === undefined || arg === null) return;\n        escapedKeys.push(escapeKey(arg));\n      }\n    }\n    return new Reference(\n      this._tree, `${this._pathPrefix}/${escapedKeys.join('/')}`, this._annotations);\n  }\n\n  peek(callback) {\n    return this._tree.truss.peek(this, callback);\n  }\n\n  match(pattern) {\n    return makePathMatcher(pattern).match(this.path);\n  }\n\n  isEqual(that) {\n    if (!(that instanceof Handle)) return false;\n    return this._tree === that._tree && this.toString() === that.toString();\n  }\n\n  belongsTo(truss) {\n    return this._tree.truss === truss;\n  }\n}\n\n\nexport class Query extends Handle {\n  constructor(tree, path, spec, annotations) {\n    super(tree, path, annotations);\n    this._spec = this._copyAndValidateSpec(spec);\n    const queryTerms = _(this._spec)\n      .map((value, key) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n      .sortBy()\n      .join('&');\n    this._string = `${this._path}?${queryTerms}`;\n    Object.freeze(this);\n  }\n\n  // Vue-bound\n  get ready() {\n    return this._tree.isQueryReady(this);\n  }\n\n  get constraints() {\n    return this._spec;\n  }\n\n  annotate(annotations) {\n    return new Query(\n      this._tree, this._path, this._spec, _.extend({}, this._annotations, annotations));\n  }\n\n  _copyAndValidateSpec(spec) {\n    if (!spec.by) throw new Error('Query needs \"by\" clause: ' + JSON.stringify(spec));\n    if (('at' in spec) + ('from' in spec) + ('to' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"at\", \"from\", or \"to\" clauses: ' + JSON.stringify(spec));\n    }\n    if (('first' in spec) + ('last' in spec) > 1) {\n      throw new Error(\n        'Query must contain at most one of \"first\" or \"last\" clauses: ' + JSON.stringify(spec));\n    }\n    if (!_.some(['at', 'from', 'to', 'first', 'last'], clause => clause in spec)) {\n      throw new Error(\n        'Query must contain at least one of \"at\", \"from\", \"to\", \"first\", or \"last\" clauses: ' +\n        JSON.stringify(spec));\n    }\n    spec = _.clone(spec);\n    if (spec.by !== '$key' && spec.by !== '$value') {\n      if (!(spec.by instanceof Reference)) {\n        throw new Error('Query \"by\" value must be a reference: ' + spec.by);\n      }\n      let childPath = spec.by.toString();\n      if (!_.startsWith(childPath, this._path)) {\n        throw new Error(\n          'Query \"by\" value must be a descendant of target reference: ' + spec.by);\n      }\n      childPath = childPath.slice(this._path.length).replace(/^\\/?/, '');\n      if (childPath.indexOf('/') === -1) {\n        throw new Error(\n          'Query \"by\" value must not be a direct child of target reference: ' + spec.by);\n      }\n      spec.by = childPath.replace(/.*?\\//, '');\n    }\n    Object.freeze(spec);\n    return spec;\n  }\n\n\n  toString() {\n    return this._string;\n  }\n}\n\n\n// jshint latedef:false\nexport class Reference extends Handle {\n// jshint latedef:nofunc\n\n  constructor(tree, path, annotations) {\n    super(tree, path, annotations);\n    Object.freeze(this);\n  }\n\n  get ready() {return this._tree.isReferenceReady(this);}  // Vue-bound\n  get value() {return this._tree.getObject(this.path);}  // Vue-bound\n  toString() {return this._path;}\n\n  annotate(annotations) {\n    return new Reference(this._tree, this._path, _.extend({}, this._annotations, annotations));\n  }\n\n  query(spec) {\n    return new Query(this._tree, this._path, spec);\n  }\n\n  set(value) {\n    return this._tree.update(this, 'set', {[this.path]: value});\n  }\n\n  update(values) {\n    return this._tree.update(this, 'update', values);\n  }\n\n  override(value) {\n    return this._tree.update(this, 'override', {[this.path]: value});\n  }\n\n  commit(updateFunction) {\n    return this._tree.commit(this, updateFunction);\n  }\n}\n\nexport default Reference;\n","import _ from 'lodash';\nimport {wrapPromiseCallback} from './utils.js';\n\n\nconst INTERCEPT_KEYS = [\n  'read', 'write', 'auth', 'set', 'update', 'commit', 'connect', 'peek', 'all'\n];\n\nconst EMPTY_ARRAY = [];\n\n\nclass SlowHandle {\n  constructor(operation, delay, callback) {\n    this._operation = operation;\n    this._delay = delay;\n    this._callback = callback;\n    this._fired = false;\n  }\n\n  initiate() {\n    this.cancel();\n    this._fired = false;\n    const elapsed = Date.now() - this._operation._startTimestamp;\n    this._timeoutId = setTimeout(this._delay - elapsed, () => {\n      this._fired = true;\n      this._callback(this._operation);\n    });\n  }\n\n  cancel() {\n    if (this._fired) this._callback(this._operation);\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n}\n\n\nclass Operation {\n  constructor(type, method, target) {\n    this._type = type;\n    this._method = method;\n    this._target = target;\n    this._ready = false;\n    this._running = false;\n    this._ended = false;\n    this._tries = 0;\n    this._startTimestamp = Date.now();\n    this._slowHandles = [];\n  }\n\n  get type() {return this._type;}\n  get method() {return this._method;}\n  get target() {return this._target;}\n  get ready() {return this._ready;}\n  get running() {return this._running;}\n  get ended() {return this._ended;}\n  get tries() {return this._tries;}\n  get error() {return this._error;}\n\n  onSlow(delay, callback) {\n    const handle = new SlowHandle(this, delay, callback);\n    this._slowHandles.push(handle);\n    handle.initiate();\n  }\n\n  _setRunning(value) {\n    this._running = value;\n  }\n\n  _setEnded(value) {\n    this._ended = value;\n  }\n\n  _markReady() {\n    this._ready = true;\n    this._tries = 0;\n    _.each(this._slowHandles, handle => handle.cancel());\n  }\n\n  _clearReady() {\n    this._ready = false;\n    this._startTimestamp = Date.now();\n    _.each(this._slowHandles, handle => handle.initiate());\n  }\n\n  _incrementTries() {\n    this._tries++;\n  }\n}\n\n\nexport default class Dispatcher {\n  constructor(bridge) {\n    this._bridge = bridge;\n    this._callbacks = {};\n    Object.freeze(this);\n  }\n\n  intercept(interceptKey, callbacks) {\n    if (!_.contains(INTERCEPT_KEYS, interceptKey)) {\n      throw new Error('Unknown intercept operation type: ' + interceptKey);\n    }\n    const badCallbackKeys =\n      _.difference(_.keys(callbacks), ['onBefore', 'onAfter', 'onError', 'onFailure']);\n    if (badCallbackKeys.length) {\n      throw new Error('Unknown intercept callback types: ' + badCallbackKeys.join(', '));\n    }\n    const wrappedCallbacks = {\n      onBefore: this._addCallback('onBefore', interceptKey, callbacks.onBefore),\n      onAfter: this._addCallback('onAfter', interceptKey, callbacks.onAfter),\n      onError: this._addCallback('onError', interceptKey, callbacks.onError),\n      onFailure: this._addCallback('onFailure', interceptKey, callbacks.onFailure)\n    };\n    return this._removeCallbacks.bind(this, interceptKey, wrappedCallbacks);\n  }\n\n  _addCallback(stage, interceptKey, callback) {\n    if (!callback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    const wrappedCallback = wrapPromiseCallback(callback);\n    (this._callbacks[key] || (this._callbacks[key] = [])).push(wrappedCallback);\n    return wrappedCallback;\n  }\n\n  _removeCallback(stage, interceptKey, wrappedCallback) {\n    if (!wrappedCallback) return;\n    const key = this._getCallbacksKey(stage, interceptKey);\n    if (this._callbacks[key]) _.pull(this._callbacks[key], wrappedCallback);\n  }\n\n  _removeCallbacks(interceptKey, wrappedCallbacks) {\n    _.each(wrappedCallbacks, (wrappedCallback, stage) => {\n      this._removeCallback(stage, interceptKey, wrappedCallback);\n    });\n  }\n\n  _getCallbacks(stage, operationType, method) {\n    return [].concat(\n      this._callbacks[this._getCallbacksKey(stage, method)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, operationType)] || EMPTY_ARRAY,\n      this._callbacks[this._getCallbacksKey(stage, 'all')] || EMPTY_ARRAY\n    );\n  }\n\n  _getCallbacksKey(stage, interceptKey) {\n    return `${stage}_${interceptKey}`;\n  }\n\n  execute(operationType, method, target, executor) {\n    executor = wrapPromiseCallback(executor);\n    const operation = this.createOperation(operationType, method, target);\n    return this.begin(operation).then(() => {\n      const executeWithRetries = () => {\n        return executor().catch(e => this._retryOrEnd(operation, e).then(executeWithRetries));\n      };\n      return executeWithRetries();\n    }).then(result => this.end(operation).then(() => result));\n  }\n\n  createOperation(operationType, method, target) {\n    return new Operation(operationType, method, target);\n  }\n\n  begin(operation) {\n    return Promise.all(_.map(\n      this._getCallbacks('onBefore', operation.type, operation.method),\n      onBefore => onBefore(operation)\n    )).then(() => {\n      if (!operation.ended) operation._setRunning(true);\n    }, e => this.end(operation, e));\n  }\n\n  markReady(operation) {\n    operation._markReady();\n  }\n\n  clearReady(operation) {\n    operation._clearReady();\n  }\n\n  retry(operation, error) {\n    operation._incrementTries();\n    operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onError', operation.type, operation.method),\n      onError => onError(operation, error)\n    )).then(results => {\n      const retrying = _.some(results);\n      if (retrying) delete operation._error;\n      return retrying;\n    });\n  }\n\n  _retryOrEnd(operation, error) {\n    return this.retry(operation, error).then(result => {\n      if (!result) return this.end(operation, error);\n    }, e => this.end(operation, e));\n  }\n\n  end(operation, error) {\n    if (operation.ended) return;\n    operation._setRunning(false);\n    operation._setEnded(true);\n    if (error) operation._error = error;\n    return Promise.all(_.map(\n      this._getCallbacks('onAfter', operation.type, operation.method),\n      onAfter => onAfter(operation)\n    )).then(\n      () => this._afterEnd(operation),\n      e => {\n        operation._error = e;\n        return this._afterEnd(operation);\n      }\n    );\n  }\n\n  _afterEnd(operation) {\n    this.markReady(operation);\n    if (operation.error) {\n      const onFailureCallbacks = this._getCallbacks('onFailure', operation.type, operation.method);\n      return this._bridge.probeError(operation.error).then(() => {\n        if (onFailureCallbacks) {\n          setTimeout(() => {\n            _.each(onFailureCallbacks, onFailure => onFailure(operation));\n          }, 0);\n        }\n        return Promise.reject(operation.error);\n      });\n    }\n  }\n}\n\n","'use strict';\n\nconst ALPHABET = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nexport default class KeyGenerator {\n  constructor() {\n    this._lastUniqueKeyTime = 0;\n    this._lastRandomValues = [];\n  }\n\n  generateUniqueKey(now) {\n    now = now || Date.now();\n    const chars = new Array(20);\n    let prefix = now;\n    for (let i = 7; i >= 0; i--) {\n      chars[i] = ALPHABET.charAt(prefix & 0x3f);\n      prefix = Math.floor(prefix / 64);\n    }\n    if (now === this._lastUniqueKeyTime) {\n      let i = 11;\n      while (i >= 0 && this._lastRandomValues[i] === 63) {\n        this._lastRandomValues[i] = 0;\n        i -= 1;\n      }\n      if (i === -1) {\n        throw new Error('Internal assertion failure: ran out of unique IDs for this millisecond');\n      }\n      this._lastRandomValues[i] += 1;\n    } else {\n      this._lastUniqueKeyTime = now;\n      for (let i = 0; i < 12; i++) {\n        // Make sure to leave some space for incrementing in the top nibble.\n        this._lastRandomValues[i] = Math.floor(Math.random() * (i ? 64 : 16));\n      }\n    }\n    for (let i = 0; i < 12; i++) {\n      chars[i + 8] = ALPHABET[this._lastRandomValues[i]];\n    }\n    return chars.join('');\n  }\n}\n","import angularCompatibility from './angularCompatibility.js';\nimport Vue from 'vue';\n\nexport default class MetaTree {\n  constructor(rootUrl, bridge) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._vue = new Vue({data: {$root: {\n      connected: undefined, timeOffset: 0, user: undefined, userid: undefined,\n      nowAtInterval(intervalMillis) {\n        const key = 'now' + intervalMillis;\n        if (!this.hasOwnProperty(key)) {\n          const update = () => {\n            this[key] = Date.now() + this.timeOffset;\n            angularCompatibility.digest();\n          };\n          update();\n          setInterval(() => update, intervalMillis);\n        }\n        return this[key];\n      }\n    }}});\n\n    if (angularCompatibility.active) {\n      this._vue.$watch('$data', angularCompatibility.digest, {deep: true});\n    }\n\n    bridge.onAuth(rootUrl, this._handleAuthChange, this);\n\n    this._connectInfoProperty('serverTimeOffset', 'timeOffset');\n    this._connectInfoProperty('connected', 'connected');\n    Object.freeze(this);\n  }\n\n  get root() {\n    return this._vue.$data.$root;\n  }\n\n  destroy() {\n    this._bridge.offAuth(this._rootUrl, this._handleAuthChange, this);\n    this._vue.$destroy();\n  }\n\n  _handleAuthChange(user) {\n    this.root.user = user;\n    this.root.userid = user && user.uid;\n  }\n\n  _connectInfoProperty(property, attribute) {\n    const propertyUrl = `${this._rootUrl}/.info/${property}`;\n    this._bridge.on(propertyUrl, propertyUrl, null, 'value', snap => {\n      this.root[attribute] = snap.value;\n    });\n  }\n}\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angularCompatibility from './angularCompatibility.js';\n\n\nclass QueryHandler {\n  constructor(coupler, query) {\n    this._coupler = coupler;\n    this._query = query;\n    this._listeners = [];\n    this._keys = [];\n    this._url = this._coupler._rootUrl + query.path;\n    this._segments = query.path.split('/');\n    this._listening = false;\n    this.ready = false;\n  }\n\n  attach(operation, keysCallback) {\n    this._listen();\n    this._listeners.push({operation, keysCallback});\n    if (keysCallback) keysCallback(this._keys);\n  }\n\n  detach(operation) {\n    const k = _.findIndex(this._listeners, {operation});\n    if (k >= 0) this._listeners.splice(k, 1);\n    return this._listeners.length;\n  }\n\n  _listen() {\n    if (this._listening) return;\n    this._coupler._bridge.on(\n      this._query.toString(), this._url, this._query.constraints, 'value',\n      this._handleSnapshot, this._handleError.bind(this._query.path), this, {sync: true});\n    this._listening = true;\n  }\n\n  destroy() {\n    this._coupler._bridge.off(\n      this._query.toString(), this._url, this._query.constraints, 'value', this._handleSnapshot,\n      this);\n    this._listening = false;\n    this.ready = false;\n    angularCompatibility.digest();\n    for (const key of this._keys) {\n      this._coupler._decoupleSegments(this._segments.concat(key));\n    }\n  }\n\n  _handleSnapshot(snap) {\n    // Order is important here: first couple any new subpaths so _handleSnapshot will update the\n    // tree, then tell the client to update its keys, pulling values from the tree.\n    if (!this._listeners.length || !this._listening) return;\n    const updatedKeys = this._updateKeys(snap);\n    this._coupler._applySnapshot(snap);\n    if (!this.ready) {\n      this.ready = true;\n      angularCompatibility.digest();\n      for (const listener of this._listeners) {\n        this._coupler._dispatcher.markReady(listener.operation);\n      }\n    }\n    if (updatedKeys) {\n      for (const listener of this._listeners) {\n        if (listener.keysCallback) listener.keysCallback(updatedKeys);\n      }\n    }\n  }\n\n  _updateKeys(snap) {\n    let updatedKeys;\n    if (snap.path === this._query.path) {\n      updatedKeys = _.keys(snap.value);\n      updatedKeys.sort();\n      if (_.isEqual(this._keys, updatedKeys)) {\n        updatedKeys = null;\n      } else {\n        for (const key of _.difference(updatedKeys, this._keys)) {\n          this._coupler._coupleSegments(this._segments.concat(key));\n        }\n        for (const key of _.difference(this._keys, updatedKeys)) {\n          this._coupler._decoupleSegments(this._segments.concat(key));\n        }\n        this._keys = updatedKeys;\n      }\n    } else if (snap.path.replace(/\\/[^/]+/, '') === this._query.path) {\n      const hasKey = _.contains(this._keys, snap.key);\n      if (snap.value) {\n        if (!hasKey) {\n          this._coupler._coupleSegments(this._segments.concat(snap.key));\n          this._keys.push(snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      } else {\n        if (hasKey) {\n          this._coupler._decoupleSegments(this._segments.concat(snap.key));\n          _.pull(this._keys, snap.key);\n          this._keys.sort();\n          updatedKeys = this._keys;\n        }\n      }\n    }\n    return updatedKeys;\n  }\n\n  _handleError(error) {\n    if (!this._listeners.length || !this._listening) return;\n    this._listening = false;\n    Promise.all(_.map(this._listeners, listener => {\n      this._coupler._dispatcher.clearReady(listener.operation);\n      return this._coupler._dispatcher.retry(listener.operation, error).catch(e => {\n        listener.operation._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this._listeners.length) this._listen();\n      } else {\n        for (const listener of this._listeners) listener.operation._disconnect(error);\n      }\n    });\n  }\n}\n\n\nclass Node {\n  constructor(coupler, path) {\n    this._coupler = coupler;\n    this.path = path;\n    this.url = this._coupler._rootUrl + path;\n    this.operations = [];\n    this.queryCount = 0;\n    this.listening = false;\n    this.ready = false;\n    this.children = {};\n  }\n\n  get active() {\n    return this.count || this.queryCount;\n  }\n\n  get count() {\n    return this.operations.length;\n  }\n\n  listen(skip) {\n    if (!skip && this.count) {\n      if (this.listening) return;\n      _.each(this.operations, op => {this._coupler._dispatcher.clearReady(op);});\n      this._coupler._bridge.on(\n        this.url, this.url, null, 'value', this._handleSnapshot, this._handleError.bind(this),\n        this, {sync: true});\n      this.listening = true;\n    } else {\n      _.each(this.children, child => {child.listen();});\n    }\n  }\n\n  unlisten(skip) {\n    if (!skip && this.listening) {\n      this._coupler._bridge.off(this.url, this.url, null, 'value', this._handleSnapshot, this);\n      this.listening = false;\n      this._forAllDescendants(node => {\n        if (node.ready) {\n          node.ready = false;\n          angularCompatibility.digest();\n        }\n      });\n    } else {\n      _.each(this.children, child => {child.unlisten();});\n    }\n  }\n\n  _handleSnapshot(snap) {\n    if (!this.listening || !this._coupler.isTrunkCoupled(snap.path)) return;\n    this._coupler._applySnapshot(snap);\n    if (!this.ready && snap.path === this.path) {\n      this.ready = true;\n      angularCompatibility.digest();\n      this.unlisten(true);\n      this._forAllDescendants(node => {\n        for (const op of this.operations) this._coupler._dispatcher.markReady(op);\n      });\n    }\n  }\n\n  _handleError(error) {\n    if (!this.count || !this.listening) return;\n    this.listening = false;\n    this._forAllDescendants(node => {\n      if (node.ready) {\n        node.ready = false;\n        angularCompatibility.digest();\n      }\n      for (const op of this.operations) this._coupler._dispatcher.clearReady(op);\n    });\n    return Promise.all(_.map(this.operations, op => {\n      return this._coupler._dispatcher.retry(op, error).catch(e => {\n        op._disconnect(e);\n        return false;\n      });\n    })).then(results => {\n      if (_.some(results)) {\n        if (this.count) this.listen();\n      } else {\n        for (const op of this.operations) op._disconnect(error);\n        // Pulling all the operations will automatically get us listening on descendants.\n      }\n    });\n  }\n\n  _forAllDescendants(iteratee) {\n    iteratee(this);\n    _.each(this.children, child => child._forAllDescendants(iteratee));\n  }\n\n  collectCoupledDescendantPaths(paths) {\n    if (!paths) paths = {};\n    paths[this.path] = this.active;\n    if (!this.active) {\n      _.each(this.children, child => {child.collectCoupledDescendantPaths(paths);});\n    }\n    return paths;\n  }\n}\n\n\nexport default class Coupler {\n  constructor(rootUrl, bridge, dispatcher, applySnapshot, prunePath) {\n    this._rootUrl = rootUrl;\n    this._bridge = bridge;\n    this._dispatcher = dispatcher;\n    this._applySnapshot = applySnapshot;\n    this._prunePath = prunePath;\n    this._vue = new Vue({data: {root: new Node(this, '/'), queryHandlers: {}}});\n    Object.freeze(this);\n  }\n\n  get _root() {return this._vue.root;}\n  get _queryHandlers() {return this._vue.queryHandlers;}\n\n  destroy() {\n    _.each(this._queryHandlers, queryHandler => {queryHandler.destroy();});\n    this._root.unlisten();\n    this._vue.$destroy();\n  }\n\n  couple(path, operation) {\n    return this._coupleSegments(path.split('/'), operation);\n  }\n\n  _coupleSegments(segments, operation) {\n    let node;\n    let superseded = !operation;\n    let ready = false;\n    for (const segment of segments) {\n      let child = segment ? node.children && node.children[segment] : this._root;\n      if (!child) {\n        child = new Node(this, `${node.path === '/' ? '' : node.path}/${segment}`);\n        Vue.set(node.children, segment, child);\n      }\n      superseded = superseded || child.listening;\n      ready = ready || child.ready;\n      node = child;\n    }\n    if (operation) {\n      node.operations.push(operation);\n    } else {\n      node.queryCount++;\n    }\n    if (superseded) {\n      if (operation && ready) this._dispatcher.markReady(operation);\n    } else {\n      node.listen();  // node will call unlisten() on descendants when ready\n    }\n  }\n\n  decouple(path, operation) {\n    return this._decoupleSegments(path.split('/'), operation);\n  }\n\n  _decoupleSegments(segments, operation) {\n    const ancestors = [];\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n      ancestors.push(node);\n    }\n    if (!node || !(operation ? node.count : node.queryCount)) {\n      throw new Error(`Path not coupled: ${segments.join('/')}`);\n    }\n    if (operation) {\n      _.pull(node.operations, operation);\n    } else {\n      node.queryCount--;\n    }\n    if (operation && !node.count) {\n      // Ideally, we wouldn't resync the full values here since we probably already have the current\n      // value for all children.  But making sure that's true is tricky in an async system (what if\n      // the node's value changes and the update crosses the 'off' call in transit?) and this\n      // situation should be sufficiently rare that the optimization is probably not worth it right\n      // now.\n      node.listen();\n      if (node.listening) node.unlisten();\n    }\n    if (!node.active) {\n      for (let i = ancestors.length - 1; i > 0; i--) {\n        node = ancestors[i];\n        if (node === this._root || node.active || !_.isEmpty(node.children)) break;\n        Vue.delete(ancestors[i - 1].children, segments[i]);\n      }\n      this._prunePath(segments.join('/'), this.findCoupledDescendantPaths(segments));\n    }\n  }\n\n  subscribe(query, operation, keysCallback) {\n    let queryHandler = this._queryHandlers[query.toString()];\n    if (!queryHandler) {\n      queryHandler = new QueryHandler(this, query);\n      Vue.set(this._queryHandlers, query.toString(), queryHandler);\n    }\n    queryHandler.attach(operation, keysCallback);\n }\n\n  unsubscribe(query, operation) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    if (queryHandler && !queryHandler.detach(operation)) {\n      queryHandler.destroy();\n      Vue.delete(this._queryHandlers, query.toString());\n    }\n  }\n\n  // Return whether the node at path or any ancestors are coupled.\n  isTrunkCoupled(path) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.active) return true;\n    }\n    return false;\n  }\n\n  findCoupledDescendantPaths(pathOrSegments) {\n    const segments = _.isString(pathOrSegments) ? pathOrSegments.split('/') : pathOrSegments;\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) break;\n    }\n    return node && node.collectCoupledDescendantPaths();\n  }\n\n  isSubtreeReady(path) {\n    const segments = path.split('/');\n    let node;\n    for (const segment of segments) {\n      node = segment ? node.children && node.children[segment] : this._root;\n      if (!node) return false;\n      if (node.ready) return true;\n    }\n    return false;\n  }\n\n  isQueryReady(query) {\n    const queryHandler = this._queryHandlers[query.toString()];\n    return queryHandler && queryHandler.ready;\n  }\n\n}\n\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","import _ from 'lodash';\nimport Vue from 'vue';\nimport angularCompatibility from './angularCompatibility.js';\nimport Bridge from './Bridge.js';\nimport Connector from './Connector.js';\nimport Dispatcher from './Dispatcher.js';\nimport KeyGenerator from './KeyGenerator.js';\nimport MetaTree from './MetaTree.js';\nimport {Handle, Reference} from './Reference.js';\nimport Tree from './Tree.js';\nimport {\n  escapeKey, unescapeKey, wrapPromiseCallback, promiseCancel, promiseFinally,\n  SERVER_TIMESTAMP\n} from './utils.js';\n\n\nlet bridge, logging;\nconst workerFunctions = {};\n// This version is filled in by the build, don't reformat the line.\nconst VERSION = 'dev';\n\n\nexport default class Truss {\n\n  /**\n   * Create a new Truss instance, specific to a given datastore.  To avoid confusion there should be\n   * exactly one Truss per root datastore URL, so in most code this will be a singleton.\n   *\n   * @param rootUrl {String} The root URL, https://{project}.firebaseio.com.\n   */\n  constructor(rootUrl) {\n    // TODO: allow rootUrl to be a test database object for testing\n    if (!bridge) {\n      throw new Error('Truss worker not connected, please call Truss.connectWorker first');\n    }\n    this._rootUrl = rootUrl.replace(/\\/$/, '');\n    this._keyGenerator = new KeyGenerator();\n    this._dispatcher = new Dispatcher(bridge);\n    this._vue = new Vue();\n\n    bridge.trackServer(this._rootUrl);\n    this._metaTree = new MetaTree(this._rootUrl, bridge);\n    this._tree = new Tree(this, this._rootUrl, bridge, this._dispatcher);\n\n    Object.freeze(this);\n  }\n\n  get meta() {return this._metaTree.root;}\n  get root() {return this._tree.root;}\n\n  /**\n   * Mount a set of classes against the datastore structure.  Must be called at most once, and\n   * cannot be called once any data has been loaded into the tree.\n   * @param classes {Array<Function> | Object<Function>} A list of the classes to map onto the\n   *    datastore structure.  Each class must have a static $trussMount property that is a\n   *    (wildcarded) unescaped datastore path, or an options object\n   *    {path: string, placeholder: object}, or an array of either.  If the list is an object then\n   *    the keys serve as default option-less $trussMount paths for classes that don't define an\n   *    explicit $trussMount.\n   */\n  mount(classes) {\n    this._tree.init(classes);\n  }\n\n  destroy() {\n    this._vue.$destroy();\n    this._tree.destroy();\n    this._metaTree.destroy();\n  }\n\n  get now() {return Date.now() + this.meta.timeOffset;}\n  newKey() {return this._keyGenerator.generateUniqueKey(this.now);}\n\n  authenticate(token) {\n    return this._dispatcher.execute('auth', 'authenticate', new Reference(this._tree, '/'), () => {\n      return bridge.authWithCustomToken(this._rootUrl, token, {rememberMe: true});\n    });\n  }\n\n  unauthenticate() {\n    return this._dispatcher.execute(\n      'auth', 'unauthenticate', new Reference(this._tree, '/'), () => {\n        return bridge.unauth(this._rootUrl);\n      }\n    );\n  }\n\n  intercept(actionType, callbacks) {\n    return this._dispatcher.intercept(actionType, callbacks);\n  }\n\n  // connections are {key: Query | Object | fn() -> (Query | Object)}\n  connect(scope, connections) {\n    if (!connections) {\n      connections = scope;\n      scope = undefined;\n    }\n    if (connections instanceof Handle) connections = {_: connections};\n    return new Connector(scope, connections, this._tree, 'connect');\n  }\n\n  // target is Reference, Query, or connection Object like above\n  peek(target, callback) {\n    callback = wrapPromiseCallback(callback);\n    let cleanup, cancel;\n    const promise = new Promise((resolve, reject) => {\n      const scope = {};\n      let callbackPromise;\n\n      let connector = new Connector(scope, {result: target}, this._tree, 'peek');\n\n      let unintercept = this.intercept('peek', {onFailure: op => {\n        function match(descriptor) {\n          if (!descriptor) return;\n          if (descriptor instanceof Handle) return op.target.isEqual(descriptor);\n          return _.some(descriptor, value => match(value));\n        }\n        if (match(connector.at)) {\n          reject(op.error);\n          cleanup();\n        }\n      }});\n\n      let unwatch = this.watch(() => connector.ready, ready => {\n        if (!ready) return;\n        unwatch();\n        unwatch = null;\n        callbackPromise = promiseFinally(\n          callback(scope.result), () => {callbackPromise = null; cleanup();}\n        ).then(result => {resolve(result);}, error => {reject(error);});\n      });\n\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (unintercept) {unintercept(); unintercept = null;}\n        if (connector) {connector.destroy(); connector = null;}\n        if (callbackPromise && callbackPromise.cancel) callbackPromise.cancel();\n      };\n\n      cancel = () => {\n        reject(new Error('Canceled'));\n        cleanup();\n      };\n    });\n    return promiseCancel(promise, cancel);\n  }\n\n  watch(subjectFn, callbackFn, options) {\n    let numCallbacks = 0;\n\n    const unwatch = this._vue.$watch(subjectFn, (newValue, oldValue) => {\n      numCallbacks++;\n      if (numCallbacks === 1) {\n        // Delay the immediate callback until we've had a chance to return the unwatch function.\n        Promise.resolve().then(() => {\n          if (numCallbacks > 1 || subjectFn() !== newValue) return;\n          callbackFn(newValue, oldValue);\n          angularCompatibility.digest();\n        });\n      } else {\n        callbackFn(newValue, oldValue);\n        angularCompatibility.digest();\n      }\n    }, {immediate: true, deep: options && options.deep});\n\n    return unwatch;\n  }\n\n  when(expression, options) {\n    let cleanup, timeoutHandle;\n    let promise = new Promise((resolve, reject) => {\n      let unwatch = this.watch(expression, value => {\n        if (!value) return;\n        // Wait for computed properties to settle and double-check.\n        Vue.nextTick(() => {\n          value = expression();\n          if (!value) return;\n          resolve(value);\n          cleanup();\n        });\n      });\n      if (_.has(options, 'timeout')) {\n        timeoutHandle = setTimeout(() => {\n          timeoutHandle = null;\n          reject(new Error(options.timeoutMessage || 'Timeout'));\n          cleanup();\n        }, options.timeout);\n      }\n      cleanup = () => {\n        if (unwatch) {unwatch(); unwatch = null;}\n        if (timeoutHandle) {clearTimeout(timeoutHandle); timeoutHandle = null;}\n        reject(new Error('Canceled'));\n      };\n    });\n    promise = promiseCancel(promiseFinally(promise, cleanup));\n    if (options && options.scope) options.scope.$on('$destroy', () => {promise.cancel();});\n    return promise;\n  }\n\n  checkObjectsForRogueProperties() {\n    this._tree.checkVueObject(this._tree.root, '/');\n  }\n\n  static get computedPropertyStats() {return this._tree.computedPropertyStats;}\n\n  static connectWorker(webWorker) {\n    if (bridge) throw new Error('Worker already connected');\n    if (_.isString(webWorker)) {\n      const Worker = window.SharedWorker || window.Worker;\n      if (!Worker) throw new Error('Browser does not implement Web Workers');\n      webWorker = new Worker(webWorker);\n    }\n    bridge = new Bridge(webWorker);\n    if (logging) bridge.enableLogging(logging);\n    return bridge.init(webWorker).then(\n      ({exposedFunctionNames, firebaseSdkVersion}) => {\n        Object.defineProperty(Truss, 'FIREBASE_SDK_VERSION', {value: firebaseSdkVersion});\n        for (const name of exposedFunctionNames) {\n          Truss.worker[name] = bridge.bindExposedFunction(name);\n        }\n      }\n    );\n  }\n\n  static get worker() {return workerFunctions;}\n  static preExpose(functionName) {\n    Truss.worker[functionName] = bridge.bindExposedFunction(functionName);\n  }\n\n  static bounceConnection() {return bridge.bounceConnection();}\n  static suspend() {return bridge.suspend();}\n  static debugPermissionDeniedErrors(simulatedTokenGenerator, maxSimulationDuration, callFilter) {\n    return bridge.debugPermissionDeniedErrors(\n      simulatedTokenGenerator, maxSimulationDuration, callFilter);\n  }\n\n  static debounceAngularDigest(wait) {\n    angularCompatibility.debounceDigest(wait);\n  }\n\n  static escapeKey(key) {return escapeKey(key);}\n  static unescapeKey(escapedKey) {return unescapeKey(escapedKey);}\n\n  static enableLogging(fn) {\n    logging = fn;\n    if (bridge) bridge.enableLogging(fn);\n  }\n\n  // Duplicate static constants on instance for convenience.\n  get SERVER_TIMESTAMP() {return Truss.SERVER_TIMESTAMP;}\n  get VERSION() {return Truss.VERSION;}\n  get FIREBASE_SDK_VERSION() {return Truss.FIREBASE_SDK_VERSION;}\n}\n\nObject.defineProperties(Truss, {\n  SERVER_TIMESTAMP: {value: SERVER_TIMESTAMP},\n  VERSION: {value: VERSION}\n});\n\nangularCompatibility.defineModule(Truss);\n"]}