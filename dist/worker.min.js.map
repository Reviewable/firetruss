{"version":3,"sources":["../src/worker/worker.js"],"names":["interceptConsoleLog","consoleIntercepted","const","lastTestIndex","originalLog","console","log","let","message","Array","prototype","join","call","arguments","test","apply","replace","match","g1","g2","simulationConsoleLogs","undefined","length","pop","push","errorToJson","error","json","name","propertyNames","Object","getOwnPropertyNames","i","list","propertyName","snapshotToJson","snapshot","options","url","ref","toString","omitValue","exists","hasChildren","childrenKeys","value","val","orderChildren","key","hasOwnProperty","defineProperty","forEach","child","$key","e","valueError","createRef","terms","context","Firebase","term","slice","extra","hashJson","sha1","CryptoJS","algo","SHA1","create","_hashJson","finalize","type","isArray","Boolean","Number","String","update","keys","sort","Error","acceptConnections","onconnect","self","event","fireworkers","Fireworker","ports","localStorage","flushPending","simulationQueue","Promise","resolve","LocalStorage","this","_items","_pendingItems","_initialized","_flushPending","bind","init","items","_update","item","setImmediate","_send","msg","prototypeAccessors","get","n","getItem","setItem","targetItem","removeItem","this$1","splice","clear","port","ping","_port","_callbacks","_messages","_flushMessageQueue","onmessage","_receive","storage","exposedFunctionNames","_exposed","firebaseSdkVersion","SDK_VERSION","destroy","callback","cancel","k","indexOf","lastTouched","Date","now","bounceConnection","goOffline","goOnline","_firstMessageReceived","data","_receiveMessage","promise","fn","reject","oneWay","id","then","result","postMessage","args","authWithCustomToken","authToken","authAnonymously","authWithOAuthToken","provider","credentials","unauth","onAuth","callbackId","authCallback","_onAuthCallback","_offAuth","offAuth","auth","set","on","listenerKey","eventType","snapshotCallback","_onSnapshotCallback","off","cancelCallback","_onCancelCallback","skipCurrent","skipCallback","once","transaction","ref$1","stale","currentValue","currentHash","oldHash","newValue","safeAbort","applyLocally","hash","committed","snapshotJson","nonsequential","onDisconnect","method","simulate","token","simulatedFirebase","catch","remember","code","toLowerCase","expose","CONNECTION_CHECK_INTERVAL","lastConnectionCheck","setInterval","gap","worker","window"],"mappings":"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","file":"worker.min.js","sourcesContent":["/* globals Firebase, CryptoJS, setImmediate, setInterval, self */\n\nconst fireworkers = [];\nlet simulationQueue = Promise.resolve(), consoleIntercepted = false, simulationConsoleLogs;\n\n\nclass LocalStorage {\n  constructor() {\n    this._items = [];\n    this._pendingItems = [];\n    this._initialized = false;\n    this._flushPending = this.flushPending.bind(this);\n  }\n\n  init(items) {\n    if (!this._initialized) {\n      this._items = items;\n      this._initialized = true;\n    }\n  }\n\n  _update(item) {\n    if (!this._pendingItems.length) setImmediate(this._flushPending);\n    this._pendingItems.push(item);\n  }\n\n  flushPending() {\n    if (!fireworkers.length) return;\n    fireworkers[0]._send({msg: 'updateLocalStorage', items: this._pendingItems});\n    this._pendingItems = [];\n  }\n\n  get length() {return this._items.length;}\n\n  key(n) {\n    return this._items[n].key;\n  }\n\n  getItem(key) {\n    for (let item of this._items) {\n      if (item.key === key) return item.value;\n    }\n    return null;\n  }\n\n  setItem(key, value) {\n    let targetItem;\n    for (let item of this._items) {\n      if (item.key === key) {\n        targetItem = item;\n        item.value = value;\n        break;\n      }\n    }\n    if (!targetItem) {\n      targetItem = {key, value};\n      this._items.push(targetItem);\n    }\n    this._update(targetItem);\n  }\n\n  removeItem(key) {\n    for (let i = 0; i < this._items.length; i++) {\n      if (this._items[i].key === key) {\n        this._items.splice(i, 1);\n        this._update({key, value: null});\n        break;\n      }\n    }\n  }\n\n  clear() {\n    for (let item in this._items) {\n      this._update({key: item.key, value: null});\n    }\n    this._items = [];\n  }\n}\n\nself.localStorage = new LocalStorage();\n\n\nclass Fireworker {\n  constructor(port) {\n    this.ping();\n    this._port = port;\n    this._callbacks = {};\n    this._messages = [];\n    this._flushMessageQueue = this._flushMessageQueue.bind(this);\n    port.onmessage = this._receive.bind(this);\n  }\n\n  init({storage, url}) {\n    if (storage) self.localStorage.init(storage);\n    if (url) new Firebase(url);\n    return {\n      exposedFunctionNames: Object.keys(Fireworker._exposed),\n      firebaseSdkVersion: Firebase.SDK_VERSION\n    };\n  }\n\n  destroy() {\n    for (let key in this._callbacks) {\n      const callback = this._callbacks[key];\n      if (callback.cancel) callback.cancel();\n    }\n    this._callbacks = {};\n    this._port.onmessage = null;\n    this._messages = [];\n    const k = fireworkers.indexOf(this);\n    if (k >= 0) fireworkers[k] = null;\n  }\n\n  ping() {\n    this.lastTouched = Date.now();\n  }\n\n  bounceConnection() {\n    Firebase.goOffline();\n    Firebase.goOnline();\n  }\n\n  _receive(event) {\n    Fireworker._firstMessageReceived = true;\n    this.lastTouched = Date.now();\n    for (let message of event.data) this._receiveMessage(message);\n  }\n\n  _receiveMessage(message) {\n    let promise;\n    try {\n      const fn = this[message.msg];\n      if (typeof fn !== 'function') throw new Error('Unknown message: ' + message.msg);\n      promise = Promise.resolve(fn.call(this, message));\n    } catch(e) {\n      promise = Promise.reject(e);\n    }\n    if (!message.oneWay) {\n      this._send({msg: 'acknowledge', id: message.id});\n      promise.then(result => {\n        this._send({msg: 'resolve', id: message.id, result: result});\n      }, error => {\n        this._send({msg: 'reject', id: message.id, error: errorToJson(error)});\n      });\n    }\n  }\n\n  _send(message) {\n    if (!this._messages.length) setImmediate(this._flushMessageQueue);\n    this._messages.push(message);\n  }\n\n  _flushMessageQueue() {\n    this._port.postMessage(this._messages);\n    this._messages = [];\n  }\n\n  call({name, args}) {\n    try {\n      return Promise.resolve(Fireworker._exposed[name].apply(null, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  authWithCustomToken({url, authToken, options}) {\n    return createRef(url).authWithCustomToken(authToken, options);\n  }\n\n  authAnonymously({url, options}) {\n    return createRef(url).authAnonymously(options);\n  }\n\n  authWithOAuthToken({url, provider, credentials, options}) {\n    return createRef(url).authWithOAuthToken(provider, credentials, options);\n  }\n\n  unauth({url}) {\n    return createRef(url).unauth();\n  }\n\n  onAuth({url, callbackId}) {\n    const authCallback = this._callbacks[callbackId] = this._onAuthCallback.bind(this, callbackId);\n    authCallback.cancel = this._offAuth.bind(this, url, authCallback);\n    createRef(url).onAuth(authCallback);\n  }\n\n  _offAuth(url, authCallback) {\n    createRef(url).offAuth(authCallback);\n  }\n\n  _onAuthCallback(callbackId, auth) {\n    this._send({msg: 'callback', id: callbackId, args: [auth]});\n  }\n\n  set({url, value}) {\n    return createRef(url).set(value);\n  }\n\n  update({url, value}) {\n    return createRef(url).update(value);\n  }\n\n  on({listenerKey, url, terms, eventType, callbackId, options}) {\n    options = options || {};\n    options.orderChildren = false;\n    if (terms) {\n      for (let term of terms) {\n        if (term[0] === 'orderByChild' || term[0] === 'orderByValue') {\n          options.orderChildren = true;\n          break;\n        }\n      }\n    }\n    const snapshotCallback = this._callbacks[callbackId] =\n      this._onSnapshotCallback.bind(this, callbackId, options);\n    snapshotCallback.listenerKey = listenerKey;\n    snapshotCallback.eventType = eventType;\n    snapshotCallback.cancel = this.off.bind(this, {listenerKey, url, terms, eventType, callbackId});\n    const cancelCallback = this._onCancelCallback.bind(this, callbackId);\n    createRef(url, terms).on(eventType, snapshotCallback, cancelCallback);\n    options.skipCurrent = false;\n  }\n\n  off({listenerKey, url, terms, eventType, callbackId}) {\n    let snapshotCallback;\n    if (callbackId) {\n      // Callback IDs will not be reused across on() calls, so it's safe to just delete it.\n      snapshotCallback = this._callbacks[callbackId];\n      delete this._callbacks[callbackId];\n    } else {\n      for (let key of Object.keys(this._callbacks)) {\n        if (!this._callbacks.hasOwnProperty(key)) continue;\n        const callback = this._callbacks[key];\n        if (callback.listenerKey === listenerKey &&\n            (!eventType || callback.eventType === eventType)) {\n          delete this._callbacks[key];\n        }\n      }\n    }\n    createRef(url, terms).off(eventType, snapshotCallback);\n  }\n\n  _onSnapshotCallback(callbackId, options, snapshot) {\n    if (options.skipCurrent || options.skipCallback) return;\n    this._send({\n      msg: 'callback', id: callbackId, args: [null, snapshotToJson(snapshot, options)]\n    });\n  }\n\n  _onCancelCallback(callbackId, error) {\n    delete this._callbacks[callbackId];\n    this._send({msg: 'callback', id: callbackId, args: [errorToJson(error)]});\n  }\n\n  once({url, terms, eventType, options}) {\n    return createRef(url, terms).once(eventType).then(\n      snapshot => snapshotToJson(snapshot, options));\n  }\n\n  transaction({url, oldHash, newValue, options}) {\n    const ref = createRef(url);\n    let stale, currentValue, currentHash;\n\n    return ref.transaction(value => {\n      currentValue = value;\n      currentHash = hashJson(value);\n      stale = oldHash !== currentHash;\n      if (stale) return;\n      if (newValue === undefined && options.safeAbort) return value;\n      return newValue;\n    }, undefined, options.applyLocally).then(result => {\n      if (stale) {\n        return {stale, value: currentValue, hash: currentHash};\n      } else {\n        return {\n          stale: false, committed: result.committed, snapshotJson: snapshotToJson(result.snapshot)\n        };\n      }\n    }, error => {\n      if (options.nonsequential && error.message === 'set') {\n        return ref.once('value').then(\n          value => ({stale: true, value: value, hash: hashJson(value)}));\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  onDisconnect({url, method, value}) {\n    const onDisconnect = createRef(url).onDisconnect();\n    return onDisconnect[method].call(onDisconnect, value);\n  }\n\n  simulate({token, method, url, args}) {\n    interceptConsoleLog();\n    let simulatedFirebase;\n    return (simulationQueue = simulationQueue.catch(() => {}).then(() => {\n      simulationConsoleLogs = [];\n      simulatedFirebase = createRef(url, null, 'permission_denied_simulator');\n      simulatedFirebase.unauth();\n      return simulatedFirebase.authWithCustomToken(token, function() {}, {remember: 'none'});\n    }).then(() => {\n      return simulatedFirebase[method].apply(simulatedFirebase, args);\n    }).then(() => {\n      return null;\n    }, e => {\n      const code = e.code || e.message;\n      if (code && code.toLowerCase() === 'permission_denied') {\n        return simulationConsoleLogs.join('\\n');\n      } else {\n        return 'Got a different error in simulation: ' + e;\n      }\n    }));\n  }\n\n  static expose(fn, name) {\n    name = name || fn.name;\n    if (!name) throw new Error('Cannot expose a function with no name: ' + fn);\n    if (Fireworker._exposed.hasOwnProperty(name)) {\n      throw new Error(`Function ${name}() already exposed`);\n    }\n    if (Fireworker._firstMessageReceived) {\n      throw new Error('Too late to expose function, worker in use');\n    }\n    Fireworker._exposed[name] = fn;\n  }\n}\n\nFireworker._exposed = {};\nFireworker._firstMessageReceived = false;\n\n\nfunction interceptConsoleLog() {\n  if (consoleIntercepted) return;\n  const originalLog = console.log;\n  let lastTestIndex;\n  console.log = function() {\n    let message = Array.prototype.join.call(arguments, ' ');\n    if (!/^(FIREBASE: \\n?)+/.test(message)) return originalLog.apply(console, arguments);\n    message = message\n      .replace(/^(FIREBASE: \\n?)+/, '')\n      .replace(/^\\s+([^.]*):(?:\\.(read|write|validate):)?.*/g, function(match, g1, g2) {\n        g2 = g2 || 'read';\n        return ' ' + g2 + ' ' + g1;\n      });\n    if (/^\\s+/.test(message)) {\n      const match = message.match(/^\\s+=> (true|false)/);\n      if (match) {\n        simulationConsoleLogs[lastTestIndex] =\n          (match[1] === 'true' ? ' \\u2713' : ' \\u2717') + simulationConsoleLogs[lastTestIndex];\n        lastTestIndex = undefined;\n      } else {\n        if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n        simulationConsoleLogs.push(message);\n        lastTestIndex = simulationConsoleLogs.length - 1;\n      }\n    } else if (/^\\d+:\\d+: /.test(message)) {\n      simulationConsoleLogs.push('   ' + message);\n    } else {\n      if (lastTestIndex === simulationConsoleLogs.length - 1) simulationConsoleLogs.pop();\n      simulationConsoleLogs.push(message);\n      lastTestIndex = undefined;\n    }\n  };\n  consoleIntercepted = true;\n}\n\nfunction errorToJson(error) {\n  const json = {name: error.name};\n  const propertyNames = Object.getOwnPropertyNames(error);\n  for (let propertyName of propertyNames) {\n    json[propertyName] = error[propertyName];\n  }\n  return json;\n}\n\nfunction snapshotToJson(snapshot, options) {\n  const url = snapshot.ref().toString();\n  if (options && options.omitValue) {\n    return {url, exists: snapshot.exists(), hasChildren: snapshot.hasChildren()};\n  } else {\n    try {\n      const value = snapshot.val();\n      let childrenKeys;\n      if (options && options.orderChildren && typeof value === 'object') {\n        for (let key in value) {\n          if (!value.hasOwnProperty(key)) continue;\n          // Non-enumerable properties won't be transmitted when sending.\n          Object.defineProperty(value[key], '$key', {value: key});\n        }\n        childrenKeys = [];\n        snapshot.forEach(child => {childrenKeys.push(child.$key);});\n      }\n      return {url, value, childrenKeys};\n    } catch (e) {\n      return {\n        url, exists: snapshot.exists(), hasChildren: snapshot.hasChildren(),\n        valueError: errorToJson(e)\n      };\n    }\n  }\n}\n\nfunction createRef(url, terms, context) {\n  try {\n    let ref = new Firebase(url, context);\n    if (terms) {\n      for (let term of terms) ref = ref[term[0]].apply(ref, term.slice(1));\n    }\n    return ref;\n  } catch (e) {\n    e.extra = {url, terms, context};\n    throw e;\n  }\n}\n\nfunction hashJson(json) {\n  if (json === null) return null;\n  const sha1 = CryptoJS.algo.SHA1.create();\n  _hashJson(json, sha1);\n  return 'sha1:' + sha1.finalize().toString();\n}\n\nfunction _hashJson(json, sha1) {\n  let type = typeof json;\n  if (type === 'object') {\n    if (json === null) type = 'null';\n    else if (Array.isArray(json)) type = 'array';\n    else if (json instanceof Boolean) type = 'boolean';\n    else if (json instanceof Number) type = 'number';\n    else if (json instanceof String) type = 'string';\n  }\n  switch (type) {\n    case 'undefined': sha1.update('u'); break;\n    case 'null': sha1.update('n'); break;\n    case 'boolean': sha1.update(json ? 't' : 'f'); break;\n    case 'number': sha1.update('x' + json); break;\n    case 'string': sha1.update('s' + json); break;\n    case 'array':\n      sha1.update('[');\n      for (let i = 0; i < json.length; i++) _hashJson(json[i], sha1);\n      sha1.update(']');\n      break;\n    case 'object':\n      sha1.update('{');\n      const keys = Object.keys(json);\n      keys.sort();\n      for (let i = 0; i < keys.length; i++) _hashJson(json[keys[i]], sha1);\n      sha1.update('}');\n      break;\n    default:\n      throw new Error(`Unable to hash non-JSON data of type ${type}: ${json}`);\n  }\n}\n\nfunction acceptConnections() {\n  if (typeof onconnect !== 'undefined') {\n    self.onconnect = function(event) {\n      fireworkers.push(new Fireworker(event.ports[0]));\n    };\n  } else {\n    fireworkers.push(new Fireworker(self));\n  }\n  self.localStorage.flushPending();\n}\n\nconst CONNECTION_CHECK_INTERVAL = 60 * 1000;\nlet lastConnectionCheck = Date.now();\nsetInterval(function findAbandonedConnections() {\n  const now = Date.now(), gap = now - lastConnectionCheck - CONNECTION_CHECK_INTERVAL;\n  lastConnectionCheck = now;\n  fireworkers.forEach(worker => {\n    if (!worker) return;\n    if (gap >= 1000 && worker.lastTouched <= now - gap) worker.lastTouched += gap;\n    if (now - worker.lastTouched >= 3 * CONNECTION_CHECK_INTERVAL) worker.destroy();\n  });\n  let k;\n  while ((k = fireworkers.indexOf(null)) >= 0) fireworkers.splice(k, 1);\n}, CONNECTION_CHECK_INTERVAL);\n\nself.Fireworker = Fireworker;\nself.window = self;\nacceptConnections();\n"]}